{
  "permissions": {
    "allow": [
      "Bash(markdownlint:*)",
      "Bash(git switch:*)",
      "Bash(npm run:*)",
      "Read(//Users/wesleyfrederick/**)",
      "Bash(tree:*)",
      "Bash(git cp:*)",
      "Bash(npm test:*)",
      "Bash(PATH=\"/usr/bin:/bin:/usr/sbin:/sbin\" which claude)",
      "Bash(npx biome check:*)",
      "Bash(node --test:*)",
      "Bash(node:*)",
      "Bash(for:*)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(wc:*)",
      "Bash(head:*)",
      "Bash(done)",
      "Bash(git checkout:*)",
      "mcp__playwright__browser_snapshot",
      "mcp__playwright__browser_tabs",
      "mcp__playwright__browser_click",
      "mcp__playwright__browser_evaluate",
      "Bash(ruff check:*)",
      "Bash(npx tsc:*)",
      "Bash(chmod:*)",
      "Bash(./dist/utils/llm/anth.js \"test prompt\")",
      "Bash(./dist/utils/llm/anth.js --completion)",
      "Bash(./utils/llm/anth-ts.js --completion)",
      "Bash(uv tool:*)",
      "Bash(if [ -z \"$ANTHROPIC_API_KEY\" ])",
      "Bash(then echo \"❌ ANTHROPIC_API_KEY is not set\")",
      "Bash(else echo \"✅ ANTHROPIC_API_KEY is set\")",
      "Bash(fi)",
      "Bash(./utils/llm/anth-ts.js:*)",
      "Bash(python:*)",
      "Bash(cat:*)",
      "Bash(git cplsm:*)",
      "Bash(git add:*)",
      "Bash(ln:*)",
      "Bash(npm ls:*)",
      "Bash(npm install:*)",
      "Bash(echo $?)",
      "Bash(/dev/null)",
      "Bash(echo \"EXIT_CODE: $?\")",
      "Bash(git checkpoint:*)",
      "Bash(cp:*)",
      "Bash(do)",
      "Bash(echo:*)",
      "Bash(git stash:*)",
      "Bash(test:*)",
      "Bash(git pull:*)",
      "Bash(npx vitest run:*)",
      "Bash(git log:*)",
      "Bash(git cplms)",
      "Bash(/Users/wesleyfrederick/.claude/scripts/smart-lint/smart-lint.sh:*)",
      "Read(///**)",
      "SlashCommand(/agentic-workflows:tasks:create-implementation-prompt:*)",
      "Bash(git cpdf)",
      "Bash(tee /tmp/test-output.log)",
      "Bash(tee /tmp/final-test-output.log)",
      "Skill(superpowers:using-git-worktrees)",
      "Skill(superpowers:writing-plans)",
      "Skill(writing-skills)",
      "Bash(bash:*)",
      "Skill(using-superpowers)",
      "Skill(writing-plans)",
      "Skill(using-git-worktrees)",
      "Skill(subagent-driven-development)"
    ],
    "deny": [],
    "ask": []
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "Context7",
    "deepwiki"
  ],
  "disabledMcpjsonServers": [
    "deepwiki"
  ],
  "outputStyle": "application-tech-lead"
}
