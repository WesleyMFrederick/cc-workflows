{
	"filePath": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md",
	"content": "# Citation Manager - Content Aggregation Feature PRD\n\n**Critial LLM Initialization Instructions**\nWhen first reading this file, you MUST IMMEDIATELY run citation manager to extract base paths: `npm run citation:base-paths <this-file-path> -- --format json`. Read ALL discovered base path files to gather complete architectural context before proceeding.\n\n## Overview (tl;dr)\n\n**Baseline:** `Citation Manager` tool\n- validates markdown citation links\n- provides auto-fix capabilities for broken citations\n- extracts links in a document so an LLM can read related content\n\n**Improvement:** extend extraction to\n- extract linked content, both full documents and link fragments (ie \\#header and \\#^blocks)\n- return a single, self contained document with linked content written in place\n- cache returned document to reduce read/compile time\n- track changes to links in order to re-compile and re-cache, keeping cache in sync\n\n**Value:** SAVES TIME & IMPROVES LLM FOCUS by automating context engineering vs. manually constructing context documents\n\n---\n\n## Goals\n\n- **Primary Goal:** Extract, aggregate, and structure content from markdown links (fragments or full documents) into a single context package\n- **User Outcome:** Reduce manual effort required to gather and structure context for complex prompts\n- **Operational Capability:** Provide an automated workflow for building LLM context from distributed documentation\n- **Strategic Goal:** Deliver the first feature improvement that leverages the workspace framework\n\n---\n\n## Background Context\n\nAI-assisted development workflows frequently require gathering specific sections from multiple documentation files into a single context file. This is currently a manual, error-prone process involving copying and pasting content while maintaining proper attribution and structure.\n\nThis feature transforms the citation-manager from a validation-only tool into a content aggregation tool that can automatically assemble context files based on the links in a source document.\n\n---\n\n## Alignment with Product Vision\n\nThis feature directly supports the CC Workflows vision by:\n\n- **Refined:** Enhances the citation-manager with a high-value capability that leverages its existing link parsing infrastructure\n- **Repeatable:** Establishes a standardized pattern for automated context assembly across all documentation\n- **Robust:** Builds on the validated workspace testing framework to ensure reliable content extraction\n- **Impact:** Demonstrates immediate value from the centralized workspace framework\n\n---\n\n## Changelog\n\n| Date | Version | Description | Author |\n|------|---------|-------------|---------|\n| 2025-10-03 | 1.0 | Initial feature PRD creation with Epic 2 and US 1.4 from workspace PRD | Product Manager Agent |\n| 2025-10-04 | 2.1 | Split US1.4 into US1.4a (Test Migration) and US1.4b (DI Refactoring) per ADR-001, rewrote all AC in EARS format, updated dependency chain for Epic 2 | Application Tech Lead |\n| 2025-10-07 | 2.2 | Mark US1.5 as COMPLETE, update Technical Lead Feedback sections: Parser data contract RESOLVED (US1.5 Phase 1), US1.5 caching feedback IMPLEMENTED, Epic 2 feedback remains active for Stories 2.2-2.3 | Application Tech Lead |\n\n---\n\n## Requirements\n\n### Functional Requirements\n- **FR2: Shared Testing Framework:** Test suite SHALL run via the workspace's shared Vitest framework. ^FR2\n- **FR4: Link Section Identification:** The `citation-manager` SHALL parse a given markdown document and identify all links that point to local markdown files, distinguishing between links **with section anchors and those without**. ^FR4\n- **FR5: Section Content Extraction:** The `citation-manager` SHALL be able to extract content from a target file in two ways: 1) If a section anchor is provided, it SHALL extract the full content under that specific heading, 2) If no section anchor is provided, it SHALL extract the **entire content of the file**. ^FR5\n- **FR6: Content Aggregation:** The `citation-manager` SHALL aggregate the extracted content into a single markdown file, where each piece of content is **preceded by a markdown header that clearly identifies the source file and, if applicable, the section heading**. ^FR6\n- **FR7: Centralized Execution:** The new aggregation feature SHALL be exposed via an **`--extract-context <output_file.md>` flag on the existing `validate` command**. ^FR7\n- **FR8: Preserve Existing Functionality:** All existing `citation-manager` features SHALL be preserved and function correctly. ^FR8\n- **FR9: Test Migration:** All existing unit tests for the `citation-manager` SHALL be migrated to the workspace and pass. ^FR9\n\n### Non-Functional Requirements\n- **NFR3: Reliability:** The citation-manager SHALL include unit tests that achieve at least 50% code coverage on new functionality. ^NFR3\n- **NFR4: Design Adherence:** Implementation SHALL adhere to the workspace's MVB design principles and testing strategy. ^NFR4\n- **NFR5: Performance:** The system SHALL parse each unique file at most once per command execution to minimize redundant I/O and processing time. ^NFR5\n\n## Technical Considerations\n\n> [!success] **Technical Lead Feedback**: Parser output data contract design ✅ RESOLVED\n> _Resolution_: MarkdownParser.Output.DataContract schema validated and documented via [US1.5 Phase 1](user-stories/us1.5-implement-cache-for-parsed-files/us1.5-implement-cache-for-parsed-files.md#Phase%201%20Parser%20Output%20Contract%20Validation%20&%20Documentation). Base schema includes `{ filePath, content, tokens, links, headings, anchors }` with LinkObject and AnchorObject structures.\n> _Resolution Date_: 2025-10-07\n> _Epic 2 Note_: Base schema sufficient for ContentExtractor. May require minor extensions for content extraction metadata if Story 2.1 analysis identifies gaps.\n<!-- -->\n> [!warning] **Technical Lead Feedback**: Parser-extractor interaction model design required (Epic 2)\n> _Architecture Impact_: The interaction model between the parser and the new extractor component needs to be designed, including the specific data structures they will use to communicate.\n> _Status_: Active - Required before Story 2.2 implementation\n> _Relevant Architecture Principles_: [black-box-interfaces](../../../../../design-docs/Architecture%20Principles.md#^black-box-interfaces), [data-model-first](../../../../../design-docs/Architecture%20Principles.md#^data-model-first), [single-responsibility](../../../../../design-docs/Architecture%20Principles.md#^single-responsibility)\n<!-- -->\n> [!warning] **Technical Lead Feedback**: CLI interface design decision needed (Epic 2)\n> _Architecture Impact_: Research and a design decision are needed to confirm if adding a feature flag to the `validate` command is the correct long-term CLI interface, or if a new, dedicated `extract` command would be more intuitive and extensible.\n> _Status_: Active - Required before Story 2.3 implementation\n> _Relevant Architecture Principles_: [simplicity-first](../../../../../design-docs/Architecture%20Principles.md#^simplicity-first), [follow-conventions](../../../../../design-docs/Architecture%20Principles.md#^follow-conventions), [immediate-understanding](../../../../../design-docs/Architecture%20Principles.md#^immediate-understanding), [extension-over-modification](../../../../../design-docs/Architecture%20Principles.md#^extension-over-modification)\n\n---\n\n## Feature Epics\n\n### Epic: Citation Manager Test Migration & Content Aggregation\n\nThis feature encompasses two critical phases:\n1. **Test Migration (US 1.4)**: Validate the citation-manager migration by ensuring all tests pass in the workspace\n2. **Content Aggregation (US 2.1-2.3)**: Add content extraction and aggregation capabilities to the tool\n\n---\n\n### Story 1.4: Migrate and Validate `citation-manager` Test Suite [SUPERSEDED]\n\n> **⚠️ Story Split per ADR-001**: This story has been decomposed into US1.4a (Test Migration) and US1.4b (DI Refactoring) to separate test framework conversion from architectural refactoring work.\n>\n> **Original AC Mapping**:\n> - US1-4AC1 (file relocation) → US1-4aAC1\n> - US1-4AC2 (Vitest execution) → US1-4aAC3\n> - US1-4AC3 (tests pass) → US1-4aAC5\n> - US1-4AC4 (legacy removal) → US1-4aAC6\n> - US1-4bAC1-6: New requirements for DI refactoring (not in original scope)\n>\n> See [ADR-001: Phased Test Migration Strategy](content-aggregation-architecture.md#ADR-001%20Phased%20Test%20Migration%20Strategy) for decomposition rationale.\n\n---\n\n### Story 1.4a: Migrate citation-manager Test Suite to Vitest\n\n**As a** developer,\n**I want** to migrate the existing `citation-manager` test suite from Node.js test runner to Vitest,\n**so that** tests run via the workspace's shared testing framework and validate zero migration regressions.\n\n#### Story 1.4a Acceptance Criteria\n\n1. WHEN the citation-manager test files and fixtures are relocated, THEN they SHALL reside at `tools/citation-manager/test/` within the workspace structure. ^US1-4aAC1\n2. The migrated test suite SHALL use Vitest framework with `describe()`, `it()`, and `expect()` syntax, replacing all `node:test` and `node:assert` usage. ^US1-4aAC2\n3. WHEN `npm test` is executed from workspace root, THEN Vitest SHALL discover and execute all citation-manager tests via the shared test configuration. ^US1-4aAC3\n4. All test files SHALL reference the migrated citation-manager CLI at `tools/citation-manager/src/citation-manager.js` using workspace-relative paths. ^US1-4aAC4\n5. GIVEN all test framework conversions are complete, WHEN the migrated test suite executes, THEN all 50+ existing tests SHALL pass without regression. ^US1-4aAC5\n6. WHEN test migration validation confirms success (AC5 satisfied), THEN the legacy test location `src/tools/utility-scripts/citation-links/test/` SHALL be removed. ^US1-4aAC6\n\n**Accepted Technical Debt**: Component tests will temporarily use non-DI instantiation (`new CitationValidator()`) until US1.4b implements constructor-based dependency injection. This deviation from workspace architecture principles is documented in [ADR-001: Phased Test Migration Strategy](content-aggregation-architecture.md#ADR-001%20Phased%20Test%20Migration%20Strategy).\n\n_Depends On_: [US1.3: Make Migrated citation-manager Executable](../../../../../design-docs/features/20250928-cc-workflows-workspace-scaffolding/user-stories/us1.3-make-migrated-citation-manager-executable/us1.3-make-migrated-citation-manager-executable.md)\n_Functional Requirements_: [[#^FR2|FR2]], [[#^FR9|FR9]]\n_User Story Link:_ [us1.4a-migrate-test-suite-to-vitest](user-stories/us1.4a-migrate-test-suite-to-vitest/us1.4a-migrate-test-suite-to-vitest.md)\n\n---\n\n### Story 1.4b: Refactor citation-manager Components for Dependency Injection\n\n**As a** developer,\n**I want** to refactor citation-manager components to use constructor-based dependency injection,\n**so that** the tool aligns with workspace architecture principles and enables proper integration testing with real dependencies.\n\n#### Story 1.4b Acceptance Criteria\n\n1. The CitationValidator, MarkdownParser, and FileCache components SHALL accept all dependencies via constructor parameters rather than creating them internally. ^US1-4bAC1\n2. The citation-manager SHALL provide factory functions at `src/factories/componentFactory.js` that instantiate components with standard production dependencies. ^US1-4bAC2\n3. The citation-manager CLI entry point SHALL use factory functions for component instantiation in production execution paths. ^US1-4bAC3\n4. GIVEN component tests require explicit dependency control, WHEN tests instantiate components, THEN they SHALL bypass factory functions and inject real dependencies directly via constructors. ^US1-4bAC4\n5. The test suite SHALL include component integration tests that validate collaboration between CitationValidator, MarkdownParser, and FileCache using real file system operations per workspace \"Real Systems, Fake Fixtures\" principle. ^US1-4bAC5\n6. WHEN DI refactoring completes and all tests pass, THEN the technical debt \"Lack of Dependency Injection\" documented in content-aggregation-architecture.md SHALL be marked as resolved. ^US1-4bAC6\n\n_Depends On_: Story [Story 1.4a: Migrate citation-manager Test Suite to Vitest](#Story%201.4a%20Migrate%20citation-manager%20Test%20Suite%20to%20Vitest)\n_Enables_: [Story 2.1: Enhance Parser to Handle Full-File and Section Links](#Story%202.1%20Enhance%20Parser%20to%20Handle%20Full-File%20and%20Section%20Links)\n_Closes Technical Debt_: [Lack of Dependency Injection](content-aggregation-architecture.md#Lack%20of%20Dependency%20Injection)\n_Functional Requirements_: [[#^FR2|FR2]], [[#^FR8|FR8]]\n_User Story Link:_ [us1.4b-refactor-components-for-di](user-stories/us1.4b-refactor-components-for-di/us1.4b-refactor-components-for-di.md)\n\n---\n### Story 1.5: Implement a Cache for Parsed File Objects\n\n**As a** `citation-manager` tool,\n**I want** to implement a caching layer that stores parsed file objects (the `MarkdownParser.Output.DataContract`) in memory during a single command run,\n**so that** I can eliminate redundant file read operations, improve performance, and provide an efficient foundation for new features like content extraction.\n\n#### Story 1.5 Acceptance Criteria\n\n1. GIVEN a file has already been parsed during a command's execution, WHEN a subsequent request is made for its parsed data, THEN the system SHALL return the `MarkdownParser.Output.DataContract` object from the in-memory cache instead of re-reading the file from disk. ^US1-5AC1\n2. GIVEN a file has not yet been parsed, WHEN a request is made for its parsed data, THEN the system SHALL parse the file from disk, store the resulting `MarkdownParser.Output.DataContract` object in the cache, and then return it. ^US1-5AC2\n3. The `CitationValidator` component SHALL be refactored to use this caching layer for all file parsing operations. ^US1-5AC3\n4. WHEN validating a document that contains multiple links to the same target file, THEN the target file SHALL only be read from disk and parsed once per command execution. ^US1-5AC4\n5. GIVEN the new caching layer is implemented, WHEN the full test suite is executed, THEN all existing tests SHALL pass, confirming zero functional regressions. ^US1-5AC5\n\n_Depends On_: [Story 1.4b: Refactor citation-manager Components for Dependency Injection](#Story%201.4b%20Refactor%20citation-manager%20Components%20for%20Dependency%20Injection)\n_Enables_: [Story 2.1: Enhance Parser to Handle Full-File and Section Links](#Story%202.1%20Enhance%20Parser%20to%20Handle%20Full-File%20and%20Section%20Links)\n_Closes Technical Debt_: [Redundant File Parsing During Validation](content-aggregation-architecture.md#Redundant%20File%20Parsing%20During%20Validation)\n_Functional Requirements_: [[#^FR8|FR8]]\n_Non-Functional Requirements_: [[#^NFR5|NFR5]]\n_User Story Link:_ [us1.5-implement-cache-for-parsed-files](user-stories/us1.5-implement-cache-for-parsed-files/us1.5-implement-cache-for-parsed-files.md)\n_Status_: ✅ COMPLETE (2025-10-07)\n\n> [!success] **Technical Lead Feedback**: Caching Layer for Performance and Modularity ✅ IMPLEMENTED\n> _Resolution_: ParsedFileCache component successfully implemented with Map-based in-memory caching. CitationValidator refactored to use cache via constructor injection. Factory pattern integration complete. All acceptance criteria met with zero regressions.\n> _Resolution Date_: 2025-10-07\n> _Architecture Impact Realized_:\n> - **ParsedFileCache Component**: New caching component sits between CitationValidator and MarkdownParser, managing in-memory lifecycle of MarkdownParser.Output.DataContract objects\n> - **CitationValidator Refactoring**: Refactored to accept ParsedFileCache dependency via constructor, uses cache for all file parsing operations (lines 107, 471)\n> - **CLI Orchestrator Updates**: Handles async validator methods, factory creates and injects cache into validator\n> - **Public Contracts**: ParsedFileCache provides `resolveParsedFile()` async method, CitationValidator constructor signature changed to accept cache dependency\n> _Architecture Principles Applied_:\n> - [Dependency Abstraction](../../../../../design-docs/Architecture%20Principles.md#^dependency-abstraction): CitationValidator depends on ParsedFileCache abstraction, not concrete MarkdownParser ✅\n> - [Single Responsibility](../../../../../design-docs/Architecture%20Principles.md#^single-responsibility): ParsedFileCache has single responsibility for managing parsed file object lifecycle ✅\n> - [One Source of Truth](../../../../../design-docs/Architecture%20Principles.md#^one-source-of-truth): Cache is authoritative source for parsed data during command execution ✅\n---\n\n### Story 2.1: Enhance Parser to Handle Full-File and Section Links\n\n**As a** developer,\n**I want** the parser to identify links to both entire markdown files and specific sections within them,\n**so that** I can handle both types of content extraction in a unified way.\n\n#### Story 2.1 Acceptance Criteria\n1. GIVEN a markdown file, WHEN the parser runs, THEN it SHALL extract an array of all links pointing to local markdown files, distinguishing between links with section anchors and those without. ^US2-1AC1\n2. GIVEN the parser identifies multiple links to the same file, but at least one link includes a section anchor, THEN the system SHALL prioritize the section link(s) for extraction and issue a warning that the full file content will be ignored in favor of the more specific section(s). ^US2-1AC2\n3. GIVEN the parser identifies only links without section anchors to a specific file, THEN it SHALL designate the entire file for content extraction. ^US2-1AC3\n\n> [!note] **Technical Lead Feedback**: Parser output data contract - Base schema validated ✅\n> _Base Schema Status_: MarkdownParser.Output.DataContract validated in [US1.5 Phase 1](user-stories/us1.5-implement-cache-for-parsed-files/us1.5-implement-cache-for-parsed-files.md#Phase%201%20Parser%20Output%20Contract%20Validation%20&%20Documentation). Current schema: `{ filePath, content, tokens, links, headings, anchors }` with LinkObject (`linkType`, `scope`, `anchorType`, `source`, `target`) and AnchorObject (`anchorType`, `id`, `rawText`) structures.\n> _Epic 2 Analysis Required_: Story 2.1 implementation should review existing LinkObject schema to determine if current `linkType`/`scope`/`anchorType` fields sufficiently distinguish full-file vs. section links, or if minor schema extensions are needed for content extraction metadata.\n> _Relevant Architecture Principles_: [data-model-first](../../../../../design-docs/Architecture%20Principles.md#^data-model-first), [primitive-first-design](../../../../../design-docs/Architecture%20Principles.md#^primitive-first-design), [illegal-states-unrepresentable](../../../../../design-docs/Architecture%20Principles.md#^illegal-states-unrepresentable), [explicit-relationships](../../../../../design-docs/Architecture%20Principles.md#^explicit-relationships)\n<!-- -->\n> [!success] **Technical Lead Research**: Section extraction POC validated ✅ (2025-10-07)\n> _Research Objective_: Prove we can walk marked.js tokens to extract section content by heading level\n> _POC Location_: `tools/citation-manager/test/poc-section-extraction.test.js`\n> _Key Findings_:\n> - ✅ **Token walking works**: marked.js tokens provide complete AST for section boundary detection\n> - ✅ **Boundary detection validated**: Algorithm correctly stops at next same-or-higher level heading\n> - ✅ **Content reconstruction proven**: Concatenating `token.raw` properties rebuilds original markdown\n> - ✅ **Nested sections handled**: H3/H4 subsections correctly included under parent H2\n> _Implementation Pattern_: Use `walkTokens`-like traversal (mirrors `MarkdownParser.extractHeadings()` pattern at lines 321-343)\n> _API Validated_: `extractSection(tokens, headingText, headingLevel)` → `{ heading: { level, text, raw }, tokens: [...], content: string }`\n> _Context7 Research_: marked.js `walkTokens` API provides idiomatic pattern for token traversal (child tokens processed before siblings)\n> _Production Integration Path_: Create `ContentExtractor` component accepting `ParsedFileCache` dependency, leverage existing token structure from MarkdownParser.Output.DataContract\n> _Test Coverage_: 7/7 POC tests passing (100% success rate)\n> _Next Step_: Story 2.2 ContentExtractor implementation can use validated algorithm and API contract\n\n_Depends On_: [Story 1.5: Implement a Cache for Parsed File Objects](#Story%201.5%20Implement%20a%20Cache%20for%20Parsed%20File%20Objects)\n_Functional Requirements_: [[#^FR4|FR4]]\n\n### Story 2.2: Implement Unified Content Extractor with Metadata\n\n**As a** developer,\n**I want** to create a content extraction module that can return either a full file's content or a specific section's content, including source metadata,\n**so that** I have a single, reliable way to retrieve content for aggregation.\n\n#### Story 2.2 Acceptance Criteria\n1. GIVEN a file path and an optional heading, WHEN the extractor is called, THEN it SHALL return a structured object containing the extracted `content` string and `metadata`. ^US2-2AC1\n2. IF a heading is provided, THEN the `content` SHALL be the text between that heading and the next heading of an equal or higher level. ^US2-2AC2\n3. IF no heading is provided, THEN the `content` SHALL be the entire content of the file. ^US2-2AC3\n4. GIVEN a file path or heading that does not exist, WHEN the extractor is called, THEN it SHALL fail gracefully by returning null or an empty object and log a warning. ^US2-2AC4\n\n> [!warning] **Technical Lead Feedback**: Parser-extractor interaction model design required\n> _Architecture Impact_: The interaction model between the parser and this new extractor component needs to be designed, including the specific data structures they will use to communicate.\n> _Relevant Architecture Principles_: [black-box-interfaces](../../../../../design-docs/Architecture%20Principles.md#^black-box-interfaces), [data-model-first](../../../../../design-docs/Architecture%20Principles.md#^data-model-first), [single-responsibility](../../../../../design-docs/Architecture%20Principles.md#^single-responsibility)\n<!-- -->\n> [!success] **Technical Lead Research**: Parser-extractor data contract validated ✅ (2025-10-07)\n> _Research Finding_: POC confirms ContentExtractor can consume MarkdownParser.Output.DataContract directly without schema changes\n> _Data Flow Validated_:\n> 1. `ParsedFileCache.resolveParsedFile(filePath)` → MarkdownParser.Output.DataContract (`{ tokens, headings, content, ... }`)\n> 2. `ContentExtractor.extractSection(tokens, headingText, headingLevel)` → Section data (`{ heading, tokens, content }`)\n> 3. No parser modifications needed - existing token structure sufficient\n> _Interaction Model_: ContentExtractor accepts `ParsedFileCache` as constructor dependency (DI pattern from US1.4b/US1.5)\n> _Interface Contract_:\n>\n> ```javascript\n> class ContentExtractor {\n>   constructor(parsedFileCache) { ... }\n>   async extractSection(filePath, headingText, headingLevel) {\n>     const parsed = await this.parsedFileCache.resolveParsedFile(filePath);\n>     return this.extractSectionFromTokens(parsed.tokens, headingText, headingLevel);\n>   }\n>   async extractFullFile(filePath) {\n>     const parsed = await this.parsedFileCache.resolveParsedFile(filePath);\n>     return { content: parsed.content, tokens: parsed.tokens, metadata: {...} };\n>   }\n> }\n> ```\n>\n> _Metadata Structure_: `{ sourceFile: string, section: string|null, heading: object|null, lineRange: {start, end} }`\n> _POC Reference_: See `tools/citation-manager/test/poc-section-extraction.test.js` for validated extraction algorithm\n<!-- -->\n> [!success] **Technical Lead Research**: Block anchor extraction POC validated ✅ (2025-10-07)\n> _Research Objective_: Prove we can extract single block content by `^anchor-id` references\n> _POC Location_: `tools/citation-manager/test/poc-block-extraction.test.js`\n> _Key Findings_:\n> - ✅ **Anchor detection works**: `MarkdownParser.extractAnchors()` correctly identifies all `^anchor-id` patterns at line endings\n> - ✅ **Line-based extraction validated**: Can extract single line/paragraph using anchor's `line` number from MarkdownParser.Output.DataContract\n> - ✅ **Anchor metadata accurate**: Line numbers, column positions, and IDs correctly populated in `anchors` array\n> - ✅ **Multiple block types handled**: Works for paragraphs, headings, list items across different sections\n> _Block Anchor Formats Supported_:\n> 1. Obsidian block references: `Some content ^anchor-id` (end of line)\n> 2. Caret syntax: `^anchor-id` anywhere in line (legacy)\n> 3. Emphasis-marked: `==**text**==` (creates implicit anchor)\n> _API Validated_: `extractBlock(content, anchors, blockId)` → `{ anchor: { anchorType, id, line, column }, content: string, lineNumber: number }`\n> _Key Difference from Sections_: Blocks extract ONLY single line/paragraph (not multi-line), uses line number lookup (not token walking)\n> _Production Integration Path_: ContentExtractor needs both `extractSection()` and `extractBlock()` methods to handle header vs block anchors\n> _Test Coverage_: 9/9 POC tests passing (100% success rate)\n> _Implementation Note_: Current POC extracts single line; production may need paragraph boundary detection for multi-line blocks\n\n_Depends On_: Story 2.1\n_Functional Requirements_: [[#^FR5|FR5]]\n\n### Story 2.3: Add `--extract-context` Flag to `validate` Command\n\n**As a** developer,\n**I want** to add an `--extract-context` flag to the existing `validate` command,\n**so that** I can generate a structured context file based on the links found in a source document.\n\n#### Story 2.3 Acceptance Criteria\n1. GIVEN a new `--extract-context <output_file.md>` flag is added to the `validate` command, WHEN run, THEN it SHALL execute the end-to-end context aggregation process and write the result to the specified output file. ^US2-3AC1\n2. GIVEN the output file, THEN the content from each extracted source SHALL be clearly delineated by a markdown header indicating its origin file (e.g., `## File: path/to/source.md`). ^US2-3AC2\n3. IF content is extracted from a specific section, THEN the header in the output file SHALL also include the section heading (e.g., `## File: path/to/source.md#Section Heading`). ^US2-3AC3\n\n> [!warning] **Technical Lead Feedback**: Research & Design CLI feature flag/command pattern\n> _Architecture Impact_: Research and a design decision are needed to confirm if adding a feature flag to the `validate` command is the correct long-term CLI interface, or if a new, dedicated `extract` command would be more intuitive and extensible.\n> _Relevant Architecture Principles_: [simplicity-first](../../../../../design-docs/Architecture%20Principles.md#^simplicity-first), [follow-conventions](../../../../../design-docs/Architecture%20Principles.md#^follow-conventions), [immediate-understanding](../../../../../design-docs/Architecture%20Principles.md#^immediate-understanding), [extension-over-modification](../../../../../design-docs/Architecture%20Principles.md#^extension-over-modification)\n\n_Depends On_: Story 2.2\n_Functional Requirements_: [[#^FR6|FR6]], [[#^FR7|FR7]]\n\n---\n\n## Feature Validation Approach\n\nThe feature will be validated through:\n\n- **Test Migration Success**: All existing citation-manager tests pass without regressions in the workspace environment (US 1.4)\n- **Content Extraction Functionality**: The `--extract-context` command successfully generates structured output files containing full content from both file-level and section-level links (US 2.1-2.3)\n- **Quality Standards**: New functionality meets the 50% code coverage requirement with integration tests using real file operations\n\n---\n\n## Related Documentation\n\n- [Content Aggregation Architecture](content-aggregation-architecture.md) - Feature-specific architectural enhancements\n- [Workspace PRD](../../../../../design-docs/features/20250928-cc-workflows-workspace-scaffolding/cc-workflows-workspace-prd.md) - Parent workspace requirements\n- [Workspace Architecture](../../../../../design-docs/features/20250928-cc-workflows-workspace-scaffolding/cc-workflows-workspace-architecture.md) - Workspace architectural context\n",
	"tokens": [
		{
			"type": "heading",
			"raw": "# Citation Manager - Content Aggregation Feature PRD\n\n",
			"depth": 1,
			"text": "Citation Manager - Content Aggregation Feature PRD",
			"tokens": [
				{
					"type": "text",
					"raw": "Citation Manager - Content Aggregation Feature PRD",
					"text": "Citation Manager - Content Aggregation Feature PRD",
					"escaped": false
				}
			]
		},
		{
			"type": "paragraph",
			"raw": "**Critial LLM Initialization Instructions**\nWhen first reading this file, you MUST IMMEDIATELY run citation manager to extract base paths: `npm run citation:base-paths <this-file-path> -- --format json`. Read ALL discovered base path files to gather complete architectural context before proceeding.",
			"text": "**Critial LLM Initialization Instructions**\nWhen first reading this file, you MUST IMMEDIATELY run citation manager to extract base paths: `npm run citation:base-paths <this-file-path> -- --format json`. Read ALL discovered base path files to gather complete architectural context before proceeding.",
			"tokens": [
				{
					"type": "strong",
					"raw": "**Critial LLM Initialization Instructions**",
					"text": "Critial LLM Initialization Instructions",
					"tokens": [
						{
							"type": "text",
							"raw": "Critial LLM Initialization Instructions",
							"text": "Critial LLM Initialization Instructions",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": "\nWhen first reading this file, you MUST IMMEDIATELY run citation manager to extract base paths: ",
					"text": "\nWhen first reading this file, you MUST IMMEDIATELY run citation manager to extract base paths: ",
					"escaped": false
				},
				{
					"type": "codespan",
					"raw": "`npm run citation:base-paths <this-file-path> -- --format json`",
					"text": "npm run citation:base-paths <this-file-path> -- --format json"
				},
				{
					"type": "text",
					"raw": ". Read ALL discovered base path files to gather complete architectural context before proceeding.",
					"text": ". Read ALL discovered base path files to gather complete architectural context before proceeding.",
					"escaped": false
				}
			]
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "heading",
			"raw": "## Overview (tl;dr)\n\n",
			"depth": 2,
			"text": "Overview (tl;dr)",
			"tokens": [
				{
					"type": "text",
					"raw": "Overview (tl;dr)",
					"text": "Overview (tl;dr)",
					"escaped": false
				}
			]
		},
		{
			"type": "paragraph",
			"raw": "**Baseline:** `Citation Manager` tool\n",
			"text": "**Baseline:** `Citation Manager` tool",
			"tokens": [
				{
					"type": "strong",
					"raw": "**Baseline:**",
					"text": "Baseline:",
					"tokens": [
						{
							"type": "text",
							"raw": "Baseline:",
							"text": "Baseline:",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": " ",
					"text": " ",
					"escaped": false
				},
				{
					"type": "codespan",
					"raw": "`Citation Manager`",
					"text": "Citation Manager"
				},
				{
					"type": "text",
					"raw": " tool",
					"text": " tool",
					"escaped": false
				}
			]
		},
		{
			"type": "list",
			"raw": "- validates markdown citation links\n- provides auto-fix capabilities for broken citations\n- extracts links in a document so an LLM can read related content",
			"ordered": false,
			"start": "",
			"loose": false,
			"items": [
				{
					"type": "list_item",
					"raw": "- validates markdown citation links\n",
					"task": false,
					"loose": false,
					"text": "validates markdown citation links",
					"tokens": [
						{
							"type": "text",
							"raw": "validates markdown citation links",
							"text": "validates markdown citation links",
							"tokens": [
								{
									"type": "text",
									"raw": "validates markdown citation links",
									"text": "validates markdown citation links",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "- provides auto-fix capabilities for broken citations\n",
					"task": false,
					"loose": false,
					"text": "provides auto-fix capabilities for broken citations",
					"tokens": [
						{
							"type": "text",
							"raw": "provides auto-fix capabilities for broken citations",
							"text": "provides auto-fix capabilities for broken citations",
							"tokens": [
								{
									"type": "text",
									"raw": "provides auto-fix capabilities for broken citations",
									"text": "provides auto-fix capabilities for broken citations",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "- extracts links in a document so an LLM can read related content",
					"task": false,
					"loose": false,
					"text": "extracts links in a document so an LLM can read related content",
					"tokens": [
						{
							"type": "text",
							"raw": "extracts links in a document so an LLM can read related content",
							"text": "extracts links in a document so an LLM can read related content",
							"tokens": [
								{
									"type": "text",
									"raw": "extracts links in a document so an LLM can read related content",
									"text": "extracts links in a document so an LLM can read related content",
									"escaped": false
								}
							]
						}
					]
				}
			]
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "paragraph",
			"raw": "**Improvement:** extend extraction to\n",
			"text": "**Improvement:** extend extraction to",
			"tokens": [
				{
					"type": "strong",
					"raw": "**Improvement:**",
					"text": "Improvement:",
					"tokens": [
						{
							"type": "text",
							"raw": "Improvement:",
							"text": "Improvement:",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": " extend extraction to",
					"text": " extend extraction to",
					"escaped": false
				}
			]
		},
		{
			"type": "list",
			"raw": "- extract linked content, both full documents and link fragments (ie \\#header and \\#^blocks)\n- return a single, self contained document with linked content written in place\n- cache returned document to reduce read/compile time\n- track changes to links in order to re-compile and re-cache, keeping cache in sync",
			"ordered": false,
			"start": "",
			"loose": false,
			"items": [
				{
					"type": "list_item",
					"raw": "- extract linked content, both full documents and link fragments (ie \\#header and \\#^blocks)\n",
					"task": false,
					"loose": false,
					"text": "extract linked content, both full documents and link fragments (ie \\#header and \\#^blocks)",
					"tokens": [
						{
							"type": "text",
							"raw": "extract linked content, both full documents and link fragments (ie \\#header and \\#^blocks)",
							"text": "extract linked content, both full documents and link fragments (ie \\#header and \\#^blocks)",
							"tokens": [
								{
									"type": "text",
									"raw": "extract linked content, both full documents and link fragments (ie ",
									"text": "extract linked content, both full documents and link fragments (ie ",
									"escaped": false
								},
								{
									"type": "escape",
									"raw": "\\#",
									"text": "#"
								},
								{
									"type": "text",
									"raw": "header and ",
									"text": "header and ",
									"escaped": false
								},
								{
									"type": "escape",
									"raw": "\\#",
									"text": "#"
								},
								{
									"type": "text",
									"raw": "^blocks)",
									"text": "^blocks)",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "- return a single, self contained document with linked content written in place\n",
					"task": false,
					"loose": false,
					"text": "return a single, self contained document with linked content written in place",
					"tokens": [
						{
							"type": "text",
							"raw": "return a single, self contained document with linked content written in place",
							"text": "return a single, self contained document with linked content written in place",
							"tokens": [
								{
									"type": "text",
									"raw": "return a single, self contained document with linked content written in place",
									"text": "return a single, self contained document with linked content written in place",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "- cache returned document to reduce read/compile time\n",
					"task": false,
					"loose": false,
					"text": "cache returned document to reduce read/compile time",
					"tokens": [
						{
							"type": "text",
							"raw": "cache returned document to reduce read/compile time",
							"text": "cache returned document to reduce read/compile time",
							"tokens": [
								{
									"type": "text",
									"raw": "cache returned document to reduce read/compile time",
									"text": "cache returned document to reduce read/compile time",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "- track changes to links in order to re-compile and re-cache, keeping cache in sync",
					"task": false,
					"loose": false,
					"text": "track changes to links in order to re-compile and re-cache, keeping cache in sync",
					"tokens": [
						{
							"type": "text",
							"raw": "track changes to links in order to re-compile and re-cache, keeping cache in sync",
							"text": "track changes to links in order to re-compile and re-cache, keeping cache in sync",
							"tokens": [
								{
									"type": "text",
									"raw": "track changes to links in order to re-compile and re-cache, keeping cache in sync",
									"text": "track changes to links in order to re-compile and re-cache, keeping cache in sync",
									"escaped": false
								}
							]
						}
					]
				}
			]
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "paragraph",
			"raw": "**Value:** SAVES TIME & IMPROVES LLM FOCUS by automating context engineering vs. manually constructing context documents",
			"text": "**Value:** SAVES TIME & IMPROVES LLM FOCUS by automating context engineering vs. manually constructing context documents",
			"tokens": [
				{
					"type": "strong",
					"raw": "**Value:**",
					"text": "Value:",
					"tokens": [
						{
							"type": "text",
							"raw": "Value:",
							"text": "Value:",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": " SAVES TIME & IMPROVES LLM FOCUS by automating context engineering vs. manually constructing context documents",
					"text": " SAVES TIME & IMPROVES LLM FOCUS by automating context engineering vs. manually constructing context documents",
					"escaped": false
				}
			]
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "hr",
			"raw": "---"
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "heading",
			"raw": "## Goals\n\n",
			"depth": 2,
			"text": "Goals",
			"tokens": [
				{
					"type": "text",
					"raw": "Goals",
					"text": "Goals",
					"escaped": false
				}
			]
		},
		{
			"type": "list",
			"raw": "- **Primary Goal:** Extract, aggregate, and structure content from markdown links (fragments or full documents) into a single context package\n- **User Outcome:** Reduce manual effort required to gather and structure context for complex prompts\n- **Operational Capability:** Provide an automated workflow for building LLM context from distributed documentation\n- **Strategic Goal:** Deliver the first feature improvement that leverages the workspace framework",
			"ordered": false,
			"start": "",
			"loose": false,
			"items": [
				{
					"type": "list_item",
					"raw": "- **Primary Goal:** Extract, aggregate, and structure content from markdown links (fragments or full documents) into a single context package\n",
					"task": false,
					"loose": false,
					"text": "**Primary Goal:** Extract, aggregate, and structure content from markdown links (fragments or full documents) into a single context package",
					"tokens": [
						{
							"type": "text",
							"raw": "**Primary Goal:** Extract, aggregate, and structure content from markdown links (fragments or full documents) into a single context package",
							"text": "**Primary Goal:** Extract, aggregate, and structure content from markdown links (fragments or full documents) into a single context package",
							"tokens": [
								{
									"type": "strong",
									"raw": "**Primary Goal:**",
									"text": "Primary Goal:",
									"tokens": [
										{
											"type": "text",
											"raw": "Primary Goal:",
											"text": "Primary Goal:",
											"escaped": false
										}
									]
								},
								{
									"type": "text",
									"raw": " Extract, aggregate, and structure content from markdown links (fragments or full documents) into a single context package",
									"text": " Extract, aggregate, and structure content from markdown links (fragments or full documents) into a single context package",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "- **User Outcome:** Reduce manual effort required to gather and structure context for complex prompts\n",
					"task": false,
					"loose": false,
					"text": "**User Outcome:** Reduce manual effort required to gather and structure context for complex prompts",
					"tokens": [
						{
							"type": "text",
							"raw": "**User Outcome:** Reduce manual effort required to gather and structure context for complex prompts",
							"text": "**User Outcome:** Reduce manual effort required to gather and structure context for complex prompts",
							"tokens": [
								{
									"type": "strong",
									"raw": "**User Outcome:**",
									"text": "User Outcome:",
									"tokens": [
										{
											"type": "text",
											"raw": "User Outcome:",
											"text": "User Outcome:",
											"escaped": false
										}
									]
								},
								{
									"type": "text",
									"raw": " Reduce manual effort required to gather and structure context for complex prompts",
									"text": " Reduce manual effort required to gather and structure context for complex prompts",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "- **Operational Capability:** Provide an automated workflow for building LLM context from distributed documentation\n",
					"task": false,
					"loose": false,
					"text": "**Operational Capability:** Provide an automated workflow for building LLM context from distributed documentation",
					"tokens": [
						{
							"type": "text",
							"raw": "**Operational Capability:** Provide an automated workflow for building LLM context from distributed documentation",
							"text": "**Operational Capability:** Provide an automated workflow for building LLM context from distributed documentation",
							"tokens": [
								{
									"type": "strong",
									"raw": "**Operational Capability:**",
									"text": "Operational Capability:",
									"tokens": [
										{
											"type": "text",
											"raw": "Operational Capability:",
											"text": "Operational Capability:",
											"escaped": false
										}
									]
								},
								{
									"type": "text",
									"raw": " Provide an automated workflow for building LLM context from distributed documentation",
									"text": " Provide an automated workflow for building LLM context from distributed documentation",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "- **Strategic Goal:** Deliver the first feature improvement that leverages the workspace framework",
					"task": false,
					"loose": false,
					"text": "**Strategic Goal:** Deliver the first feature improvement that leverages the workspace framework",
					"tokens": [
						{
							"type": "text",
							"raw": "**Strategic Goal:** Deliver the first feature improvement that leverages the workspace framework",
							"text": "**Strategic Goal:** Deliver the first feature improvement that leverages the workspace framework",
							"tokens": [
								{
									"type": "strong",
									"raw": "**Strategic Goal:**",
									"text": "Strategic Goal:",
									"tokens": [
										{
											"type": "text",
											"raw": "Strategic Goal:",
											"text": "Strategic Goal:",
											"escaped": false
										}
									]
								},
								{
									"type": "text",
									"raw": " Deliver the first feature improvement that leverages the workspace framework",
									"text": " Deliver the first feature improvement that leverages the workspace framework",
									"escaped": false
								}
							]
						}
					]
				}
			]
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "hr",
			"raw": "---"
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "heading",
			"raw": "## Background Context\n\n",
			"depth": 2,
			"text": "Background Context",
			"tokens": [
				{
					"type": "text",
					"raw": "Background Context",
					"text": "Background Context",
					"escaped": false
				}
			]
		},
		{
			"type": "paragraph",
			"raw": "AI-assisted development workflows frequently require gathering specific sections from multiple documentation files into a single context file. This is currently a manual, error-prone process involving copying and pasting content while maintaining proper attribution and structure.",
			"text": "AI-assisted development workflows frequently require gathering specific sections from multiple documentation files into a single context file. This is currently a manual, error-prone process involving copying and pasting content while maintaining proper attribution and structure.",
			"tokens": [
				{
					"type": "text",
					"raw": "AI-assisted development workflows frequently require gathering specific sections from multiple documentation files into a single context file. This is currently a manual, error-prone process involving copying and pasting content while maintaining proper attribution and structure.",
					"text": "AI-assisted development workflows frequently require gathering specific sections from multiple documentation files into a single context file. This is currently a manual, error-prone process involving copying and pasting content while maintaining proper attribution and structure.",
					"escaped": false
				}
			]
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "paragraph",
			"raw": "This feature transforms the citation-manager from a validation-only tool into a content aggregation tool that can automatically assemble context files based on the links in a source document.",
			"text": "This feature transforms the citation-manager from a validation-only tool into a content aggregation tool that can automatically assemble context files based on the links in a source document.",
			"tokens": [
				{
					"type": "text",
					"raw": "This feature transforms the citation-manager from a validation-only tool into a content aggregation tool that can automatically assemble context files based on the links in a source document.",
					"text": "This feature transforms the citation-manager from a validation-only tool into a content aggregation tool that can automatically assemble context files based on the links in a source document.",
					"escaped": false
				}
			]
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "hr",
			"raw": "---"
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "heading",
			"raw": "## Alignment with Product Vision\n\n",
			"depth": 2,
			"text": "Alignment with Product Vision",
			"tokens": [
				{
					"type": "text",
					"raw": "Alignment with Product Vision",
					"text": "Alignment with Product Vision",
					"escaped": false
				}
			]
		},
		{
			"type": "paragraph",
			"raw": "This feature directly supports the CC Workflows vision by:",
			"text": "This feature directly supports the CC Workflows vision by:",
			"tokens": [
				{
					"type": "text",
					"raw": "This feature directly supports the CC Workflows vision by:",
					"text": "This feature directly supports the CC Workflows vision by:",
					"escaped": false
				}
			]
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "list",
			"raw": "- **Refined:** Enhances the citation-manager with a high-value capability that leverages its existing link parsing infrastructure\n- **Repeatable:** Establishes a standardized pattern for automated context assembly across all documentation\n- **Robust:** Builds on the validated workspace testing framework to ensure reliable content extraction\n- **Impact:** Demonstrates immediate value from the centralized workspace framework",
			"ordered": false,
			"start": "",
			"loose": false,
			"items": [
				{
					"type": "list_item",
					"raw": "- **Refined:** Enhances the citation-manager with a high-value capability that leverages its existing link parsing infrastructure\n",
					"task": false,
					"loose": false,
					"text": "**Refined:** Enhances the citation-manager with a high-value capability that leverages its existing link parsing infrastructure",
					"tokens": [
						{
							"type": "text",
							"raw": "**Refined:** Enhances the citation-manager with a high-value capability that leverages its existing link parsing infrastructure",
							"text": "**Refined:** Enhances the citation-manager with a high-value capability that leverages its existing link parsing infrastructure",
							"tokens": [
								{
									"type": "strong",
									"raw": "**Refined:**",
									"text": "Refined:",
									"tokens": [
										{
											"type": "text",
											"raw": "Refined:",
											"text": "Refined:",
											"escaped": false
										}
									]
								},
								{
									"type": "text",
									"raw": " Enhances the citation-manager with a high-value capability that leverages its existing link parsing infrastructure",
									"text": " Enhances the citation-manager with a high-value capability that leverages its existing link parsing infrastructure",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "- **Repeatable:** Establishes a standardized pattern for automated context assembly across all documentation\n",
					"task": false,
					"loose": false,
					"text": "**Repeatable:** Establishes a standardized pattern for automated context assembly across all documentation",
					"tokens": [
						{
							"type": "text",
							"raw": "**Repeatable:** Establishes a standardized pattern for automated context assembly across all documentation",
							"text": "**Repeatable:** Establishes a standardized pattern for automated context assembly across all documentation",
							"tokens": [
								{
									"type": "strong",
									"raw": "**Repeatable:**",
									"text": "Repeatable:",
									"tokens": [
										{
											"type": "text",
											"raw": "Repeatable:",
											"text": "Repeatable:",
											"escaped": false
										}
									]
								},
								{
									"type": "text",
									"raw": " Establishes a standardized pattern for automated context assembly across all documentation",
									"text": " Establishes a standardized pattern for automated context assembly across all documentation",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "- **Robust:** Builds on the validated workspace testing framework to ensure reliable content extraction\n",
					"task": false,
					"loose": false,
					"text": "**Robust:** Builds on the validated workspace testing framework to ensure reliable content extraction",
					"tokens": [
						{
							"type": "text",
							"raw": "**Robust:** Builds on the validated workspace testing framework to ensure reliable content extraction",
							"text": "**Robust:** Builds on the validated workspace testing framework to ensure reliable content extraction",
							"tokens": [
								{
									"type": "strong",
									"raw": "**Robust:**",
									"text": "Robust:",
									"tokens": [
										{
											"type": "text",
											"raw": "Robust:",
											"text": "Robust:",
											"escaped": false
										}
									]
								},
								{
									"type": "text",
									"raw": " Builds on the validated workspace testing framework to ensure reliable content extraction",
									"text": " Builds on the validated workspace testing framework to ensure reliable content extraction",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "- **Impact:** Demonstrates immediate value from the centralized workspace framework",
					"task": false,
					"loose": false,
					"text": "**Impact:** Demonstrates immediate value from the centralized workspace framework",
					"tokens": [
						{
							"type": "text",
							"raw": "**Impact:** Demonstrates immediate value from the centralized workspace framework",
							"text": "**Impact:** Demonstrates immediate value from the centralized workspace framework",
							"tokens": [
								{
									"type": "strong",
									"raw": "**Impact:**",
									"text": "Impact:",
									"tokens": [
										{
											"type": "text",
											"raw": "Impact:",
											"text": "Impact:",
											"escaped": false
										}
									]
								},
								{
									"type": "text",
									"raw": " Demonstrates immediate value from the centralized workspace framework",
									"text": " Demonstrates immediate value from the centralized workspace framework",
									"escaped": false
								}
							]
						}
					]
				}
			]
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "hr",
			"raw": "---"
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "heading",
			"raw": "## Changelog\n\n",
			"depth": 2,
			"text": "Changelog",
			"tokens": [
				{
					"type": "text",
					"raw": "Changelog",
					"text": "Changelog",
					"escaped": false
				}
			]
		},
		{
			"type": "table",
			"raw": "| Date | Version | Description | Author |\n|------|---------|-------------|---------|\n| 2025-10-03 | 1.0 | Initial feature PRD creation with Epic 2 and US 1.4 from workspace PRD | Product Manager Agent |\n| 2025-10-04 | 2.1 | Split US1.4 into US1.4a (Test Migration) and US1.4b (DI Refactoring) per ADR-001, rewrote all AC in EARS format, updated dependency chain for Epic 2 | Application Tech Lead |\n| 2025-10-07 | 2.2 | Mark US1.5 as COMPLETE, update Technical Lead Feedback sections: Parser data contract RESOLVED (US1.5 Phase 1), US1.5 caching feedback IMPLEMENTED, Epic 2 feedback remains active for Stories 2.2-2.3 | Application Tech Lead |\n\n",
			"header": [
				{
					"text": "Date",
					"tokens": [
						{
							"type": "text",
							"raw": "Date",
							"text": "Date",
							"escaped": false
						}
					],
					"header": true,
					"align": null
				},
				{
					"text": "Version",
					"tokens": [
						{
							"type": "text",
							"raw": "Version",
							"text": "Version",
							"escaped": false
						}
					],
					"header": true,
					"align": null
				},
				{
					"text": "Description",
					"tokens": [
						{
							"type": "text",
							"raw": "Description",
							"text": "Description",
							"escaped": false
						}
					],
					"header": true,
					"align": null
				},
				{
					"text": "Author",
					"tokens": [
						{
							"type": "text",
							"raw": "Author",
							"text": "Author",
							"escaped": false
						}
					],
					"header": true,
					"align": null
				}
			],
			"align": [null, null, null, null],
			"rows": [
				[
					{
						"text": "2025-10-03",
						"tokens": [
							{
								"type": "text",
								"raw": "2025-10-03",
								"text": "2025-10-03",
								"escaped": false
							}
						],
						"header": false,
						"align": null
					},
					{
						"text": "1.0",
						"tokens": [
							{
								"type": "text",
								"raw": "1.0",
								"text": "1.0",
								"escaped": false
							}
						],
						"header": false,
						"align": null
					},
					{
						"text": "Initial feature PRD creation with Epic 2 and US 1.4 from workspace PRD",
						"tokens": [
							{
								"type": "text",
								"raw": "Initial feature PRD creation with Epic 2 and US 1.4 from workspace PRD",
								"text": "Initial feature PRD creation with Epic 2 and US 1.4 from workspace PRD",
								"escaped": false
							}
						],
						"header": false,
						"align": null
					},
					{
						"text": "Product Manager Agent",
						"tokens": [
							{
								"type": "text",
								"raw": "Product Manager Agent",
								"text": "Product Manager Agent",
								"escaped": false
							}
						],
						"header": false,
						"align": null
					}
				],
				[
					{
						"text": "2025-10-04",
						"tokens": [
							{
								"type": "text",
								"raw": "2025-10-04",
								"text": "2025-10-04",
								"escaped": false
							}
						],
						"header": false,
						"align": null
					},
					{
						"text": "2.1",
						"tokens": [
							{
								"type": "text",
								"raw": "2.1",
								"text": "2.1",
								"escaped": false
							}
						],
						"header": false,
						"align": null
					},
					{
						"text": "Split US1.4 into US1.4a (Test Migration) and US1.4b (DI Refactoring) per ADR-001, rewrote all AC in EARS format, updated dependency chain for Epic 2",
						"tokens": [
							{
								"type": "text",
								"raw": "Split US1.4 into US1.4a (Test Migration) and US1.4b (DI Refactoring) per ADR-001, rewrote all AC in EARS format, updated dependency chain for Epic 2",
								"text": "Split US1.4 into US1.4a (Test Migration) and US1.4b (DI Refactoring) per ADR-001, rewrote all AC in EARS format, updated dependency chain for Epic 2",
								"escaped": false
							}
						],
						"header": false,
						"align": null
					},
					{
						"text": "Application Tech Lead",
						"tokens": [
							{
								"type": "text",
								"raw": "Application Tech Lead",
								"text": "Application Tech Lead",
								"escaped": false
							}
						],
						"header": false,
						"align": null
					}
				],
				[
					{
						"text": "2025-10-07",
						"tokens": [
							{
								"type": "text",
								"raw": "2025-10-07",
								"text": "2025-10-07",
								"escaped": false
							}
						],
						"header": false,
						"align": null
					},
					{
						"text": "2.2",
						"tokens": [
							{
								"type": "text",
								"raw": "2.2",
								"text": "2.2",
								"escaped": false
							}
						],
						"header": false,
						"align": null
					},
					{
						"text": "Mark US1.5 as COMPLETE, update Technical Lead Feedback sections: Parser data contract RESOLVED (US1.5 Phase 1), US1.5 caching feedback IMPLEMENTED, Epic 2 feedback remains active for Stories 2.2-2.3",
						"tokens": [
							{
								"type": "text",
								"raw": "Mark US1.5 as COMPLETE, update Technical Lead Feedback sections: Parser data contract RESOLVED (US1.5 Phase 1), US1.5 caching feedback IMPLEMENTED, Epic 2 feedback remains active for Stories 2.2-2.3",
								"text": "Mark US1.5 as COMPLETE, update Technical Lead Feedback sections: Parser data contract RESOLVED (US1.5 Phase 1), US1.5 caching feedback IMPLEMENTED, Epic 2 feedback remains active for Stories 2.2-2.3",
								"escaped": false
							}
						],
						"header": false,
						"align": null
					},
					{
						"text": "Application Tech Lead",
						"tokens": [
							{
								"type": "text",
								"raw": "Application Tech Lead",
								"text": "Application Tech Lead",
								"escaped": false
							}
						],
						"header": false,
						"align": null
					}
				]
			]
		},
		{
			"type": "hr",
			"raw": "---"
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "heading",
			"raw": "## Requirements\n\n",
			"depth": 2,
			"text": "Requirements",
			"tokens": [
				{
					"type": "text",
					"raw": "Requirements",
					"text": "Requirements",
					"escaped": false
				}
			]
		},
		{
			"type": "heading",
			"raw": "### Functional Requirements\n",
			"depth": 3,
			"text": "Functional Requirements",
			"tokens": [
				{
					"type": "text",
					"raw": "Functional Requirements",
					"text": "Functional Requirements",
					"escaped": false
				}
			]
		},
		{
			"type": "list",
			"raw": "- **FR2: Shared Testing Framework:** Test suite SHALL run via the workspace's shared Vitest framework. ^FR2\n- **FR4: Link Section Identification:** The `citation-manager` SHALL parse a given markdown document and identify all links that point to local markdown files, distinguishing between links **with section anchors and those without**. ^FR4\n- **FR5: Section Content Extraction:** The `citation-manager` SHALL be able to extract content from a target file in two ways: 1) If a section anchor is provided, it SHALL extract the full content under that specific heading, 2) If no section anchor is provided, it SHALL extract the **entire content of the file**. ^FR5\n- **FR6: Content Aggregation:** The `citation-manager` SHALL aggregate the extracted content into a single markdown file, where each piece of content is **preceded by a markdown header that clearly identifies the source file and, if applicable, the section heading**. ^FR6\n- **FR7: Centralized Execution:** The new aggregation feature SHALL be exposed via an **`--extract-context <output_file.md>` flag on the existing `validate` command**. ^FR7\n- **FR8: Preserve Existing Functionality:** All existing `citation-manager` features SHALL be preserved and function correctly. ^FR8\n- **FR9: Test Migration:** All existing unit tests for the `citation-manager` SHALL be migrated to the workspace and pass. ^FR9",
			"ordered": false,
			"start": "",
			"loose": false,
			"items": [
				{
					"type": "list_item",
					"raw": "- **FR2: Shared Testing Framework:** Test suite SHALL run via the workspace's shared Vitest framework. ^FR2\n",
					"task": false,
					"loose": false,
					"text": "**FR2: Shared Testing Framework:** Test suite SHALL run via the workspace's shared Vitest framework. ^FR2",
					"tokens": [
						{
							"type": "text",
							"raw": "**FR2: Shared Testing Framework:** Test suite SHALL run via the workspace's shared Vitest framework. ^FR2",
							"text": "**FR2: Shared Testing Framework:** Test suite SHALL run via the workspace's shared Vitest framework. ^FR2",
							"tokens": [
								{
									"type": "strong",
									"raw": "**FR2: Shared Testing Framework:**",
									"text": "FR2: Shared Testing Framework:",
									"tokens": [
										{
											"type": "text",
											"raw": "FR2: Shared Testing Framework:",
											"text": "FR2: Shared Testing Framework:",
											"escaped": false
										}
									]
								},
								{
									"type": "text",
									"raw": " Test suite SHALL run via the workspace's shared Vitest framework. ^FR2",
									"text": " Test suite SHALL run via the workspace's shared Vitest framework. ^FR2",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "- **FR4: Link Section Identification:** The `citation-manager` SHALL parse a given markdown document and identify all links that point to local markdown files, distinguishing between links **with section anchors and those without**. ^FR4\n",
					"task": false,
					"loose": false,
					"text": "**FR4: Link Section Identification:** The `citation-manager` SHALL parse a given markdown document and identify all links that point to local markdown files, distinguishing between links **with section anchors and those without**. ^FR4",
					"tokens": [
						{
							"type": "text",
							"raw": "**FR4: Link Section Identification:** The `citation-manager` SHALL parse a given markdown document and identify all links that point to local markdown files, distinguishing between links **with section anchors and those without**. ^FR4",
							"text": "**FR4: Link Section Identification:** The `citation-manager` SHALL parse a given markdown document and identify all links that point to local markdown files, distinguishing between links **with section anchors and those without**. ^FR4",
							"tokens": [
								{
									"type": "strong",
									"raw": "**FR4: Link Section Identification:**",
									"text": "FR4: Link Section Identification:",
									"tokens": [
										{
											"type": "text",
											"raw": "FR4: Link Section Identification:",
											"text": "FR4: Link Section Identification:",
											"escaped": false
										}
									]
								},
								{
									"type": "text",
									"raw": " The ",
									"text": " The ",
									"escaped": false
								},
								{
									"type": "codespan",
									"raw": "`citation-manager`",
									"text": "citation-manager"
								},
								{
									"type": "text",
									"raw": " SHALL parse a given markdown document and identify all links that point to local markdown files, distinguishing between links ",
									"text": " SHALL parse a given markdown document and identify all links that point to local markdown files, distinguishing between links ",
									"escaped": false
								},
								{
									"type": "strong",
									"raw": "**with section anchors and those without**",
									"text": "with section anchors and those without",
									"tokens": [
										{
											"type": "text",
											"raw": "with section anchors and those without",
											"text": "with section anchors and those without",
											"escaped": false
										}
									]
								},
								{
									"type": "text",
									"raw": ". ^FR4",
									"text": ". ^FR4",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "- **FR5: Section Content Extraction:** The `citation-manager` SHALL be able to extract content from a target file in two ways: 1) If a section anchor is provided, it SHALL extract the full content under that specific heading, 2) If no section anchor is provided, it SHALL extract the **entire content of the file**. ^FR5\n",
					"task": false,
					"loose": false,
					"text": "**FR5: Section Content Extraction:** The `citation-manager` SHALL be able to extract content from a target file in two ways: 1) If a section anchor is provided, it SHALL extract the full content under that specific heading, 2) If no section anchor is provided, it SHALL extract the **entire content of the file**. ^FR5",
					"tokens": [
						{
							"type": "text",
							"raw": "**FR5: Section Content Extraction:** The `citation-manager` SHALL be able to extract content from a target file in two ways: 1) If a section anchor is provided, it SHALL extract the full content under that specific heading, 2) If no section anchor is provided, it SHALL extract the **entire content of the file**. ^FR5",
							"text": "**FR5: Section Content Extraction:** The `citation-manager` SHALL be able to extract content from a target file in two ways: 1) If a section anchor is provided, it SHALL extract the full content under that specific heading, 2) If no section anchor is provided, it SHALL extract the **entire content of the file**. ^FR5",
							"tokens": [
								{
									"type": "strong",
									"raw": "**FR5: Section Content Extraction:**",
									"text": "FR5: Section Content Extraction:",
									"tokens": [
										{
											"type": "text",
											"raw": "FR5: Section Content Extraction:",
											"text": "FR5: Section Content Extraction:",
											"escaped": false
										}
									]
								},
								{
									"type": "text",
									"raw": " The ",
									"text": " The ",
									"escaped": false
								},
								{
									"type": "codespan",
									"raw": "`citation-manager`",
									"text": "citation-manager"
								},
								{
									"type": "text",
									"raw": " SHALL be able to extract content from a target file in two ways: 1) If a section anchor is provided, it SHALL extract the full content under that specific heading, 2) If no section anchor is provided, it SHALL extract the ",
									"text": " SHALL be able to extract content from a target file in two ways: 1) If a section anchor is provided, it SHALL extract the full content under that specific heading, 2) If no section anchor is provided, it SHALL extract the ",
									"escaped": false
								},
								{
									"type": "strong",
									"raw": "**entire content of the file**",
									"text": "entire content of the file",
									"tokens": [
										{
											"type": "text",
											"raw": "entire content of the file",
											"text": "entire content of the file",
											"escaped": false
										}
									]
								},
								{
									"type": "text",
									"raw": ". ^FR5",
									"text": ". ^FR5",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "- **FR6: Content Aggregation:** The `citation-manager` SHALL aggregate the extracted content into a single markdown file, where each piece of content is **preceded by a markdown header that clearly identifies the source file and, if applicable, the section heading**. ^FR6\n",
					"task": false,
					"loose": false,
					"text": "**FR6: Content Aggregation:** The `citation-manager` SHALL aggregate the extracted content into a single markdown file, where each piece of content is **preceded by a markdown header that clearly identifies the source file and, if applicable, the section heading**. ^FR6",
					"tokens": [
						{
							"type": "text",
							"raw": "**FR6: Content Aggregation:** The `citation-manager` SHALL aggregate the extracted content into a single markdown file, where each piece of content is **preceded by a markdown header that clearly identifies the source file and, if applicable, the section heading**. ^FR6",
							"text": "**FR6: Content Aggregation:** The `citation-manager` SHALL aggregate the extracted content into a single markdown file, where each piece of content is **preceded by a markdown header that clearly identifies the source file and, if applicable, the section heading**. ^FR6",
							"tokens": [
								{
									"type": "strong",
									"raw": "**FR6: Content Aggregation:**",
									"text": "FR6: Content Aggregation:",
									"tokens": [
										{
											"type": "text",
											"raw": "FR6: Content Aggregation:",
											"text": "FR6: Content Aggregation:",
											"escaped": false
										}
									]
								},
								{
									"type": "text",
									"raw": " The ",
									"text": " The ",
									"escaped": false
								},
								{
									"type": "codespan",
									"raw": "`citation-manager`",
									"text": "citation-manager"
								},
								{
									"type": "text",
									"raw": " SHALL aggregate the extracted content into a single markdown file, where each piece of content is ",
									"text": " SHALL aggregate the extracted content into a single markdown file, where each piece of content is ",
									"escaped": false
								},
								{
									"type": "strong",
									"raw": "**preceded by a markdown header that clearly identifies the source file and, if applicable, the section heading**",
									"text": "preceded by a markdown header that clearly identifies the source file and, if applicable, the section heading",
									"tokens": [
										{
											"type": "text",
											"raw": "preceded by a markdown header that clearly identifies the source file and, if applicable, the section heading",
											"text": "preceded by a markdown header that clearly identifies the source file and, if applicable, the section heading",
											"escaped": false
										}
									]
								},
								{
									"type": "text",
									"raw": ". ^FR6",
									"text": ". ^FR6",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "- **FR7: Centralized Execution:** The new aggregation feature SHALL be exposed via an **`--extract-context <output_file.md>` flag on the existing `validate` command**. ^FR7\n",
					"task": false,
					"loose": false,
					"text": "**FR7: Centralized Execution:** The new aggregation feature SHALL be exposed via an **`--extract-context <output_file.md>` flag on the existing `validate` command**. ^FR7",
					"tokens": [
						{
							"type": "text",
							"raw": "**FR7: Centralized Execution:** The new aggregation feature SHALL be exposed via an **`--extract-context <output_file.md>` flag on the existing `validate` command**. ^FR7",
							"text": "**FR7: Centralized Execution:** The new aggregation feature SHALL be exposed via an **`--extract-context <output_file.md>` flag on the existing `validate` command**. ^FR7",
							"tokens": [
								{
									"type": "strong",
									"raw": "**FR7: Centralized Execution:**",
									"text": "FR7: Centralized Execution:",
									"tokens": [
										{
											"type": "text",
											"raw": "FR7: Centralized Execution:",
											"text": "FR7: Centralized Execution:",
											"escaped": false
										}
									]
								},
								{
									"type": "text",
									"raw": " The new aggregation feature SHALL be exposed via an ",
									"text": " The new aggregation feature SHALL be exposed via an ",
									"escaped": false
								},
								{
									"type": "strong",
									"raw": "**`--extract-context <output_file.md>` flag on the existing `validate` command**",
									"text": "`--extract-context <output_file.md>` flag on the existing `validate` command",
									"tokens": [
										{
											"type": "codespan",
											"raw": "`--extract-context <output_file.md>`",
											"text": "--extract-context <output_file.md>"
										},
										{
											"type": "text",
											"raw": " flag on the existing ",
											"text": " flag on the existing ",
											"escaped": false
										},
										{
											"type": "codespan",
											"raw": "`validate`",
											"text": "validate"
										},
										{
											"type": "text",
											"raw": " command",
											"text": " command",
											"escaped": false
										}
									]
								},
								{
									"type": "text",
									"raw": ". ^FR7",
									"text": ". ^FR7",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "- **FR8: Preserve Existing Functionality:** All existing `citation-manager` features SHALL be preserved and function correctly. ^FR8\n",
					"task": false,
					"loose": false,
					"text": "**FR8: Preserve Existing Functionality:** All existing `citation-manager` features SHALL be preserved and function correctly. ^FR8",
					"tokens": [
						{
							"type": "text",
							"raw": "**FR8: Preserve Existing Functionality:** All existing `citation-manager` features SHALL be preserved and function correctly. ^FR8",
							"text": "**FR8: Preserve Existing Functionality:** All existing `citation-manager` features SHALL be preserved and function correctly. ^FR8",
							"tokens": [
								{
									"type": "strong",
									"raw": "**FR8: Preserve Existing Functionality:**",
									"text": "FR8: Preserve Existing Functionality:",
									"tokens": [
										{
											"type": "text",
											"raw": "FR8: Preserve Existing Functionality:",
											"text": "FR8: Preserve Existing Functionality:",
											"escaped": false
										}
									]
								},
								{
									"type": "text",
									"raw": " All existing ",
									"text": " All existing ",
									"escaped": false
								},
								{
									"type": "codespan",
									"raw": "`citation-manager`",
									"text": "citation-manager"
								},
								{
									"type": "text",
									"raw": " features SHALL be preserved and function correctly. ^FR8",
									"text": " features SHALL be preserved and function correctly. ^FR8",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "- **FR9: Test Migration:** All existing unit tests for the `citation-manager` SHALL be migrated to the workspace and pass. ^FR9",
					"task": false,
					"loose": false,
					"text": "**FR9: Test Migration:** All existing unit tests for the `citation-manager` SHALL be migrated to the workspace and pass. ^FR9",
					"tokens": [
						{
							"type": "text",
							"raw": "**FR9: Test Migration:** All existing unit tests for the `citation-manager` SHALL be migrated to the workspace and pass. ^FR9",
							"text": "**FR9: Test Migration:** All existing unit tests for the `citation-manager` SHALL be migrated to the workspace and pass. ^FR9",
							"tokens": [
								{
									"type": "strong",
									"raw": "**FR9: Test Migration:**",
									"text": "FR9: Test Migration:",
									"tokens": [
										{
											"type": "text",
											"raw": "FR9: Test Migration:",
											"text": "FR9: Test Migration:",
											"escaped": false
										}
									]
								},
								{
									"type": "text",
									"raw": " All existing unit tests for the ",
									"text": " All existing unit tests for the ",
									"escaped": false
								},
								{
									"type": "codespan",
									"raw": "`citation-manager`",
									"text": "citation-manager"
								},
								{
									"type": "text",
									"raw": " SHALL be migrated to the workspace and pass. ^FR9",
									"text": " SHALL be migrated to the workspace and pass. ^FR9",
									"escaped": false
								}
							]
						}
					]
				}
			]
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "heading",
			"raw": "### Non-Functional Requirements\n",
			"depth": 3,
			"text": "Non-Functional Requirements",
			"tokens": [
				{
					"type": "text",
					"raw": "Non-Functional Requirements",
					"text": "Non-Functional Requirements",
					"escaped": false
				}
			]
		},
		{
			"type": "list",
			"raw": "- **NFR3: Reliability:** The citation-manager SHALL include unit tests that achieve at least 50% code coverage on new functionality. ^NFR3\n- **NFR4: Design Adherence:** Implementation SHALL adhere to the workspace's MVB design principles and testing strategy. ^NFR4\n- **NFR5: Performance:** The system SHALL parse each unique file at most once per command execution to minimize redundant I/O and processing time. ^NFR5",
			"ordered": false,
			"start": "",
			"loose": false,
			"items": [
				{
					"type": "list_item",
					"raw": "- **NFR3: Reliability:** The citation-manager SHALL include unit tests that achieve at least 50% code coverage on new functionality. ^NFR3\n",
					"task": false,
					"loose": false,
					"text": "**NFR3: Reliability:** The citation-manager SHALL include unit tests that achieve at least 50% code coverage on new functionality. ^NFR3",
					"tokens": [
						{
							"type": "text",
							"raw": "**NFR3: Reliability:** The citation-manager SHALL include unit tests that achieve at least 50% code coverage on new functionality. ^NFR3",
							"text": "**NFR3: Reliability:** The citation-manager SHALL include unit tests that achieve at least 50% code coverage on new functionality. ^NFR3",
							"tokens": [
								{
									"type": "strong",
									"raw": "**NFR3: Reliability:**",
									"text": "NFR3: Reliability:",
									"tokens": [
										{
											"type": "text",
											"raw": "NFR3: Reliability:",
											"text": "NFR3: Reliability:",
											"escaped": false
										}
									]
								},
								{
									"type": "text",
									"raw": " The citation-manager SHALL include unit tests that achieve at least 50% code coverage on new functionality. ^NFR3",
									"text": " The citation-manager SHALL include unit tests that achieve at least 50% code coverage on new functionality. ^NFR3",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "- **NFR4: Design Adherence:** Implementation SHALL adhere to the workspace's MVB design principles and testing strategy. ^NFR4\n",
					"task": false,
					"loose": false,
					"text": "**NFR4: Design Adherence:** Implementation SHALL adhere to the workspace's MVB design principles and testing strategy. ^NFR4",
					"tokens": [
						{
							"type": "text",
							"raw": "**NFR4: Design Adherence:** Implementation SHALL adhere to the workspace's MVB design principles and testing strategy. ^NFR4",
							"text": "**NFR4: Design Adherence:** Implementation SHALL adhere to the workspace's MVB design principles and testing strategy. ^NFR4",
							"tokens": [
								{
									"type": "strong",
									"raw": "**NFR4: Design Adherence:**",
									"text": "NFR4: Design Adherence:",
									"tokens": [
										{
											"type": "text",
											"raw": "NFR4: Design Adherence:",
											"text": "NFR4: Design Adherence:",
											"escaped": false
										}
									]
								},
								{
									"type": "text",
									"raw": " Implementation SHALL adhere to the workspace's MVB design principles and testing strategy. ^NFR4",
									"text": " Implementation SHALL adhere to the workspace's MVB design principles and testing strategy. ^NFR4",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "- **NFR5: Performance:** The system SHALL parse each unique file at most once per command execution to minimize redundant I/O and processing time. ^NFR5",
					"task": false,
					"loose": false,
					"text": "**NFR5: Performance:** The system SHALL parse each unique file at most once per command execution to minimize redundant I/O and processing time. ^NFR5",
					"tokens": [
						{
							"type": "text",
							"raw": "**NFR5: Performance:** The system SHALL parse each unique file at most once per command execution to minimize redundant I/O and processing time. ^NFR5",
							"text": "**NFR5: Performance:** The system SHALL parse each unique file at most once per command execution to minimize redundant I/O and processing time. ^NFR5",
							"tokens": [
								{
									"type": "strong",
									"raw": "**NFR5: Performance:**",
									"text": "NFR5: Performance:",
									"tokens": [
										{
											"type": "text",
											"raw": "NFR5: Performance:",
											"text": "NFR5: Performance:",
											"escaped": false
										}
									]
								},
								{
									"type": "text",
									"raw": " The system SHALL parse each unique file at most once per command execution to minimize redundant I/O and processing time. ^NFR5",
									"text": " The system SHALL parse each unique file at most once per command execution to minimize redundant I/O and processing time. ^NFR5",
									"escaped": false
								}
							]
						}
					]
				}
			]
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "heading",
			"raw": "## Technical Considerations\n\n",
			"depth": 2,
			"text": "Technical Considerations",
			"tokens": [
				{
					"type": "text",
					"raw": "Technical Considerations",
					"text": "Technical Considerations",
					"escaped": false
				}
			]
		},
		{
			"type": "blockquote",
			"raw": "> [!success] **Technical Lead Feedback**: Parser output data contract design ✅ RESOLVED\n> _Resolution_: MarkdownParser.Output.DataContract schema validated and documented via [US1.5 Phase 1](user-stories/us1.5-implement-cache-for-parsed-files/us1.5-implement-cache-for-parsed-files.md#Phase%201%20Parser%20Output%20Contract%20Validation%20&%20Documentation). Base schema includes `{ filePath, content, tokens, links, headings, anchors }` with LinkObject and AnchorObject structures.\n> _Resolution Date_: 2025-10-07\n> _Epic 2 Note_: Base schema sufficient for ContentExtractor. May require minor extensions for content extraction metadata if Story 2.1 analysis identifies gaps.\n",
			"tokens": [
				{
					"type": "paragraph",
					"raw": "[!success] **Technical Lead Feedback**: Parser output data contract design ✅ RESOLVED\n_Resolution_: MarkdownParser.Output.DataContract schema validated and documented via [US1.5 Phase 1](user-stories/us1.5-implement-cache-for-parsed-files/us1.5-implement-cache-for-parsed-files.md#Phase%201%20Parser%20Output%20Contract%20Validation%20&%20Documentation). Base schema includes `{ filePath, content, tokens, links, headings, anchors }` with LinkObject and AnchorObject structures.\n_Resolution Date_: 2025-10-07\n_Epic 2 Note_: Base schema sufficient for ContentExtractor. May require minor extensions for content extraction metadata if Story 2.1 analysis identifies gaps.",
					"text": "[!success] **Technical Lead Feedback**: Parser output data contract design ✅ RESOLVED\n_Resolution_: MarkdownParser.Output.DataContract schema validated and documented via [US1.5 Phase 1](user-stories/us1.5-implement-cache-for-parsed-files/us1.5-implement-cache-for-parsed-files.md#Phase%201%20Parser%20Output%20Contract%20Validation%20&%20Documentation). Base schema includes `{ filePath, content, tokens, links, headings, anchors }` with LinkObject and AnchorObject structures.\n_Resolution Date_: 2025-10-07\n_Epic 2 Note_: Base schema sufficient for ContentExtractor. May require minor extensions for content extraction metadata if Story 2.1 analysis identifies gaps.",
					"tokens": [
						{
							"type": "text",
							"raw": "[!success] ",
							"text": "[!success] "
						},
						{
							"type": "strong",
							"raw": "**Technical Lead Feedback**",
							"text": "Technical Lead Feedback",
							"tokens": [
								{
									"type": "text",
									"raw": "Technical Lead Feedback",
									"text": "Technical Lead Feedback",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ": Parser output data contract design ✅ RESOLVED\n",
							"text": ": Parser output data contract design ✅ RESOLVED\n",
							"escaped": false
						},
						{
							"type": "em",
							"raw": "_Resolution_",
							"text": "Resolution",
							"tokens": [
								{
									"type": "text",
									"raw": "Resolution",
									"text": "Resolution",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ": MarkdownParser.Output.DataContract schema validated and documented via ",
							"text": ": MarkdownParser.Output.DataContract schema validated and documented via ",
							"escaped": false
						},
						{
							"type": "link",
							"raw": "[US1.5 Phase 1](user-stories/us1.5-implement-cache-for-parsed-files/us1.5-implement-cache-for-parsed-files.md#Phase%201%20Parser%20Output%20Contract%20Validation%20&%20Documentation)",
							"href": "user-stories/us1.5-implement-cache-for-parsed-files/us1.5-implement-cache-for-parsed-files.md#Phase%201%20Parser%20Output%20Contract%20Validation%20&%20Documentation",
							"title": null,
							"text": "US1.5 Phase 1",
							"tokens": [
								{
									"type": "text",
									"raw": "US1.5 Phase 1",
									"text": "US1.5 Phase 1",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ". Base schema includes ",
							"text": ". Base schema includes ",
							"escaped": false
						},
						{
							"type": "codespan",
							"raw": "`{ filePath, content, tokens, links, headings, anchors }`",
							"text": "{ filePath, content, tokens, links, headings, anchors }"
						},
						{
							"type": "text",
							"raw": " with LinkObject and AnchorObject structures.\n",
							"text": " with LinkObject and AnchorObject structures.\n",
							"escaped": false
						},
						{
							"type": "em",
							"raw": "_Resolution Date_",
							"text": "Resolution Date",
							"tokens": [
								{
									"type": "text",
									"raw": "Resolution Date",
									"text": "Resolution Date",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ": 2025-10-07\n",
							"text": ": 2025-10-07\n",
							"escaped": false
						},
						{
							"type": "em",
							"raw": "_Epic 2 Note_",
							"text": "Epic 2 Note",
							"tokens": [
								{
									"type": "text",
									"raw": "Epic 2 Note",
									"text": "Epic 2 Note",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ": Base schema sufficient for ContentExtractor. May require minor extensions for content extraction metadata if Story 2.1 analysis identifies gaps.",
							"text": ": Base schema sufficient for ContentExtractor. May require minor extensions for content extraction metadata if Story 2.1 analysis identifies gaps.",
							"escaped": false
						}
					]
				}
			],
			"text": "[!success] **Technical Lead Feedback**: Parser output data contract design ✅ RESOLVED\n_Resolution_: MarkdownParser.Output.DataContract schema validated and documented via [US1.5 Phase 1](user-stories/us1.5-implement-cache-for-parsed-files/us1.5-implement-cache-for-parsed-files.md#Phase%201%20Parser%20Output%20Contract%20Validation%20&%20Documentation). Base schema includes `{ filePath, content, tokens, links, headings, anchors }` with LinkObject and AnchorObject structures.\n_Resolution Date_: 2025-10-07\n_Epic 2 Note_: Base schema sufficient for ContentExtractor. May require minor extensions for content extraction metadata if Story 2.1 analysis identifies gaps."
		},
		{
			"type": "html",
			"block": true,
			"raw": "<!-- -->\n",
			"pre": false,
			"text": "<!-- -->\n"
		},
		{
			"type": "blockquote",
			"raw": "> [!warning] **Technical Lead Feedback**: Parser-extractor interaction model design required (Epic 2)\n> _Architecture Impact_: The interaction model between the parser and the new extractor component needs to be designed, including the specific data structures they will use to communicate.\n> _Status_: Active - Required before Story 2.2 implementation\n> _Relevant Architecture Principles_: [black-box-interfaces](../../../../../design-docs/Architecture%20Principles.md#^black-box-interfaces), [data-model-first](../../../../../design-docs/Architecture%20Principles.md#^data-model-first), [single-responsibility](../../../../../design-docs/Architecture%20Principles.md#^single-responsibility)\n",
			"tokens": [
				{
					"type": "paragraph",
					"raw": "[!warning] **Technical Lead Feedback**: Parser-extractor interaction model design required (Epic 2)\n_Architecture Impact_: The interaction model between the parser and the new extractor component needs to be designed, including the specific data structures they will use to communicate.\n_Status_: Active - Required before Story 2.2 implementation\n_Relevant Architecture Principles_: [black-box-interfaces](../../../../../design-docs/Architecture%20Principles.md#^black-box-interfaces), [data-model-first](../../../../../design-docs/Architecture%20Principles.md#^data-model-first), [single-responsibility](../../../../../design-docs/Architecture%20Principles.md#^single-responsibility)",
					"text": "[!warning] **Technical Lead Feedback**: Parser-extractor interaction model design required (Epic 2)\n_Architecture Impact_: The interaction model between the parser and the new extractor component needs to be designed, including the specific data structures they will use to communicate.\n_Status_: Active - Required before Story 2.2 implementation\n_Relevant Architecture Principles_: [black-box-interfaces](../../../../../design-docs/Architecture%20Principles.md#^black-box-interfaces), [data-model-first](../../../../../design-docs/Architecture%20Principles.md#^data-model-first), [single-responsibility](../../../../../design-docs/Architecture%20Principles.md#^single-responsibility)",
					"tokens": [
						{
							"type": "text",
							"raw": "[!warning] ",
							"text": "[!warning] "
						},
						{
							"type": "strong",
							"raw": "**Technical Lead Feedback**",
							"text": "Technical Lead Feedback",
							"tokens": [
								{
									"type": "text",
									"raw": "Technical Lead Feedback",
									"text": "Technical Lead Feedback",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ": Parser-extractor interaction model design required (Epic 2)\n",
							"text": ": Parser-extractor interaction model design required (Epic 2)\n",
							"escaped": false
						},
						{
							"type": "em",
							"raw": "_Architecture Impact_",
							"text": "Architecture Impact",
							"tokens": [
								{
									"type": "text",
									"raw": "Architecture Impact",
									"text": "Architecture Impact",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ": The interaction model between the parser and the new extractor component needs to be designed, including the specific data structures they will use to communicate.\n",
							"text": ": The interaction model between the parser and the new extractor component needs to be designed, including the specific data structures they will use to communicate.\n",
							"escaped": false
						},
						{
							"type": "em",
							"raw": "_Status_",
							"text": "Status",
							"tokens": [
								{
									"type": "text",
									"raw": "Status",
									"text": "Status",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ": Active - Required before Story 2.2 implementation\n",
							"text": ": Active - Required before Story 2.2 implementation\n",
							"escaped": false
						},
						{
							"type": "em",
							"raw": "_Relevant Architecture Principles_",
							"text": "Relevant Architecture Principles",
							"tokens": [
								{
									"type": "text",
									"raw": "Relevant Architecture Principles",
									"text": "Relevant Architecture Principles",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ": ",
							"text": ": ",
							"escaped": false
						},
						{
							"type": "link",
							"raw": "[black-box-interfaces](../../../../../design-docs/Architecture%20Principles.md#^black-box-interfaces)",
							"href": "../../../../../design-docs/Architecture%20Principles.md#^black-box-interfaces",
							"title": null,
							"text": "black-box-interfaces",
							"tokens": [
								{
									"type": "text",
									"raw": "black-box-interfaces",
									"text": "black-box-interfaces",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ", ",
							"text": ", ",
							"escaped": false
						},
						{
							"type": "link",
							"raw": "[data-model-first](../../../../../design-docs/Architecture%20Principles.md#^data-model-first)",
							"href": "../../../../../design-docs/Architecture%20Principles.md#^data-model-first",
							"title": null,
							"text": "data-model-first",
							"tokens": [
								{
									"type": "text",
									"raw": "data-model-first",
									"text": "data-model-first",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ", ",
							"text": ", ",
							"escaped": false
						},
						{
							"type": "link",
							"raw": "[single-responsibility](../../../../../design-docs/Architecture%20Principles.md#^single-responsibility)",
							"href": "../../../../../design-docs/Architecture%20Principles.md#^single-responsibility",
							"title": null,
							"text": "single-responsibility",
							"tokens": [
								{
									"type": "text",
									"raw": "single-responsibility",
									"text": "single-responsibility",
									"escaped": false
								}
							]
						}
					]
				}
			],
			"text": "[!warning] **Technical Lead Feedback**: Parser-extractor interaction model design required (Epic 2)\n_Architecture Impact_: The interaction model between the parser and the new extractor component needs to be designed, including the specific data structures they will use to communicate.\n_Status_: Active - Required before Story 2.2 implementation\n_Relevant Architecture Principles_: [black-box-interfaces](../../../../../design-docs/Architecture%20Principles.md#^black-box-interfaces), [data-model-first](../../../../../design-docs/Architecture%20Principles.md#^data-model-first), [single-responsibility](../../../../../design-docs/Architecture%20Principles.md#^single-responsibility)"
		},
		{
			"type": "html",
			"block": true,
			"raw": "<!-- -->\n",
			"pre": false,
			"text": "<!-- -->\n"
		},
		{
			"type": "blockquote",
			"raw": "> [!warning] **Technical Lead Feedback**: CLI interface design decision needed (Epic 2)\n> _Architecture Impact_: Research and a design decision are needed to confirm if adding a feature flag to the `validate` command is the correct long-term CLI interface, or if a new, dedicated `extract` command would be more intuitive and extensible.\n> _Status_: Active - Required before Story 2.3 implementation\n> _Relevant Architecture Principles_: [simplicity-first](../../../../../design-docs/Architecture%20Principles.md#^simplicity-first), [follow-conventions](../../../../../design-docs/Architecture%20Principles.md#^follow-conventions), [immediate-understanding](../../../../../design-docs/Architecture%20Principles.md#^immediate-understanding), [extension-over-modification](../../../../../design-docs/Architecture%20Principles.md#^extension-over-modification)",
			"tokens": [
				{
					"type": "paragraph",
					"raw": "[!warning] **Technical Lead Feedback**: CLI interface design decision needed (Epic 2)\n_Architecture Impact_: Research and a design decision are needed to confirm if adding a feature flag to the `validate` command is the correct long-term CLI interface, or if a new, dedicated `extract` command would be more intuitive and extensible.\n_Status_: Active - Required before Story 2.3 implementation\n_Relevant Architecture Principles_: [simplicity-first](../../../../../design-docs/Architecture%20Principles.md#^simplicity-first), [follow-conventions](../../../../../design-docs/Architecture%20Principles.md#^follow-conventions), [immediate-understanding](../../../../../design-docs/Architecture%20Principles.md#^immediate-understanding), [extension-over-modification](../../../../../design-docs/Architecture%20Principles.md#^extension-over-modification)",
					"text": "[!warning] **Technical Lead Feedback**: CLI interface design decision needed (Epic 2)\n_Architecture Impact_: Research and a design decision are needed to confirm if adding a feature flag to the `validate` command is the correct long-term CLI interface, or if a new, dedicated `extract` command would be more intuitive and extensible.\n_Status_: Active - Required before Story 2.3 implementation\n_Relevant Architecture Principles_: [simplicity-first](../../../../../design-docs/Architecture%20Principles.md#^simplicity-first), [follow-conventions](../../../../../design-docs/Architecture%20Principles.md#^follow-conventions), [immediate-understanding](../../../../../design-docs/Architecture%20Principles.md#^immediate-understanding), [extension-over-modification](../../../../../design-docs/Architecture%20Principles.md#^extension-over-modification)",
					"tokens": [
						{
							"type": "text",
							"raw": "[!warning] ",
							"text": "[!warning] "
						},
						{
							"type": "strong",
							"raw": "**Technical Lead Feedback**",
							"text": "Technical Lead Feedback",
							"tokens": [
								{
									"type": "text",
									"raw": "Technical Lead Feedback",
									"text": "Technical Lead Feedback",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ": CLI interface design decision needed (Epic 2)\n",
							"text": ": CLI interface design decision needed (Epic 2)\n",
							"escaped": false
						},
						{
							"type": "em",
							"raw": "_Architecture Impact_",
							"text": "Architecture Impact",
							"tokens": [
								{
									"type": "text",
									"raw": "Architecture Impact",
									"text": "Architecture Impact",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ": Research and a design decision are needed to confirm if adding a feature flag to the ",
							"text": ": Research and a design decision are needed to confirm if adding a feature flag to the ",
							"escaped": false
						},
						{
							"type": "codespan",
							"raw": "`validate`",
							"text": "validate"
						},
						{
							"type": "text",
							"raw": " command is the correct long-term CLI interface, or if a new, dedicated ",
							"text": " command is the correct long-term CLI interface, or if a new, dedicated ",
							"escaped": false
						},
						{
							"type": "codespan",
							"raw": "`extract`",
							"text": "extract"
						},
						{
							"type": "text",
							"raw": " command would be more intuitive and extensible.\n",
							"text": " command would be more intuitive and extensible.\n",
							"escaped": false
						},
						{
							"type": "em",
							"raw": "_Status_",
							"text": "Status",
							"tokens": [
								{
									"type": "text",
									"raw": "Status",
									"text": "Status",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ": Active - Required before Story 2.3 implementation\n",
							"text": ": Active - Required before Story 2.3 implementation\n",
							"escaped": false
						},
						{
							"type": "em",
							"raw": "_Relevant Architecture Principles_",
							"text": "Relevant Architecture Principles",
							"tokens": [
								{
									"type": "text",
									"raw": "Relevant Architecture Principles",
									"text": "Relevant Architecture Principles",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ": ",
							"text": ": ",
							"escaped": false
						},
						{
							"type": "link",
							"raw": "[simplicity-first](../../../../../design-docs/Architecture%20Principles.md#^simplicity-first)",
							"href": "../../../../../design-docs/Architecture%20Principles.md#^simplicity-first",
							"title": null,
							"text": "simplicity-first",
							"tokens": [
								{
									"type": "text",
									"raw": "simplicity-first",
									"text": "simplicity-first",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ", ",
							"text": ", ",
							"escaped": false
						},
						{
							"type": "link",
							"raw": "[follow-conventions](../../../../../design-docs/Architecture%20Principles.md#^follow-conventions)",
							"href": "../../../../../design-docs/Architecture%20Principles.md#^follow-conventions",
							"title": null,
							"text": "follow-conventions",
							"tokens": [
								{
									"type": "text",
									"raw": "follow-conventions",
									"text": "follow-conventions",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ", ",
							"text": ", ",
							"escaped": false
						},
						{
							"type": "link",
							"raw": "[immediate-understanding](../../../../../design-docs/Architecture%20Principles.md#^immediate-understanding)",
							"href": "../../../../../design-docs/Architecture%20Principles.md#^immediate-understanding",
							"title": null,
							"text": "immediate-understanding",
							"tokens": [
								{
									"type": "text",
									"raw": "immediate-understanding",
									"text": "immediate-understanding",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ", ",
							"text": ", ",
							"escaped": false
						},
						{
							"type": "link",
							"raw": "[extension-over-modification](../../../../../design-docs/Architecture%20Principles.md#^extension-over-modification)",
							"href": "../../../../../design-docs/Architecture%20Principles.md#^extension-over-modification",
							"title": null,
							"text": "extension-over-modification",
							"tokens": [
								{
									"type": "text",
									"raw": "extension-over-modification",
									"text": "extension-over-modification",
									"escaped": false
								}
							]
						}
					]
				}
			],
			"text": "[!warning] **Technical Lead Feedback**: CLI interface design decision needed (Epic 2)\n_Architecture Impact_: Research and a design decision are needed to confirm if adding a feature flag to the `validate` command is the correct long-term CLI interface, or if a new, dedicated `extract` command would be more intuitive and extensible.\n_Status_: Active - Required before Story 2.3 implementation\n_Relevant Architecture Principles_: [simplicity-first](../../../../../design-docs/Architecture%20Principles.md#^simplicity-first), [follow-conventions](../../../../../design-docs/Architecture%20Principles.md#^follow-conventions), [immediate-understanding](../../../../../design-docs/Architecture%20Principles.md#^immediate-understanding), [extension-over-modification](../../../../../design-docs/Architecture%20Principles.md#^extension-over-modification)"
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "hr",
			"raw": "---"
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "heading",
			"raw": "## Feature Epics\n\n",
			"depth": 2,
			"text": "Feature Epics",
			"tokens": [
				{
					"type": "text",
					"raw": "Feature Epics",
					"text": "Feature Epics",
					"escaped": false
				}
			]
		},
		{
			"type": "heading",
			"raw": "### Epic: Citation Manager Test Migration & Content Aggregation\n\n",
			"depth": 3,
			"text": "Epic: Citation Manager Test Migration & Content Aggregation",
			"tokens": [
				{
					"type": "text",
					"raw": "Epic: Citation Manager Test Migration & Content Aggregation",
					"text": "Epic: Citation Manager Test Migration & Content Aggregation",
					"escaped": false
				}
			]
		},
		{
			"type": "paragraph",
			"raw": "This feature encompasses two critical phases:\n",
			"text": "This feature encompasses two critical phases:",
			"tokens": [
				{
					"type": "text",
					"raw": "This feature encompasses two critical phases:",
					"text": "This feature encompasses two critical phases:",
					"escaped": false
				}
			]
		},
		{
			"type": "list",
			"raw": "1. **Test Migration (US 1.4)**: Validate the citation-manager migration by ensuring all tests pass in the workspace\n2. **Content Aggregation (US 2.1-2.3)**: Add content extraction and aggregation capabilities to the tool",
			"ordered": true,
			"start": 1,
			"loose": false,
			"items": [
				{
					"type": "list_item",
					"raw": "1. **Test Migration (US 1.4)**: Validate the citation-manager migration by ensuring all tests pass in the workspace\n",
					"task": false,
					"loose": false,
					"text": "**Test Migration (US 1.4)**: Validate the citation-manager migration by ensuring all tests pass in the workspace",
					"tokens": [
						{
							"type": "text",
							"raw": "**Test Migration (US 1.4)**: Validate the citation-manager migration by ensuring all tests pass in the workspace",
							"text": "**Test Migration (US 1.4)**: Validate the citation-manager migration by ensuring all tests pass in the workspace",
							"tokens": [
								{
									"type": "strong",
									"raw": "**Test Migration (US 1.4)**",
									"text": "Test Migration (US 1.4)",
									"tokens": [
										{
											"type": "text",
											"raw": "Test Migration (US 1.4)",
											"text": "Test Migration (US 1.4)",
											"escaped": false
										}
									]
								},
								{
									"type": "text",
									"raw": ": Validate the citation-manager migration by ensuring all tests pass in the workspace",
									"text": ": Validate the citation-manager migration by ensuring all tests pass in the workspace",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "2. **Content Aggregation (US 2.1-2.3)**: Add content extraction and aggregation capabilities to the tool",
					"task": false,
					"loose": false,
					"text": "**Content Aggregation (US 2.1-2.3)**: Add content extraction and aggregation capabilities to the tool",
					"tokens": [
						{
							"type": "text",
							"raw": "**Content Aggregation (US 2.1-2.3)**: Add content extraction and aggregation capabilities to the tool",
							"text": "**Content Aggregation (US 2.1-2.3)**: Add content extraction and aggregation capabilities to the tool",
							"tokens": [
								{
									"type": "strong",
									"raw": "**Content Aggregation (US 2.1-2.3)**",
									"text": "Content Aggregation (US 2.1-2.3)",
									"tokens": [
										{
											"type": "text",
											"raw": "Content Aggregation (US 2.1-2.3)",
											"text": "Content Aggregation (US 2.1-2.3)",
											"escaped": false
										}
									]
								},
								{
									"type": "text",
									"raw": ": Add content extraction and aggregation capabilities to the tool",
									"text": ": Add content extraction and aggregation capabilities to the tool",
									"escaped": false
								}
							]
						}
					]
				}
			]
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "hr",
			"raw": "---"
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "heading",
			"raw": "### Story 1.4: Migrate and Validate `citation-manager` Test Suite [SUPERSEDED]\n\n",
			"depth": 3,
			"text": "Story 1.4: Migrate and Validate `citation-manager` Test Suite [SUPERSEDED]",
			"tokens": [
				{
					"type": "text",
					"raw": "Story 1.4: Migrate and Validate ",
					"text": "Story 1.4: Migrate and Validate ",
					"escaped": false
				},
				{
					"type": "codespan",
					"raw": "`citation-manager`",
					"text": "citation-manager"
				},
				{
					"type": "text",
					"raw": " Test Suite [SUPERSEDED]",
					"text": " Test Suite [SUPERSEDED]",
					"escaped": false
				}
			]
		},
		{
			"type": "blockquote",
			"raw": "> **⚠️ Story Split per ADR-001**: This story has been decomposed into US1.4a (Test Migration) and US1.4b (DI Refactoring) to separate test framework conversion from architectural refactoring work.\n>\n> **Original AC Mapping**:\n> - US1-4AC1 (file relocation) → US1-4aAC1\n> - US1-4AC2 (Vitest execution) → US1-4aAC3\n> - US1-4AC3 (tests pass) → US1-4aAC5\n> - US1-4AC4 (legacy removal) → US1-4aAC6\n> - US1-4bAC1-6: New requirements for DI refactoring (not in original scope)\n>\n> See [ADR-001: Phased Test Migration Strategy](content-aggregation-architecture.md#ADR-001%20Phased%20Test%20Migration%20Strategy) for decomposition rationale.",
			"tokens": [
				{
					"type": "paragraph",
					"raw": "**⚠️ Story Split per ADR-001**: This story has been decomposed into US1.4a (Test Migration) and US1.4b (DI Refactoring) to separate test framework conversion from architectural refactoring work.",
					"text": "**⚠️ Story Split per ADR-001**: This story has been decomposed into US1.4a (Test Migration) and US1.4b (DI Refactoring) to separate test framework conversion from architectural refactoring work.",
					"tokens": [
						{
							"type": "strong",
							"raw": "**⚠️ Story Split per ADR-001**",
							"text": "⚠️ Story Split per ADR-001",
							"tokens": [
								{
									"type": "text",
									"raw": "⚠️ Story Split per ADR-001",
									"text": "⚠️ Story Split per ADR-001",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ": This story has been decomposed into US1.4a (Test Migration) and US1.4b (DI Refactoring) to separate test framework conversion from architectural refactoring work.",
							"text": ": This story has been decomposed into US1.4a (Test Migration) and US1.4b (DI Refactoring) to separate test framework conversion from architectural refactoring work.",
							"escaped": false
						}
					]
				},
				{
					"type": "space",
					"raw": "\n\n"
				},
				{
					"type": "paragraph",
					"raw": "**Original AC Mapping**:\n",
					"text": "**Original AC Mapping**:",
					"tokens": [
						{
							"type": "strong",
							"raw": "**Original AC Mapping**",
							"text": "Original AC Mapping",
							"tokens": [
								{
									"type": "text",
									"raw": "Original AC Mapping",
									"text": "Original AC Mapping",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ":",
							"text": ":",
							"escaped": false
						}
					]
				},
				{
					"type": "list",
					"raw": "- US1-4AC1 (file relocation) → US1-4aAC1\n- US1-4AC2 (Vitest execution) → US1-4aAC3\n- US1-4AC3 (tests pass) → US1-4aAC5\n- US1-4AC4 (legacy removal) → US1-4aAC6\n- US1-4bAC1-6: New requirements for DI refactoring (not in original scope)",
					"ordered": false,
					"start": "",
					"loose": false,
					"items": [
						{
							"type": "list_item",
							"raw": "- US1-4AC1 (file relocation) → US1-4aAC1\n",
							"task": false,
							"loose": false,
							"text": "US1-4AC1 (file relocation) → US1-4aAC1",
							"tokens": [
								{
									"type": "text",
									"raw": "US1-4AC1 (file relocation) → US1-4aAC1",
									"text": "US1-4AC1 (file relocation) → US1-4aAC1",
									"tokens": [
										{
											"type": "text",
											"raw": "US1-4AC1 (file relocation) → US1-4aAC1",
											"text": "US1-4AC1 (file relocation) → US1-4aAC1",
											"escaped": false
										}
									]
								}
							]
						},
						{
							"type": "list_item",
							"raw": "- US1-4AC2 (Vitest execution) → US1-4aAC3\n",
							"task": false,
							"loose": false,
							"text": "US1-4AC2 (Vitest execution) → US1-4aAC3",
							"tokens": [
								{
									"type": "text",
									"raw": "US1-4AC2 (Vitest execution) → US1-4aAC3",
									"text": "US1-4AC2 (Vitest execution) → US1-4aAC3",
									"tokens": [
										{
											"type": "text",
											"raw": "US1-4AC2 (Vitest execution) → US1-4aAC3",
											"text": "US1-4AC2 (Vitest execution) → US1-4aAC3",
											"escaped": false
										}
									]
								}
							]
						},
						{
							"type": "list_item",
							"raw": "- US1-4AC3 (tests pass) → US1-4aAC5\n",
							"task": false,
							"loose": false,
							"text": "US1-4AC3 (tests pass) → US1-4aAC5",
							"tokens": [
								{
									"type": "text",
									"raw": "US1-4AC3 (tests pass) → US1-4aAC5",
									"text": "US1-4AC3 (tests pass) → US1-4aAC5",
									"tokens": [
										{
											"type": "text",
											"raw": "US1-4AC3 (tests pass) → US1-4aAC5",
											"text": "US1-4AC3 (tests pass) → US1-4aAC5",
											"escaped": false
										}
									]
								}
							]
						},
						{
							"type": "list_item",
							"raw": "- US1-4AC4 (legacy removal) → US1-4aAC6\n",
							"task": false,
							"loose": false,
							"text": "US1-4AC4 (legacy removal) → US1-4aAC6",
							"tokens": [
								{
									"type": "text",
									"raw": "US1-4AC4 (legacy removal) → US1-4aAC6",
									"text": "US1-4AC4 (legacy removal) → US1-4aAC6",
									"tokens": [
										{
											"type": "text",
											"raw": "US1-4AC4 (legacy removal) → US1-4aAC6",
											"text": "US1-4AC4 (legacy removal) → US1-4aAC6",
											"escaped": false
										}
									]
								}
							]
						},
						{
							"type": "list_item",
							"raw": "- US1-4bAC1-6: New requirements for DI refactoring (not in original scope)",
							"task": false,
							"loose": false,
							"text": "US1-4bAC1-6: New requirements for DI refactoring (not in original scope)",
							"tokens": [
								{
									"type": "text",
									"raw": "US1-4bAC1-6: New requirements for DI refactoring (not in original scope)",
									"text": "US1-4bAC1-6: New requirements for DI refactoring (not in original scope)",
									"tokens": [
										{
											"type": "text",
											"raw": "US1-4bAC1-6: New requirements for DI refactoring (not in original scope)",
											"text": "US1-4bAC1-6: New requirements for DI refactoring (not in original scope)",
											"escaped": false
										}
									]
								}
							]
						}
					]
				},
				{
					"type": "space",
					"raw": "\n\n"
				},
				{
					"type": "paragraph",
					"raw": "See [ADR-001: Phased Test Migration Strategy](content-aggregation-architecture.md#ADR-001%20Phased%20Test%20Migration%20Strategy) for decomposition rationale.",
					"text": "See [ADR-001: Phased Test Migration Strategy](content-aggregation-architecture.md#ADR-001%20Phased%20Test%20Migration%20Strategy) for decomposition rationale.",
					"tokens": [
						{
							"type": "text",
							"raw": "See ",
							"text": "See ",
							"escaped": false
						},
						{
							"type": "link",
							"raw": "[ADR-001: Phased Test Migration Strategy](content-aggregation-architecture.md#ADR-001%20Phased%20Test%20Migration%20Strategy)",
							"href": "content-aggregation-architecture.md#ADR-001%20Phased%20Test%20Migration%20Strategy",
							"title": null,
							"text": "ADR-001: Phased Test Migration Strategy",
							"tokens": [
								{
									"type": "text",
									"raw": "ADR-001: Phased Test Migration Strategy",
									"text": "ADR-001: Phased Test Migration Strategy",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": " for decomposition rationale.",
							"text": " for decomposition rationale.",
							"escaped": false
						}
					]
				}
			],
			"text": "**⚠️ Story Split per ADR-001**: This story has been decomposed into US1.4a (Test Migration) and US1.4b (DI Refactoring) to separate test framework conversion from architectural refactoring work.\n\n**Original AC Mapping**:\n- US1-4AC1 (file relocation) → US1-4aAC1\n- US1-4AC2 (Vitest execution) → US1-4aAC3\n- US1-4AC3 (tests pass) → US1-4aAC5\n- US1-4AC4 (legacy removal) → US1-4aAC6\n- US1-4bAC1-6: New requirements for DI refactoring (not in original scope)\n\nSee [ADR-001: Phased Test Migration Strategy](content-aggregation-architecture.md#ADR-001%20Phased%20Test%20Migration%20Strategy) for decomposition rationale."
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "hr",
			"raw": "---"
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "heading",
			"raw": "### Story 1.4a: Migrate citation-manager Test Suite to Vitest\n\n",
			"depth": 3,
			"text": "Story 1.4a: Migrate citation-manager Test Suite to Vitest",
			"tokens": [
				{
					"type": "text",
					"raw": "Story 1.4a: Migrate citation-manager Test Suite to Vitest",
					"text": "Story 1.4a: Migrate citation-manager Test Suite to Vitest",
					"escaped": false
				}
			]
		},
		{
			"type": "paragraph",
			"raw": "**As a** developer,\n**I want** to migrate the existing `citation-manager` test suite from Node.js test runner to Vitest,\n**so that** tests run via the workspace's shared testing framework and validate zero migration regressions.",
			"text": "**As a** developer,\n**I want** to migrate the existing `citation-manager` test suite from Node.js test runner to Vitest,\n**so that** tests run via the workspace's shared testing framework and validate zero migration regressions.",
			"tokens": [
				{
					"type": "strong",
					"raw": "**As a**",
					"text": "As a",
					"tokens": [
						{
							"type": "text",
							"raw": "As a",
							"text": "As a",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": " developer,\n",
					"text": " developer,\n",
					"escaped": false
				},
				{
					"type": "strong",
					"raw": "**I want**",
					"text": "I want",
					"tokens": [
						{
							"type": "text",
							"raw": "I want",
							"text": "I want",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": " to migrate the existing ",
					"text": " to migrate the existing ",
					"escaped": false
				},
				{
					"type": "codespan",
					"raw": "`citation-manager`",
					"text": "citation-manager"
				},
				{
					"type": "text",
					"raw": " test suite from Node.js test runner to Vitest,\n",
					"text": " test suite from Node.js test runner to Vitest,\n",
					"escaped": false
				},
				{
					"type": "strong",
					"raw": "**so that**",
					"text": "so that",
					"tokens": [
						{
							"type": "text",
							"raw": "so that",
							"text": "so that",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": " tests run via the workspace's shared testing framework and validate zero migration regressions.",
					"text": " tests run via the workspace's shared testing framework and validate zero migration regressions.",
					"escaped": false
				}
			]
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "heading",
			"raw": "#### Story 1.4a Acceptance Criteria\n\n",
			"depth": 4,
			"text": "Story 1.4a Acceptance Criteria",
			"tokens": [
				{
					"type": "text",
					"raw": "Story 1.4a Acceptance Criteria",
					"text": "Story 1.4a Acceptance Criteria",
					"escaped": false
				}
			]
		},
		{
			"type": "list",
			"raw": "1. WHEN the citation-manager test files and fixtures are relocated, THEN they SHALL reside at `tools/citation-manager/test/` within the workspace structure. ^US1-4aAC1\n2. The migrated test suite SHALL use Vitest framework with `describe()`, `it()`, and `expect()` syntax, replacing all `node:test` and `node:assert` usage. ^US1-4aAC2\n3. WHEN `npm test` is executed from workspace root, THEN Vitest SHALL discover and execute all citation-manager tests via the shared test configuration. ^US1-4aAC3\n4. All test files SHALL reference the migrated citation-manager CLI at `tools/citation-manager/src/citation-manager.js` using workspace-relative paths. ^US1-4aAC4\n5. GIVEN all test framework conversions are complete, WHEN the migrated test suite executes, THEN all 50+ existing tests SHALL pass without regression. ^US1-4aAC5\n6. WHEN test migration validation confirms success (AC5 satisfied), THEN the legacy test location `src/tools/utility-scripts/citation-links/test/` SHALL be removed. ^US1-4aAC6",
			"ordered": true,
			"start": 1,
			"loose": false,
			"items": [
				{
					"type": "list_item",
					"raw": "1. WHEN the citation-manager test files and fixtures are relocated, THEN they SHALL reside at `tools/citation-manager/test/` within the workspace structure. ^US1-4aAC1\n",
					"task": false,
					"loose": false,
					"text": "WHEN the citation-manager test files and fixtures are relocated, THEN they SHALL reside at `tools/citation-manager/test/` within the workspace structure. ^US1-4aAC1",
					"tokens": [
						{
							"type": "text",
							"raw": "WHEN the citation-manager test files and fixtures are relocated, THEN they SHALL reside at `tools/citation-manager/test/` within the workspace structure. ^US1-4aAC1",
							"text": "WHEN the citation-manager test files and fixtures are relocated, THEN they SHALL reside at `tools/citation-manager/test/` within the workspace structure. ^US1-4aAC1",
							"tokens": [
								{
									"type": "text",
									"raw": "WHEN the citation-manager test files and fixtures are relocated, THEN they SHALL reside at ",
									"text": "WHEN the citation-manager test files and fixtures are relocated, THEN they SHALL reside at ",
									"escaped": false
								},
								{
									"type": "codespan",
									"raw": "`tools/citation-manager/test/`",
									"text": "tools/citation-manager/test/"
								},
								{
									"type": "text",
									"raw": " within the workspace structure. ^US1-4aAC1",
									"text": " within the workspace structure. ^US1-4aAC1",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "2. The migrated test suite SHALL use Vitest framework with `describe()`, `it()`, and `expect()` syntax, replacing all `node:test` and `node:assert` usage. ^US1-4aAC2\n",
					"task": false,
					"loose": false,
					"text": "The migrated test suite SHALL use Vitest framework with `describe()`, `it()`, and `expect()` syntax, replacing all `node:test` and `node:assert` usage. ^US1-4aAC2",
					"tokens": [
						{
							"type": "text",
							"raw": "The migrated test suite SHALL use Vitest framework with `describe()`, `it()`, and `expect()` syntax, replacing all `node:test` and `node:assert` usage. ^US1-4aAC2",
							"text": "The migrated test suite SHALL use Vitest framework with `describe()`, `it()`, and `expect()` syntax, replacing all `node:test` and `node:assert` usage. ^US1-4aAC2",
							"tokens": [
								{
									"type": "text",
									"raw": "The migrated test suite SHALL use Vitest framework with ",
									"text": "The migrated test suite SHALL use Vitest framework with ",
									"escaped": false
								},
								{
									"type": "codespan",
									"raw": "`describe()`",
									"text": "describe()"
								},
								{
									"type": "text",
									"raw": ", ",
									"text": ", ",
									"escaped": false
								},
								{
									"type": "codespan",
									"raw": "`it()`",
									"text": "it()"
								},
								{
									"type": "text",
									"raw": ", and ",
									"text": ", and ",
									"escaped": false
								},
								{
									"type": "codespan",
									"raw": "`expect()`",
									"text": "expect()"
								},
								{
									"type": "text",
									"raw": " syntax, replacing all ",
									"text": " syntax, replacing all ",
									"escaped": false
								},
								{
									"type": "codespan",
									"raw": "`node:test`",
									"text": "node:test"
								},
								{
									"type": "text",
									"raw": " and ",
									"text": " and ",
									"escaped": false
								},
								{
									"type": "codespan",
									"raw": "`node:assert`",
									"text": "node:assert"
								},
								{
									"type": "text",
									"raw": " usage. ^US1-4aAC2",
									"text": " usage. ^US1-4aAC2",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "3. WHEN `npm test` is executed from workspace root, THEN Vitest SHALL discover and execute all citation-manager tests via the shared test configuration. ^US1-4aAC3\n",
					"task": false,
					"loose": false,
					"text": "WHEN `npm test` is executed from workspace root, THEN Vitest SHALL discover and execute all citation-manager tests via the shared test configuration. ^US1-4aAC3",
					"tokens": [
						{
							"type": "text",
							"raw": "WHEN `npm test` is executed from workspace root, THEN Vitest SHALL discover and execute all citation-manager tests via the shared test configuration. ^US1-4aAC3",
							"text": "WHEN `npm test` is executed from workspace root, THEN Vitest SHALL discover and execute all citation-manager tests via the shared test configuration. ^US1-4aAC3",
							"tokens": [
								{
									"type": "text",
									"raw": "WHEN ",
									"text": "WHEN ",
									"escaped": false
								},
								{
									"type": "codespan",
									"raw": "`npm test`",
									"text": "npm test"
								},
								{
									"type": "text",
									"raw": " is executed from workspace root, THEN Vitest SHALL discover and execute all citation-manager tests via the shared test configuration. ^US1-4aAC3",
									"text": " is executed from workspace root, THEN Vitest SHALL discover and execute all citation-manager tests via the shared test configuration. ^US1-4aAC3",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "4. All test files SHALL reference the migrated citation-manager CLI at `tools/citation-manager/src/citation-manager.js` using workspace-relative paths. ^US1-4aAC4\n",
					"task": false,
					"loose": false,
					"text": "All test files SHALL reference the migrated citation-manager CLI at `tools/citation-manager/src/citation-manager.js` using workspace-relative paths. ^US1-4aAC4",
					"tokens": [
						{
							"type": "text",
							"raw": "All test files SHALL reference the migrated citation-manager CLI at `tools/citation-manager/src/citation-manager.js` using workspace-relative paths. ^US1-4aAC4",
							"text": "All test files SHALL reference the migrated citation-manager CLI at `tools/citation-manager/src/citation-manager.js` using workspace-relative paths. ^US1-4aAC4",
							"tokens": [
								{
									"type": "text",
									"raw": "All test files SHALL reference the migrated citation-manager CLI at ",
									"text": "All test files SHALL reference the migrated citation-manager CLI at ",
									"escaped": false
								},
								{
									"type": "codespan",
									"raw": "`tools/citation-manager/src/citation-manager.js`",
									"text": "tools/citation-manager/src/citation-manager.js"
								},
								{
									"type": "text",
									"raw": " using workspace-relative paths. ^US1-4aAC4",
									"text": " using workspace-relative paths. ^US1-4aAC4",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "5. GIVEN all test framework conversions are complete, WHEN the migrated test suite executes, THEN all 50+ existing tests SHALL pass without regression. ^US1-4aAC5\n",
					"task": false,
					"loose": false,
					"text": "GIVEN all test framework conversions are complete, WHEN the migrated test suite executes, THEN all 50+ existing tests SHALL pass without regression. ^US1-4aAC5",
					"tokens": [
						{
							"type": "text",
							"raw": "GIVEN all test framework conversions are complete, WHEN the migrated test suite executes, THEN all 50+ existing tests SHALL pass without regression. ^US1-4aAC5",
							"text": "GIVEN all test framework conversions are complete, WHEN the migrated test suite executes, THEN all 50+ existing tests SHALL pass without regression. ^US1-4aAC5",
							"tokens": [
								{
									"type": "text",
									"raw": "GIVEN all test framework conversions are complete, WHEN the migrated test suite executes, THEN all 50+ existing tests SHALL pass without regression. ^US1-4aAC5",
									"text": "GIVEN all test framework conversions are complete, WHEN the migrated test suite executes, THEN all 50+ existing tests SHALL pass without regression. ^US1-4aAC5",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "6. WHEN test migration validation confirms success (AC5 satisfied), THEN the legacy test location `src/tools/utility-scripts/citation-links/test/` SHALL be removed. ^US1-4aAC6",
					"task": false,
					"loose": false,
					"text": "WHEN test migration validation confirms success (AC5 satisfied), THEN the legacy test location `src/tools/utility-scripts/citation-links/test/` SHALL be removed. ^US1-4aAC6",
					"tokens": [
						{
							"type": "text",
							"raw": "WHEN test migration validation confirms success (AC5 satisfied), THEN the legacy test location `src/tools/utility-scripts/citation-links/test/` SHALL be removed. ^US1-4aAC6",
							"text": "WHEN test migration validation confirms success (AC5 satisfied), THEN the legacy test location `src/tools/utility-scripts/citation-links/test/` SHALL be removed. ^US1-4aAC6",
							"tokens": [
								{
									"type": "text",
									"raw": "WHEN test migration validation confirms success (AC5 satisfied), THEN the legacy test location ",
									"text": "WHEN test migration validation confirms success (AC5 satisfied), THEN the legacy test location ",
									"escaped": false
								},
								{
									"type": "codespan",
									"raw": "`src/tools/utility-scripts/citation-links/test/`",
									"text": "src/tools/utility-scripts/citation-links/test/"
								},
								{
									"type": "text",
									"raw": " SHALL be removed. ^US1-4aAC6",
									"text": " SHALL be removed. ^US1-4aAC6",
									"escaped": false
								}
							]
						}
					]
				}
			]
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "paragraph",
			"raw": "**Accepted Technical Debt**: Component tests will temporarily use non-DI instantiation (`new CitationValidator()`) until US1.4b implements constructor-based dependency injection. This deviation from workspace architecture principles is documented in [ADR-001: Phased Test Migration Strategy](content-aggregation-architecture.md#ADR-001%20Phased%20Test%20Migration%20Strategy).",
			"text": "**Accepted Technical Debt**: Component tests will temporarily use non-DI instantiation (`new CitationValidator()`) until US1.4b implements constructor-based dependency injection. This deviation from workspace architecture principles is documented in [ADR-001: Phased Test Migration Strategy](content-aggregation-architecture.md#ADR-001%20Phased%20Test%20Migration%20Strategy).",
			"tokens": [
				{
					"type": "strong",
					"raw": "**Accepted Technical Debt**",
					"text": "Accepted Technical Debt",
					"tokens": [
						{
							"type": "text",
							"raw": "Accepted Technical Debt",
							"text": "Accepted Technical Debt",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": ": Component tests will temporarily use non-DI instantiation (",
					"text": ": Component tests will temporarily use non-DI instantiation (",
					"escaped": false
				},
				{
					"type": "codespan",
					"raw": "`new CitationValidator()`",
					"text": "new CitationValidator()"
				},
				{
					"type": "text",
					"raw": ") until US1.4b implements constructor-based dependency injection. This deviation from workspace architecture principles is documented in ",
					"text": ") until US1.4b implements constructor-based dependency injection. This deviation from workspace architecture principles is documented in ",
					"escaped": false
				},
				{
					"type": "link",
					"raw": "[ADR-001: Phased Test Migration Strategy](content-aggregation-architecture.md#ADR-001%20Phased%20Test%20Migration%20Strategy)",
					"href": "content-aggregation-architecture.md#ADR-001%20Phased%20Test%20Migration%20Strategy",
					"title": null,
					"text": "ADR-001: Phased Test Migration Strategy",
					"tokens": [
						{
							"type": "text",
							"raw": "ADR-001: Phased Test Migration Strategy",
							"text": "ADR-001: Phased Test Migration Strategy",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": ".",
					"text": ".",
					"escaped": false
				}
			]
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "paragraph",
			"raw": "_Depends On_: [US1.3: Make Migrated citation-manager Executable](../../../../../design-docs/features/20250928-cc-workflows-workspace-scaffolding/user-stories/us1.3-make-migrated-citation-manager-executable/us1.3-make-migrated-citation-manager-executable.md)\n_Functional Requirements_: [[#^FR2|FR2]], [[#^FR9|FR9]]\n_User Story Link:_ [us1.4a-migrate-test-suite-to-vitest](user-stories/us1.4a-migrate-test-suite-to-vitest/us1.4a-migrate-test-suite-to-vitest.md)",
			"text": "_Depends On_: [US1.3: Make Migrated citation-manager Executable](../../../../../design-docs/features/20250928-cc-workflows-workspace-scaffolding/user-stories/us1.3-make-migrated-citation-manager-executable/us1.3-make-migrated-citation-manager-executable.md)\n_Functional Requirements_: [[#^FR2|FR2]], [[#^FR9|FR9]]\n_User Story Link:_ [us1.4a-migrate-test-suite-to-vitest](user-stories/us1.4a-migrate-test-suite-to-vitest/us1.4a-migrate-test-suite-to-vitest.md)",
			"tokens": [
				{
					"type": "em",
					"raw": "_Depends On_",
					"text": "Depends On",
					"tokens": [
						{
							"type": "text",
							"raw": "Depends On",
							"text": "Depends On",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": ": ",
					"text": ": ",
					"escaped": false
				},
				{
					"type": "link",
					"raw": "[US1.3: Make Migrated citation-manager Executable](../../../../../design-docs/features/20250928-cc-workflows-workspace-scaffolding/user-stories/us1.3-make-migrated-citation-manager-executable/us1.3-make-migrated-citation-manager-executable.md)",
					"href": "../../../../../design-docs/features/20250928-cc-workflows-workspace-scaffolding/user-stories/us1.3-make-migrated-citation-manager-executable/us1.3-make-migrated-citation-manager-executable.md",
					"title": null,
					"text": "US1.3: Make Migrated citation-manager Executable",
					"tokens": [
						{
							"type": "text",
							"raw": "US1.3: Make Migrated citation-manager Executable",
							"text": "US1.3: Make Migrated citation-manager Executable",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": "\n",
					"text": "\n",
					"escaped": false
				},
				{
					"type": "em",
					"raw": "_Functional Requirements_",
					"text": "Functional Requirements",
					"tokens": [
						{
							"type": "text",
							"raw": "Functional Requirements",
							"text": "Functional Requirements",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": ": [[#^FR2|FR2]], [[#^FR9|FR9]]\n",
					"text": ": [[#^FR2|FR2]], [[#^FR9|FR9]]\n",
					"escaped": false
				},
				{
					"type": "em",
					"raw": "_User Story Link:_",
					"text": "User Story Link:",
					"tokens": [
						{
							"type": "text",
							"raw": "User Story Link:",
							"text": "User Story Link:",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": " ",
					"text": " ",
					"escaped": false
				},
				{
					"type": "link",
					"raw": "[us1.4a-migrate-test-suite-to-vitest](user-stories/us1.4a-migrate-test-suite-to-vitest/us1.4a-migrate-test-suite-to-vitest.md)",
					"href": "user-stories/us1.4a-migrate-test-suite-to-vitest/us1.4a-migrate-test-suite-to-vitest.md",
					"title": null,
					"text": "us1.4a-migrate-test-suite-to-vitest",
					"tokens": [
						{
							"type": "text",
							"raw": "us1.4a-migrate-test-suite-to-vitest",
							"text": "us1.4a-migrate-test-suite-to-vitest",
							"escaped": false
						}
					]
				}
			]
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "hr",
			"raw": "---"
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "heading",
			"raw": "### Story 1.4b: Refactor citation-manager Components for Dependency Injection\n\n",
			"depth": 3,
			"text": "Story 1.4b: Refactor citation-manager Components for Dependency Injection",
			"tokens": [
				{
					"type": "text",
					"raw": "Story 1.4b: Refactor citation-manager Components for Dependency Injection",
					"text": "Story 1.4b: Refactor citation-manager Components for Dependency Injection",
					"escaped": false
				}
			]
		},
		{
			"type": "paragraph",
			"raw": "**As a** developer,\n**I want** to refactor citation-manager components to use constructor-based dependency injection,\n**so that** the tool aligns with workspace architecture principles and enables proper integration testing with real dependencies.",
			"text": "**As a** developer,\n**I want** to refactor citation-manager components to use constructor-based dependency injection,\n**so that** the tool aligns with workspace architecture principles and enables proper integration testing with real dependencies.",
			"tokens": [
				{
					"type": "strong",
					"raw": "**As a**",
					"text": "As a",
					"tokens": [
						{
							"type": "text",
							"raw": "As a",
							"text": "As a",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": " developer,\n",
					"text": " developer,\n",
					"escaped": false
				},
				{
					"type": "strong",
					"raw": "**I want**",
					"text": "I want",
					"tokens": [
						{
							"type": "text",
							"raw": "I want",
							"text": "I want",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": " to refactor citation-manager components to use constructor-based dependency injection,\n",
					"text": " to refactor citation-manager components to use constructor-based dependency injection,\n",
					"escaped": false
				},
				{
					"type": "strong",
					"raw": "**so that**",
					"text": "so that",
					"tokens": [
						{
							"type": "text",
							"raw": "so that",
							"text": "so that",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": " the tool aligns with workspace architecture principles and enables proper integration testing with real dependencies.",
					"text": " the tool aligns with workspace architecture principles and enables proper integration testing with real dependencies.",
					"escaped": false
				}
			]
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "heading",
			"raw": "#### Story 1.4b Acceptance Criteria\n\n",
			"depth": 4,
			"text": "Story 1.4b Acceptance Criteria",
			"tokens": [
				{
					"type": "text",
					"raw": "Story 1.4b Acceptance Criteria",
					"text": "Story 1.4b Acceptance Criteria",
					"escaped": false
				}
			]
		},
		{
			"type": "list",
			"raw": "1. The CitationValidator, MarkdownParser, and FileCache components SHALL accept all dependencies via constructor parameters rather than creating them internally. ^US1-4bAC1\n2. The citation-manager SHALL provide factory functions at `src/factories/componentFactory.js` that instantiate components with standard production dependencies. ^US1-4bAC2\n3. The citation-manager CLI entry point SHALL use factory functions for component instantiation in production execution paths. ^US1-4bAC3\n4. GIVEN component tests require explicit dependency control, WHEN tests instantiate components, THEN they SHALL bypass factory functions and inject real dependencies directly via constructors. ^US1-4bAC4\n5. The test suite SHALL include component integration tests that validate collaboration between CitationValidator, MarkdownParser, and FileCache using real file system operations per workspace \"Real Systems, Fake Fixtures\" principle. ^US1-4bAC5\n6. WHEN DI refactoring completes and all tests pass, THEN the technical debt \"Lack of Dependency Injection\" documented in content-aggregation-architecture.md SHALL be marked as resolved. ^US1-4bAC6",
			"ordered": true,
			"start": 1,
			"loose": false,
			"items": [
				{
					"type": "list_item",
					"raw": "1. The CitationValidator, MarkdownParser, and FileCache components SHALL accept all dependencies via constructor parameters rather than creating them internally. ^US1-4bAC1\n",
					"task": false,
					"loose": false,
					"text": "The CitationValidator, MarkdownParser, and FileCache components SHALL accept all dependencies via constructor parameters rather than creating them internally. ^US1-4bAC1",
					"tokens": [
						{
							"type": "text",
							"raw": "The CitationValidator, MarkdownParser, and FileCache components SHALL accept all dependencies via constructor parameters rather than creating them internally. ^US1-4bAC1",
							"text": "The CitationValidator, MarkdownParser, and FileCache components SHALL accept all dependencies via constructor parameters rather than creating them internally. ^US1-4bAC1",
							"tokens": [
								{
									"type": "text",
									"raw": "The CitationValidator, MarkdownParser, and FileCache components SHALL accept all dependencies via constructor parameters rather than creating them internally. ^US1-4bAC1",
									"text": "The CitationValidator, MarkdownParser, and FileCache components SHALL accept all dependencies via constructor parameters rather than creating them internally. ^US1-4bAC1",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "2. The citation-manager SHALL provide factory functions at `src/factories/componentFactory.js` that instantiate components with standard production dependencies. ^US1-4bAC2\n",
					"task": false,
					"loose": false,
					"text": "The citation-manager SHALL provide factory functions at `src/factories/componentFactory.js` that instantiate components with standard production dependencies. ^US1-4bAC2",
					"tokens": [
						{
							"type": "text",
							"raw": "The citation-manager SHALL provide factory functions at `src/factories/componentFactory.js` that instantiate components with standard production dependencies. ^US1-4bAC2",
							"text": "The citation-manager SHALL provide factory functions at `src/factories/componentFactory.js` that instantiate components with standard production dependencies. ^US1-4bAC2",
							"tokens": [
								{
									"type": "text",
									"raw": "The citation-manager SHALL provide factory functions at ",
									"text": "The citation-manager SHALL provide factory functions at ",
									"escaped": false
								},
								{
									"type": "codespan",
									"raw": "`src/factories/componentFactory.js`",
									"text": "src/factories/componentFactory.js"
								},
								{
									"type": "text",
									"raw": " that instantiate components with standard production dependencies. ^US1-4bAC2",
									"text": " that instantiate components with standard production dependencies. ^US1-4bAC2",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "3. The citation-manager CLI entry point SHALL use factory functions for component instantiation in production execution paths. ^US1-4bAC3\n",
					"task": false,
					"loose": false,
					"text": "The citation-manager CLI entry point SHALL use factory functions for component instantiation in production execution paths. ^US1-4bAC3",
					"tokens": [
						{
							"type": "text",
							"raw": "The citation-manager CLI entry point SHALL use factory functions for component instantiation in production execution paths. ^US1-4bAC3",
							"text": "The citation-manager CLI entry point SHALL use factory functions for component instantiation in production execution paths. ^US1-4bAC3",
							"tokens": [
								{
									"type": "text",
									"raw": "The citation-manager CLI entry point SHALL use factory functions for component instantiation in production execution paths. ^US1-4bAC3",
									"text": "The citation-manager CLI entry point SHALL use factory functions for component instantiation in production execution paths. ^US1-4bAC3",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "4. GIVEN component tests require explicit dependency control, WHEN tests instantiate components, THEN they SHALL bypass factory functions and inject real dependencies directly via constructors. ^US1-4bAC4\n",
					"task": false,
					"loose": false,
					"text": "GIVEN component tests require explicit dependency control, WHEN tests instantiate components, THEN they SHALL bypass factory functions and inject real dependencies directly via constructors. ^US1-4bAC4",
					"tokens": [
						{
							"type": "text",
							"raw": "GIVEN component tests require explicit dependency control, WHEN tests instantiate components, THEN they SHALL bypass factory functions and inject real dependencies directly via constructors. ^US1-4bAC4",
							"text": "GIVEN component tests require explicit dependency control, WHEN tests instantiate components, THEN they SHALL bypass factory functions and inject real dependencies directly via constructors. ^US1-4bAC4",
							"tokens": [
								{
									"type": "text",
									"raw": "GIVEN component tests require explicit dependency control, WHEN tests instantiate components, THEN they SHALL bypass factory functions and inject real dependencies directly via constructors. ^US1-4bAC4",
									"text": "GIVEN component tests require explicit dependency control, WHEN tests instantiate components, THEN they SHALL bypass factory functions and inject real dependencies directly via constructors. ^US1-4bAC4",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "5. The test suite SHALL include component integration tests that validate collaboration between CitationValidator, MarkdownParser, and FileCache using real file system operations per workspace \"Real Systems, Fake Fixtures\" principle. ^US1-4bAC5\n",
					"task": false,
					"loose": false,
					"text": "The test suite SHALL include component integration tests that validate collaboration between CitationValidator, MarkdownParser, and FileCache using real file system operations per workspace \"Real Systems, Fake Fixtures\" principle. ^US1-4bAC5",
					"tokens": [
						{
							"type": "text",
							"raw": "The test suite SHALL include component integration tests that validate collaboration between CitationValidator, MarkdownParser, and FileCache using real file system operations per workspace \"Real Systems, Fake Fixtures\" principle. ^US1-4bAC5",
							"text": "The test suite SHALL include component integration tests that validate collaboration between CitationValidator, MarkdownParser, and FileCache using real file system operations per workspace \"Real Systems, Fake Fixtures\" principle. ^US1-4bAC5",
							"tokens": [
								{
									"type": "text",
									"raw": "The test suite SHALL include component integration tests that validate collaboration between CitationValidator, MarkdownParser, and FileCache using real file system operations per workspace \"Real Systems, Fake Fixtures\" principle. ^US1-4bAC5",
									"text": "The test suite SHALL include component integration tests that validate collaboration between CitationValidator, MarkdownParser, and FileCache using real file system operations per workspace \"Real Systems, Fake Fixtures\" principle. ^US1-4bAC5",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "6. WHEN DI refactoring completes and all tests pass, THEN the technical debt \"Lack of Dependency Injection\" documented in content-aggregation-architecture.md SHALL be marked as resolved. ^US1-4bAC6",
					"task": false,
					"loose": false,
					"text": "WHEN DI refactoring completes and all tests pass, THEN the technical debt \"Lack of Dependency Injection\" documented in content-aggregation-architecture.md SHALL be marked as resolved. ^US1-4bAC6",
					"tokens": [
						{
							"type": "text",
							"raw": "WHEN DI refactoring completes and all tests pass, THEN the technical debt \"Lack of Dependency Injection\" documented in content-aggregation-architecture.md SHALL be marked as resolved. ^US1-4bAC6",
							"text": "WHEN DI refactoring completes and all tests pass, THEN the technical debt \"Lack of Dependency Injection\" documented in content-aggregation-architecture.md SHALL be marked as resolved. ^US1-4bAC6",
							"tokens": [
								{
									"type": "text",
									"raw": "WHEN DI refactoring completes and all tests pass, THEN the technical debt \"Lack of Dependency Injection\" documented in content-aggregation-architecture.md SHALL be marked as resolved. ^US1-4bAC6",
									"text": "WHEN DI refactoring completes and all tests pass, THEN the technical debt \"Lack of Dependency Injection\" documented in content-aggregation-architecture.md SHALL be marked as resolved. ^US1-4bAC6",
									"escaped": false
								}
							]
						}
					]
				}
			]
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "paragraph",
			"raw": "_Depends On_: Story [Story 1.4a: Migrate citation-manager Test Suite to Vitest](#Story%201.4a%20Migrate%20citation-manager%20Test%20Suite%20to%20Vitest)\n_Enables_: [Story 2.1: Enhance Parser to Handle Full-File and Section Links](#Story%202.1%20Enhance%20Parser%20to%20Handle%20Full-File%20and%20Section%20Links)\n_Closes Technical Debt_: [Lack of Dependency Injection](content-aggregation-architecture.md#Lack%20of%20Dependency%20Injection)\n_Functional Requirements_: [[#^FR2|FR2]], [[#^FR8|FR8]]\n_User Story Link:_ [us1.4b-refactor-components-for-di](user-stories/us1.4b-refactor-components-for-di/us1.4b-refactor-components-for-di.md)",
			"text": "_Depends On_: Story [Story 1.4a: Migrate citation-manager Test Suite to Vitest](#Story%201.4a%20Migrate%20citation-manager%20Test%20Suite%20to%20Vitest)\n_Enables_: [Story 2.1: Enhance Parser to Handle Full-File and Section Links](#Story%202.1%20Enhance%20Parser%20to%20Handle%20Full-File%20and%20Section%20Links)\n_Closes Technical Debt_: [Lack of Dependency Injection](content-aggregation-architecture.md#Lack%20of%20Dependency%20Injection)\n_Functional Requirements_: [[#^FR2|FR2]], [[#^FR8|FR8]]\n_User Story Link:_ [us1.4b-refactor-components-for-di](user-stories/us1.4b-refactor-components-for-di/us1.4b-refactor-components-for-di.md)",
			"tokens": [
				{
					"type": "em",
					"raw": "_Depends On_",
					"text": "Depends On",
					"tokens": [
						{
							"type": "text",
							"raw": "Depends On",
							"text": "Depends On",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": ": Story ",
					"text": ": Story ",
					"escaped": false
				},
				{
					"type": "link",
					"raw": "[Story 1.4a: Migrate citation-manager Test Suite to Vitest](#Story%201.4a%20Migrate%20citation-manager%20Test%20Suite%20to%20Vitest)",
					"href": "#Story%201.4a%20Migrate%20citation-manager%20Test%20Suite%20to%20Vitest",
					"title": null,
					"text": "Story 1.4a: Migrate citation-manager Test Suite to Vitest",
					"tokens": [
						{
							"type": "text",
							"raw": "Story 1.4a: Migrate citation-manager Test Suite to Vitest",
							"text": "Story 1.4a: Migrate citation-manager Test Suite to Vitest",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": "\n",
					"text": "\n",
					"escaped": false
				},
				{
					"type": "em",
					"raw": "_Enables_",
					"text": "Enables",
					"tokens": [
						{
							"type": "text",
							"raw": "Enables",
							"text": "Enables",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": ": ",
					"text": ": ",
					"escaped": false
				},
				{
					"type": "link",
					"raw": "[Story 2.1: Enhance Parser to Handle Full-File and Section Links](#Story%202.1%20Enhance%20Parser%20to%20Handle%20Full-File%20and%20Section%20Links)",
					"href": "#Story%202.1%20Enhance%20Parser%20to%20Handle%20Full-File%20and%20Section%20Links",
					"title": null,
					"text": "Story 2.1: Enhance Parser to Handle Full-File and Section Links",
					"tokens": [
						{
							"type": "text",
							"raw": "Story 2.1: Enhance Parser to Handle Full-File and Section Links",
							"text": "Story 2.1: Enhance Parser to Handle Full-File and Section Links",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": "\n",
					"text": "\n",
					"escaped": false
				},
				{
					"type": "em",
					"raw": "_Closes Technical Debt_",
					"text": "Closes Technical Debt",
					"tokens": [
						{
							"type": "text",
							"raw": "Closes Technical Debt",
							"text": "Closes Technical Debt",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": ": ",
					"text": ": ",
					"escaped": false
				},
				{
					"type": "link",
					"raw": "[Lack of Dependency Injection](content-aggregation-architecture.md#Lack%20of%20Dependency%20Injection)",
					"href": "content-aggregation-architecture.md#Lack%20of%20Dependency%20Injection",
					"title": null,
					"text": "Lack of Dependency Injection",
					"tokens": [
						{
							"type": "text",
							"raw": "Lack of Dependency Injection",
							"text": "Lack of Dependency Injection",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": "\n",
					"text": "\n",
					"escaped": false
				},
				{
					"type": "em",
					"raw": "_Functional Requirements_",
					"text": "Functional Requirements",
					"tokens": [
						{
							"type": "text",
							"raw": "Functional Requirements",
							"text": "Functional Requirements",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": ": [[#^FR2|FR2]], [[#^FR8|FR8]]\n",
					"text": ": [[#^FR2|FR2]], [[#^FR8|FR8]]\n",
					"escaped": false
				},
				{
					"type": "em",
					"raw": "_User Story Link:_",
					"text": "User Story Link:",
					"tokens": [
						{
							"type": "text",
							"raw": "User Story Link:",
							"text": "User Story Link:",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": " ",
					"text": " ",
					"escaped": false
				},
				{
					"type": "link",
					"raw": "[us1.4b-refactor-components-for-di](user-stories/us1.4b-refactor-components-for-di/us1.4b-refactor-components-for-di.md)",
					"href": "user-stories/us1.4b-refactor-components-for-di/us1.4b-refactor-components-for-di.md",
					"title": null,
					"text": "us1.4b-refactor-components-for-di",
					"tokens": [
						{
							"type": "text",
							"raw": "us1.4b-refactor-components-for-di",
							"text": "us1.4b-refactor-components-for-di",
							"escaped": false
						}
					]
				}
			]
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "hr",
			"raw": "---\n"
		},
		{
			"type": "heading",
			"raw": "### Story 1.5: Implement a Cache for Parsed File Objects\n\n",
			"depth": 3,
			"text": "Story 1.5: Implement a Cache for Parsed File Objects",
			"tokens": [
				{
					"type": "text",
					"raw": "Story 1.5: Implement a Cache for Parsed File Objects",
					"text": "Story 1.5: Implement a Cache for Parsed File Objects",
					"escaped": false
				}
			]
		},
		{
			"type": "paragraph",
			"raw": "**As a** `citation-manager` tool,\n**I want** to implement a caching layer that stores parsed file objects (the `MarkdownParser.Output.DataContract`) in memory during a single command run,\n**so that** I can eliminate redundant file read operations, improve performance, and provide an efficient foundation for new features like content extraction.",
			"text": "**As a** `citation-manager` tool,\n**I want** to implement a caching layer that stores parsed file objects (the `MarkdownParser.Output.DataContract`) in memory during a single command run,\n**so that** I can eliminate redundant file read operations, improve performance, and provide an efficient foundation for new features like content extraction.",
			"tokens": [
				{
					"type": "strong",
					"raw": "**As a**",
					"text": "As a",
					"tokens": [
						{
							"type": "text",
							"raw": "As a",
							"text": "As a",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": " ",
					"text": " ",
					"escaped": false
				},
				{
					"type": "codespan",
					"raw": "`citation-manager`",
					"text": "citation-manager"
				},
				{
					"type": "text",
					"raw": " tool,\n",
					"text": " tool,\n",
					"escaped": false
				},
				{
					"type": "strong",
					"raw": "**I want**",
					"text": "I want",
					"tokens": [
						{
							"type": "text",
							"raw": "I want",
							"text": "I want",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": " to implement a caching layer that stores parsed file objects (the ",
					"text": " to implement a caching layer that stores parsed file objects (the ",
					"escaped": false
				},
				{
					"type": "codespan",
					"raw": "`MarkdownParser.Output.DataContract`",
					"text": "MarkdownParser.Output.DataContract"
				},
				{
					"type": "text",
					"raw": ") in memory during a single command run,\n",
					"text": ") in memory during a single command run,\n",
					"escaped": false
				},
				{
					"type": "strong",
					"raw": "**so that**",
					"text": "so that",
					"tokens": [
						{
							"type": "text",
							"raw": "so that",
							"text": "so that",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": " I can eliminate redundant file read operations, improve performance, and provide an efficient foundation for new features like content extraction.",
					"text": " I can eliminate redundant file read operations, improve performance, and provide an efficient foundation for new features like content extraction.",
					"escaped": false
				}
			]
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "heading",
			"raw": "#### Story 1.5 Acceptance Criteria\n\n",
			"depth": 4,
			"text": "Story 1.5 Acceptance Criteria",
			"tokens": [
				{
					"type": "text",
					"raw": "Story 1.5 Acceptance Criteria",
					"text": "Story 1.5 Acceptance Criteria",
					"escaped": false
				}
			]
		},
		{
			"type": "list",
			"raw": "1. GIVEN a file has already been parsed during a command's execution, WHEN a subsequent request is made for its parsed data, THEN the system SHALL return the `MarkdownParser.Output.DataContract` object from the in-memory cache instead of re-reading the file from disk. ^US1-5AC1\n2. GIVEN a file has not yet been parsed, WHEN a request is made for its parsed data, THEN the system SHALL parse the file from disk, store the resulting `MarkdownParser.Output.DataContract` object in the cache, and then return it. ^US1-5AC2\n3. The `CitationValidator` component SHALL be refactored to use this caching layer for all file parsing operations. ^US1-5AC3\n4. WHEN validating a document that contains multiple links to the same target file, THEN the target file SHALL only be read from disk and parsed once per command execution. ^US1-5AC4\n5. GIVEN the new caching layer is implemented, WHEN the full test suite is executed, THEN all existing tests SHALL pass, confirming zero functional regressions. ^US1-5AC5",
			"ordered": true,
			"start": 1,
			"loose": false,
			"items": [
				{
					"type": "list_item",
					"raw": "1. GIVEN a file has already been parsed during a command's execution, WHEN a subsequent request is made for its parsed data, THEN the system SHALL return the `MarkdownParser.Output.DataContract` object from the in-memory cache instead of re-reading the file from disk. ^US1-5AC1\n",
					"task": false,
					"loose": false,
					"text": "GIVEN a file has already been parsed during a command's execution, WHEN a subsequent request is made for its parsed data, THEN the system SHALL return the `MarkdownParser.Output.DataContract` object from the in-memory cache instead of re-reading the file from disk. ^US1-5AC1",
					"tokens": [
						{
							"type": "text",
							"raw": "GIVEN a file has already been parsed during a command's execution, WHEN a subsequent request is made for its parsed data, THEN the system SHALL return the `MarkdownParser.Output.DataContract` object from the in-memory cache instead of re-reading the file from disk. ^US1-5AC1",
							"text": "GIVEN a file has already been parsed during a command's execution, WHEN a subsequent request is made for its parsed data, THEN the system SHALL return the `MarkdownParser.Output.DataContract` object from the in-memory cache instead of re-reading the file from disk. ^US1-5AC1",
							"tokens": [
								{
									"type": "text",
									"raw": "GIVEN a file has already been parsed during a command's execution, WHEN a subsequent request is made for its parsed data, THEN the system SHALL return the ",
									"text": "GIVEN a file has already been parsed during a command's execution, WHEN a subsequent request is made for its parsed data, THEN the system SHALL return the ",
									"escaped": false
								},
								{
									"type": "codespan",
									"raw": "`MarkdownParser.Output.DataContract`",
									"text": "MarkdownParser.Output.DataContract"
								},
								{
									"type": "text",
									"raw": " object from the in-memory cache instead of re-reading the file from disk. ^US1-5AC1",
									"text": " object from the in-memory cache instead of re-reading the file from disk. ^US1-5AC1",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "2. GIVEN a file has not yet been parsed, WHEN a request is made for its parsed data, THEN the system SHALL parse the file from disk, store the resulting `MarkdownParser.Output.DataContract` object in the cache, and then return it. ^US1-5AC2\n",
					"task": false,
					"loose": false,
					"text": "GIVEN a file has not yet been parsed, WHEN a request is made for its parsed data, THEN the system SHALL parse the file from disk, store the resulting `MarkdownParser.Output.DataContract` object in the cache, and then return it. ^US1-5AC2",
					"tokens": [
						{
							"type": "text",
							"raw": "GIVEN a file has not yet been parsed, WHEN a request is made for its parsed data, THEN the system SHALL parse the file from disk, store the resulting `MarkdownParser.Output.DataContract` object in the cache, and then return it. ^US1-5AC2",
							"text": "GIVEN a file has not yet been parsed, WHEN a request is made for its parsed data, THEN the system SHALL parse the file from disk, store the resulting `MarkdownParser.Output.DataContract` object in the cache, and then return it. ^US1-5AC2",
							"tokens": [
								{
									"type": "text",
									"raw": "GIVEN a file has not yet been parsed, WHEN a request is made for its parsed data, THEN the system SHALL parse the file from disk, store the resulting ",
									"text": "GIVEN a file has not yet been parsed, WHEN a request is made for its parsed data, THEN the system SHALL parse the file from disk, store the resulting ",
									"escaped": false
								},
								{
									"type": "codespan",
									"raw": "`MarkdownParser.Output.DataContract`",
									"text": "MarkdownParser.Output.DataContract"
								},
								{
									"type": "text",
									"raw": " object in the cache, and then return it. ^US1-5AC2",
									"text": " object in the cache, and then return it. ^US1-5AC2",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "3. The `CitationValidator` component SHALL be refactored to use this caching layer for all file parsing operations. ^US1-5AC3\n",
					"task": false,
					"loose": false,
					"text": "The `CitationValidator` component SHALL be refactored to use this caching layer for all file parsing operations. ^US1-5AC3",
					"tokens": [
						{
							"type": "text",
							"raw": "The `CitationValidator` component SHALL be refactored to use this caching layer for all file parsing operations. ^US1-5AC3",
							"text": "The `CitationValidator` component SHALL be refactored to use this caching layer for all file parsing operations. ^US1-5AC3",
							"tokens": [
								{
									"type": "text",
									"raw": "The ",
									"text": "The ",
									"escaped": false
								},
								{
									"type": "codespan",
									"raw": "`CitationValidator`",
									"text": "CitationValidator"
								},
								{
									"type": "text",
									"raw": " component SHALL be refactored to use this caching layer for all file parsing operations. ^US1-5AC3",
									"text": " component SHALL be refactored to use this caching layer for all file parsing operations. ^US1-5AC3",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "4. WHEN validating a document that contains multiple links to the same target file, THEN the target file SHALL only be read from disk and parsed once per command execution. ^US1-5AC4\n",
					"task": false,
					"loose": false,
					"text": "WHEN validating a document that contains multiple links to the same target file, THEN the target file SHALL only be read from disk and parsed once per command execution. ^US1-5AC4",
					"tokens": [
						{
							"type": "text",
							"raw": "WHEN validating a document that contains multiple links to the same target file, THEN the target file SHALL only be read from disk and parsed once per command execution. ^US1-5AC4",
							"text": "WHEN validating a document that contains multiple links to the same target file, THEN the target file SHALL only be read from disk and parsed once per command execution. ^US1-5AC4",
							"tokens": [
								{
									"type": "text",
									"raw": "WHEN validating a document that contains multiple links to the same target file, THEN the target file SHALL only be read from disk and parsed once per command execution. ^US1-5AC4",
									"text": "WHEN validating a document that contains multiple links to the same target file, THEN the target file SHALL only be read from disk and parsed once per command execution. ^US1-5AC4",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "5. GIVEN the new caching layer is implemented, WHEN the full test suite is executed, THEN all existing tests SHALL pass, confirming zero functional regressions. ^US1-5AC5",
					"task": false,
					"loose": false,
					"text": "GIVEN the new caching layer is implemented, WHEN the full test suite is executed, THEN all existing tests SHALL pass, confirming zero functional regressions. ^US1-5AC5",
					"tokens": [
						{
							"type": "text",
							"raw": "GIVEN the new caching layer is implemented, WHEN the full test suite is executed, THEN all existing tests SHALL pass, confirming zero functional regressions. ^US1-5AC5",
							"text": "GIVEN the new caching layer is implemented, WHEN the full test suite is executed, THEN all existing tests SHALL pass, confirming zero functional regressions. ^US1-5AC5",
							"tokens": [
								{
									"type": "text",
									"raw": "GIVEN the new caching layer is implemented, WHEN the full test suite is executed, THEN all existing tests SHALL pass, confirming zero functional regressions. ^US1-5AC5",
									"text": "GIVEN the new caching layer is implemented, WHEN the full test suite is executed, THEN all existing tests SHALL pass, confirming zero functional regressions. ^US1-5AC5",
									"escaped": false
								}
							]
						}
					]
				}
			]
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "paragraph",
			"raw": "_Depends On_: [Story 1.4b: Refactor citation-manager Components for Dependency Injection](#Story%201.4b%20Refactor%20citation-manager%20Components%20for%20Dependency%20Injection)\n_Enables_: [Story 2.1: Enhance Parser to Handle Full-File and Section Links](#Story%202.1%20Enhance%20Parser%20to%20Handle%20Full-File%20and%20Section%20Links)\n_Closes Technical Debt_: [Redundant File Parsing During Validation](content-aggregation-architecture.md#Redundant%20File%20Parsing%20During%20Validation)\n_Functional Requirements_: [[#^FR8|FR8]]\n_Non-Functional Requirements_: [[#^NFR5|NFR5]]\n_User Story Link:_ [us1.5-implement-cache-for-parsed-files](user-stories/us1.5-implement-cache-for-parsed-files/us1.5-implement-cache-for-parsed-files.md)\n_Status_: ✅ COMPLETE (2025-10-07)",
			"text": "_Depends On_: [Story 1.4b: Refactor citation-manager Components for Dependency Injection](#Story%201.4b%20Refactor%20citation-manager%20Components%20for%20Dependency%20Injection)\n_Enables_: [Story 2.1: Enhance Parser to Handle Full-File and Section Links](#Story%202.1%20Enhance%20Parser%20to%20Handle%20Full-File%20and%20Section%20Links)\n_Closes Technical Debt_: [Redundant File Parsing During Validation](content-aggregation-architecture.md#Redundant%20File%20Parsing%20During%20Validation)\n_Functional Requirements_: [[#^FR8|FR8]]\n_Non-Functional Requirements_: [[#^NFR5|NFR5]]\n_User Story Link:_ [us1.5-implement-cache-for-parsed-files](user-stories/us1.5-implement-cache-for-parsed-files/us1.5-implement-cache-for-parsed-files.md)\n_Status_: ✅ COMPLETE (2025-10-07)",
			"tokens": [
				{
					"type": "em",
					"raw": "_Depends On_",
					"text": "Depends On",
					"tokens": [
						{
							"type": "text",
							"raw": "Depends On",
							"text": "Depends On",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": ": ",
					"text": ": ",
					"escaped": false
				},
				{
					"type": "link",
					"raw": "[Story 1.4b: Refactor citation-manager Components for Dependency Injection](#Story%201.4b%20Refactor%20citation-manager%20Components%20for%20Dependency%20Injection)",
					"href": "#Story%201.4b%20Refactor%20citation-manager%20Components%20for%20Dependency%20Injection",
					"title": null,
					"text": "Story 1.4b: Refactor citation-manager Components for Dependency Injection",
					"tokens": [
						{
							"type": "text",
							"raw": "Story 1.4b: Refactor citation-manager Components for Dependency Injection",
							"text": "Story 1.4b: Refactor citation-manager Components for Dependency Injection",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": "\n",
					"text": "\n",
					"escaped": false
				},
				{
					"type": "em",
					"raw": "_Enables_",
					"text": "Enables",
					"tokens": [
						{
							"type": "text",
							"raw": "Enables",
							"text": "Enables",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": ": ",
					"text": ": ",
					"escaped": false
				},
				{
					"type": "link",
					"raw": "[Story 2.1: Enhance Parser to Handle Full-File and Section Links](#Story%202.1%20Enhance%20Parser%20to%20Handle%20Full-File%20and%20Section%20Links)",
					"href": "#Story%202.1%20Enhance%20Parser%20to%20Handle%20Full-File%20and%20Section%20Links",
					"title": null,
					"text": "Story 2.1: Enhance Parser to Handle Full-File and Section Links",
					"tokens": [
						{
							"type": "text",
							"raw": "Story 2.1: Enhance Parser to Handle Full-File and Section Links",
							"text": "Story 2.1: Enhance Parser to Handle Full-File and Section Links",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": "\n",
					"text": "\n",
					"escaped": false
				},
				{
					"type": "em",
					"raw": "_Closes Technical Debt_",
					"text": "Closes Technical Debt",
					"tokens": [
						{
							"type": "text",
							"raw": "Closes Technical Debt",
							"text": "Closes Technical Debt",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": ": ",
					"text": ": ",
					"escaped": false
				},
				{
					"type": "link",
					"raw": "[Redundant File Parsing During Validation](content-aggregation-architecture.md#Redundant%20File%20Parsing%20During%20Validation)",
					"href": "content-aggregation-architecture.md#Redundant%20File%20Parsing%20During%20Validation",
					"title": null,
					"text": "Redundant File Parsing During Validation",
					"tokens": [
						{
							"type": "text",
							"raw": "Redundant File Parsing During Validation",
							"text": "Redundant File Parsing During Validation",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": "\n",
					"text": "\n",
					"escaped": false
				},
				{
					"type": "em",
					"raw": "_Functional Requirements_",
					"text": "Functional Requirements",
					"tokens": [
						{
							"type": "text",
							"raw": "Functional Requirements",
							"text": "Functional Requirements",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": ": [[#^FR8|FR8]]\n",
					"text": ": [[#^FR8|FR8]]\n",
					"escaped": false
				},
				{
					"type": "em",
					"raw": "_Non-Functional Requirements_",
					"text": "Non-Functional Requirements",
					"tokens": [
						{
							"type": "text",
							"raw": "Non-Functional Requirements",
							"text": "Non-Functional Requirements",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": ": [[#^NFR5|NFR5]]\n",
					"text": ": [[#^NFR5|NFR5]]\n",
					"escaped": false
				},
				{
					"type": "em",
					"raw": "_User Story Link:_",
					"text": "User Story Link:",
					"tokens": [
						{
							"type": "text",
							"raw": "User Story Link:",
							"text": "User Story Link:",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": " ",
					"text": " ",
					"escaped": false
				},
				{
					"type": "link",
					"raw": "[us1.5-implement-cache-for-parsed-files](user-stories/us1.5-implement-cache-for-parsed-files/us1.5-implement-cache-for-parsed-files.md)",
					"href": "user-stories/us1.5-implement-cache-for-parsed-files/us1.5-implement-cache-for-parsed-files.md",
					"title": null,
					"text": "us1.5-implement-cache-for-parsed-files",
					"tokens": [
						{
							"type": "text",
							"raw": "us1.5-implement-cache-for-parsed-files",
							"text": "us1.5-implement-cache-for-parsed-files",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": "\n",
					"text": "\n",
					"escaped": false
				},
				{
					"type": "em",
					"raw": "_Status_",
					"text": "Status",
					"tokens": [
						{
							"type": "text",
							"raw": "Status",
							"text": "Status",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": ": ✅ COMPLETE (2025-10-07)",
					"text": ": ✅ COMPLETE (2025-10-07)",
					"escaped": false
				}
			]
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "blockquote",
			"raw": "> [!success] **Technical Lead Feedback**: Caching Layer for Performance and Modularity ✅ IMPLEMENTED\n> _Resolution_: ParsedFileCache component successfully implemented with Map-based in-memory caching. CitationValidator refactored to use cache via constructor injection. Factory pattern integration complete. All acceptance criteria met with zero regressions.\n> _Resolution Date_: 2025-10-07\n> _Architecture Impact Realized_:\n> - **ParsedFileCache Component**: New caching component sits between CitationValidator and MarkdownParser, managing in-memory lifecycle of MarkdownParser.Output.DataContract objects\n> - **CitationValidator Refactoring**: Refactored to accept ParsedFileCache dependency via constructor, uses cache for all file parsing operations (lines 107, 471)\n> - **CLI Orchestrator Updates**: Handles async validator methods, factory creates and injects cache into validator\n> - **Public Contracts**: ParsedFileCache provides `resolveParsedFile()` async method, CitationValidator constructor signature changed to accept cache dependency\n> _Architecture Principles Applied_:\n> - [Dependency Abstraction](../../../../../design-docs/Architecture%20Principles.md#^dependency-abstraction): CitationValidator depends on ParsedFileCache abstraction, not concrete MarkdownParser ✅\n> - [Single Responsibility](../../../../../design-docs/Architecture%20Principles.md#^single-responsibility): ParsedFileCache has single responsibility for managing parsed file object lifecycle ✅\n> - [One Source of Truth](../../../../../design-docs/Architecture%20Principles.md#^one-source-of-truth): Cache is authoritative source for parsed data during command execution ✅\n",
			"tokens": [
				{
					"type": "paragraph",
					"raw": "[!success] **Technical Lead Feedback**: Caching Layer for Performance and Modularity ✅ IMPLEMENTED\n_Resolution_: ParsedFileCache component successfully implemented with Map-based in-memory caching. CitationValidator refactored to use cache via constructor injection. Factory pattern integration complete. All acceptance criteria met with zero regressions.\n_Resolution Date_: 2025-10-07\n_Architecture Impact Realized_:\n",
					"text": "[!success] **Technical Lead Feedback**: Caching Layer for Performance and Modularity ✅ IMPLEMENTED\n_Resolution_: ParsedFileCache component successfully implemented with Map-based in-memory caching. CitationValidator refactored to use cache via constructor injection. Factory pattern integration complete. All acceptance criteria met with zero regressions.\n_Resolution Date_: 2025-10-07\n_Architecture Impact Realized_:",
					"tokens": [
						{
							"type": "text",
							"raw": "[!success] ",
							"text": "[!success] "
						},
						{
							"type": "strong",
							"raw": "**Technical Lead Feedback**",
							"text": "Technical Lead Feedback",
							"tokens": [
								{
									"type": "text",
									"raw": "Technical Lead Feedback",
									"text": "Technical Lead Feedback",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ": Caching Layer for Performance and Modularity ✅ IMPLEMENTED\n",
							"text": ": Caching Layer for Performance and Modularity ✅ IMPLEMENTED\n",
							"escaped": false
						},
						{
							"type": "em",
							"raw": "_Resolution_",
							"text": "Resolution",
							"tokens": [
								{
									"type": "text",
									"raw": "Resolution",
									"text": "Resolution",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ": ParsedFileCache component successfully implemented with Map-based in-memory caching. CitationValidator refactored to use cache via constructor injection. Factory pattern integration complete. All acceptance criteria met with zero regressions.\n",
							"text": ": ParsedFileCache component successfully implemented with Map-based in-memory caching. CitationValidator refactored to use cache via constructor injection. Factory pattern integration complete. All acceptance criteria met with zero regressions.\n",
							"escaped": false
						},
						{
							"type": "em",
							"raw": "_Resolution Date_",
							"text": "Resolution Date",
							"tokens": [
								{
									"type": "text",
									"raw": "Resolution Date",
									"text": "Resolution Date",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ": 2025-10-07\n",
							"text": ": 2025-10-07\n",
							"escaped": false
						},
						{
							"type": "em",
							"raw": "_Architecture Impact Realized_",
							"text": "Architecture Impact Realized",
							"tokens": [
								{
									"type": "text",
									"raw": "Architecture Impact Realized",
									"text": "Architecture Impact Realized",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ":",
							"text": ":",
							"escaped": false
						}
					]
				},
				{
					"type": "list",
					"raw": "- **ParsedFileCache Component**: New caching component sits between CitationValidator and MarkdownParser, managing in-memory lifecycle of MarkdownParser.Output.DataContract objects\n- **CitationValidator Refactoring**: Refactored to accept ParsedFileCache dependency via constructor, uses cache for all file parsing operations (lines 107, 471)\n- **CLI Orchestrator Updates**: Handles async validator methods, factory creates and injects cache into validator\n- **Public Contracts**: ParsedFileCache provides `resolveParsedFile()` async method, CitationValidator constructor signature changed to accept cache dependency\n_Architecture Principles Applied_:\n- [Dependency Abstraction](../../../../../design-docs/Architecture%20Principles.md#^dependency-abstraction): CitationValidator depends on ParsedFileCache abstraction, not concrete MarkdownParser ✅\n- [Single Responsibility](../../../../../design-docs/Architecture%20Principles.md#^single-responsibility): ParsedFileCache has single responsibility for managing parsed file object lifecycle ✅\n- [One Source of Truth](../../../../../design-docs/Architecture%20Principles.md#^one-source-of-truth): Cache is authoritative source for parsed data during command execution ✅",
					"ordered": false,
					"start": "",
					"loose": false,
					"items": [
						{
							"type": "list_item",
							"raw": "- **ParsedFileCache Component**: New caching component sits between CitationValidator and MarkdownParser, managing in-memory lifecycle of MarkdownParser.Output.DataContract objects\n",
							"task": false,
							"loose": false,
							"text": "**ParsedFileCache Component**: New caching component sits between CitationValidator and MarkdownParser, managing in-memory lifecycle of MarkdownParser.Output.DataContract objects",
							"tokens": [
								{
									"type": "text",
									"raw": "**ParsedFileCache Component**: New caching component sits between CitationValidator and MarkdownParser, managing in-memory lifecycle of MarkdownParser.Output.DataContract objects",
									"text": "**ParsedFileCache Component**: New caching component sits between CitationValidator and MarkdownParser, managing in-memory lifecycle of MarkdownParser.Output.DataContract objects",
									"tokens": [
										{
											"type": "strong",
											"raw": "**ParsedFileCache Component**",
											"text": "ParsedFileCache Component",
											"tokens": [
												{
													"type": "text",
													"raw": "ParsedFileCache Component",
													"text": "ParsedFileCache Component",
													"escaped": false
												}
											]
										},
										{
											"type": "text",
											"raw": ": New caching component sits between CitationValidator and MarkdownParser, managing in-memory lifecycle of MarkdownParser.Output.DataContract objects",
											"text": ": New caching component sits between CitationValidator and MarkdownParser, managing in-memory lifecycle of MarkdownParser.Output.DataContract objects",
											"escaped": false
										}
									]
								}
							]
						},
						{
							"type": "list_item",
							"raw": "- **CitationValidator Refactoring**: Refactored to accept ParsedFileCache dependency via constructor, uses cache for all file parsing operations (lines 107, 471)\n",
							"task": false,
							"loose": false,
							"text": "**CitationValidator Refactoring**: Refactored to accept ParsedFileCache dependency via constructor, uses cache for all file parsing operations (lines 107, 471)",
							"tokens": [
								{
									"type": "text",
									"raw": "**CitationValidator Refactoring**: Refactored to accept ParsedFileCache dependency via constructor, uses cache for all file parsing operations (lines 107, 471)",
									"text": "**CitationValidator Refactoring**: Refactored to accept ParsedFileCache dependency via constructor, uses cache for all file parsing operations (lines 107, 471)",
									"tokens": [
										{
											"type": "strong",
											"raw": "**CitationValidator Refactoring**",
											"text": "CitationValidator Refactoring",
											"tokens": [
												{
													"type": "text",
													"raw": "CitationValidator Refactoring",
													"text": "CitationValidator Refactoring",
													"escaped": false
												}
											]
										},
										{
											"type": "text",
											"raw": ": Refactored to accept ParsedFileCache dependency via constructor, uses cache for all file parsing operations (lines 107, 471)",
											"text": ": Refactored to accept ParsedFileCache dependency via constructor, uses cache for all file parsing operations (lines 107, 471)",
											"escaped": false
										}
									]
								}
							]
						},
						{
							"type": "list_item",
							"raw": "- **CLI Orchestrator Updates**: Handles async validator methods, factory creates and injects cache into validator\n",
							"task": false,
							"loose": false,
							"text": "**CLI Orchestrator Updates**: Handles async validator methods, factory creates and injects cache into validator",
							"tokens": [
								{
									"type": "text",
									"raw": "**CLI Orchestrator Updates**: Handles async validator methods, factory creates and injects cache into validator",
									"text": "**CLI Orchestrator Updates**: Handles async validator methods, factory creates and injects cache into validator",
									"tokens": [
										{
											"type": "strong",
											"raw": "**CLI Orchestrator Updates**",
											"text": "CLI Orchestrator Updates",
											"tokens": [
												{
													"type": "text",
													"raw": "CLI Orchestrator Updates",
													"text": "CLI Orchestrator Updates",
													"escaped": false
												}
											]
										},
										{
											"type": "text",
											"raw": ": Handles async validator methods, factory creates and injects cache into validator",
											"text": ": Handles async validator methods, factory creates and injects cache into validator",
											"escaped": false
										}
									]
								}
							]
						},
						{
							"type": "list_item",
							"raw": "- **Public Contracts**: ParsedFileCache provides `resolveParsedFile()` async method, CitationValidator constructor signature changed to accept cache dependency\n_Architecture Principles Applied_:\n",
							"task": false,
							"loose": false,
							"text": "**Public Contracts**: ParsedFileCache provides `resolveParsedFile()` async method, CitationValidator constructor signature changed to accept cache dependency\n_Architecture Principles Applied_:",
							"tokens": [
								{
									"type": "text",
									"raw": "**Public Contracts**: ParsedFileCache provides `resolveParsedFile()` async method, CitationValidator constructor signature changed to accept cache dependency\n\n_Architecture Principles Applied_:",
									"text": "**Public Contracts**: ParsedFileCache provides `resolveParsedFile()` async method, CitationValidator constructor signature changed to accept cache dependency\n_Architecture Principles Applied_:",
									"tokens": [
										{
											"type": "strong",
											"raw": "**Public Contracts**",
											"text": "Public Contracts",
											"tokens": [
												{
													"type": "text",
													"raw": "Public Contracts",
													"text": "Public Contracts",
													"escaped": false
												}
											]
										},
										{
											"type": "text",
											"raw": ": ParsedFileCache provides ",
											"text": ": ParsedFileCache provides ",
											"escaped": false
										},
										{
											"type": "codespan",
											"raw": "`resolveParsedFile()`",
											"text": "resolveParsedFile()"
										},
										{
											"type": "text",
											"raw": " async method, CitationValidator constructor signature changed to accept cache dependency\n",
											"text": " async method, CitationValidator constructor signature changed to accept cache dependency\n",
											"escaped": false
										},
										{
											"type": "em",
											"raw": "_Architecture Principles Applied_",
											"text": "Architecture Principles Applied",
											"tokens": [
												{
													"type": "text",
													"raw": "Architecture Principles Applied",
													"text": "Architecture Principles Applied",
													"escaped": false
												}
											]
										},
										{
											"type": "text",
											"raw": ":",
											"text": ":",
											"escaped": false
										}
									]
								}
							]
						},
						{
							"type": "list_item",
							"raw": "- [Dependency Abstraction](../../../../../design-docs/Architecture%20Principles.md#^dependency-abstraction): CitationValidator depends on ParsedFileCache abstraction, not concrete MarkdownParser ✅\n",
							"task": false,
							"loose": false,
							"text": "[Dependency Abstraction](../../../../../design-docs/Architecture%20Principles.md#^dependency-abstraction): CitationValidator depends on ParsedFileCache abstraction, not concrete MarkdownParser ✅",
							"tokens": [
								{
									"type": "text",
									"raw": "[Dependency Abstraction](../../../../../design-docs/Architecture%20Principles.md#^dependency-abstraction): CitationValidator depends on ParsedFileCache abstraction, not concrete MarkdownParser ✅",
									"text": "[Dependency Abstraction](../../../../../design-docs/Architecture%20Principles.md#^dependency-abstraction): CitationValidator depends on ParsedFileCache abstraction, not concrete MarkdownParser ✅",
									"tokens": [
										{
											"type": "link",
											"raw": "[Dependency Abstraction](../../../../../design-docs/Architecture%20Principles.md#^dependency-abstraction)",
											"href": "../../../../../design-docs/Architecture%20Principles.md#^dependency-abstraction",
											"title": null,
											"text": "Dependency Abstraction",
											"tokens": [
												{
													"type": "text",
													"raw": "Dependency Abstraction",
													"text": "Dependency Abstraction",
													"escaped": false
												}
											]
										},
										{
											"type": "text",
											"raw": ": CitationValidator depends on ParsedFileCache abstraction, not concrete MarkdownParser ✅",
											"text": ": CitationValidator depends on ParsedFileCache abstraction, not concrete MarkdownParser ✅",
											"escaped": false
										}
									]
								}
							]
						},
						{
							"type": "list_item",
							"raw": "- [Single Responsibility](../../../../../design-docs/Architecture%20Principles.md#^single-responsibility): ParsedFileCache has single responsibility for managing parsed file object lifecycle ✅\n",
							"task": false,
							"loose": false,
							"text": "[Single Responsibility](../../../../../design-docs/Architecture%20Principles.md#^single-responsibility): ParsedFileCache has single responsibility for managing parsed file object lifecycle ✅",
							"tokens": [
								{
									"type": "text",
									"raw": "[Single Responsibility](../../../../../design-docs/Architecture%20Principles.md#^single-responsibility): ParsedFileCache has single responsibility for managing parsed file object lifecycle ✅",
									"text": "[Single Responsibility](../../../../../design-docs/Architecture%20Principles.md#^single-responsibility): ParsedFileCache has single responsibility for managing parsed file object lifecycle ✅",
									"tokens": [
										{
											"type": "link",
											"raw": "[Single Responsibility](../../../../../design-docs/Architecture%20Principles.md#^single-responsibility)",
											"href": "../../../../../design-docs/Architecture%20Principles.md#^single-responsibility",
											"title": null,
											"text": "Single Responsibility",
											"tokens": [
												{
													"type": "text",
													"raw": "Single Responsibility",
													"text": "Single Responsibility",
													"escaped": false
												}
											]
										},
										{
											"type": "text",
											"raw": ": ParsedFileCache has single responsibility for managing parsed file object lifecycle ✅",
											"text": ": ParsedFileCache has single responsibility for managing parsed file object lifecycle ✅",
											"escaped": false
										}
									]
								}
							]
						},
						{
							"type": "list_item",
							"raw": "- [One Source of Truth](../../../../../design-docs/Architecture%20Principles.md#^one-source-of-truth): Cache is authoritative source for parsed data during command execution ✅",
							"task": false,
							"loose": false,
							"text": "[One Source of Truth](../../../../../design-docs/Architecture%20Principles.md#^one-source-of-truth): Cache is authoritative source for parsed data during command execution ✅",
							"tokens": [
								{
									"type": "text",
									"raw": "[One Source of Truth](../../../../../design-docs/Architecture%20Principles.md#^one-source-of-truth): Cache is authoritative source for parsed data during command execution ✅",
									"text": "[One Source of Truth](../../../../../design-docs/Architecture%20Principles.md#^one-source-of-truth): Cache is authoritative source for parsed data during command execution ✅",
									"tokens": [
										{
											"type": "link",
											"raw": "[One Source of Truth](../../../../../design-docs/Architecture%20Principles.md#^one-source-of-truth)",
											"href": "../../../../../design-docs/Architecture%20Principles.md#^one-source-of-truth",
											"title": null,
											"text": "One Source of Truth",
											"tokens": [
												{
													"type": "text",
													"raw": "One Source of Truth",
													"text": "One Source of Truth",
													"escaped": false
												}
											]
										},
										{
											"type": "text",
											"raw": ": Cache is authoritative source for parsed data during command execution ✅",
											"text": ": Cache is authoritative source for parsed data during command execution ✅",
											"escaped": false
										}
									]
								}
							]
						}
					]
				}
			],
			"text": "[!success] **Technical Lead Feedback**: Caching Layer for Performance and Modularity ✅ IMPLEMENTED\n_Resolution_: ParsedFileCache component successfully implemented with Map-based in-memory caching. CitationValidator refactored to use cache via constructor injection. Factory pattern integration complete. All acceptance criteria met with zero regressions.\n_Resolution Date_: 2025-10-07\n_Architecture Impact Realized_:\n- **ParsedFileCache Component**: New caching component sits between CitationValidator and MarkdownParser, managing in-memory lifecycle of MarkdownParser.Output.DataContract objects\n- **CitationValidator Refactoring**: Refactored to accept ParsedFileCache dependency via constructor, uses cache for all file parsing operations (lines 107, 471)\n- **CLI Orchestrator Updates**: Handles async validator methods, factory creates and injects cache into validator\n- **Public Contracts**: ParsedFileCache provides `resolveParsedFile()` async method, CitationValidator constructor signature changed to accept cache dependency\n_Architecture Principles Applied_:\n- [Dependency Abstraction](../../../../../design-docs/Architecture%20Principles.md#^dependency-abstraction): CitationValidator depends on ParsedFileCache abstraction, not concrete MarkdownParser ✅\n- [Single Responsibility](../../../../../design-docs/Architecture%20Principles.md#^single-responsibility): ParsedFileCache has single responsibility for managing parsed file object lifecycle ✅\n- [One Source of Truth](../../../../../design-docs/Architecture%20Principles.md#^one-source-of-truth): Cache is authoritative source for parsed data during command execution ✅"
		},
		{
			"type": "hr",
			"raw": "---"
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "heading",
			"raw": "### Story 2.1: Enhance Parser to Handle Full-File and Section Links\n\n",
			"depth": 3,
			"text": "Story 2.1: Enhance Parser to Handle Full-File and Section Links",
			"tokens": [
				{
					"type": "text",
					"raw": "Story 2.1: Enhance Parser to Handle Full-File and Section Links",
					"text": "Story 2.1: Enhance Parser to Handle Full-File and Section Links",
					"escaped": false
				}
			]
		},
		{
			"type": "paragraph",
			"raw": "**As a** developer,\n**I want** the parser to identify links to both entire markdown files and specific sections within them,\n**so that** I can handle both types of content extraction in a unified way.",
			"text": "**As a** developer,\n**I want** the parser to identify links to both entire markdown files and specific sections within them,\n**so that** I can handle both types of content extraction in a unified way.",
			"tokens": [
				{
					"type": "strong",
					"raw": "**As a**",
					"text": "As a",
					"tokens": [
						{
							"type": "text",
							"raw": "As a",
							"text": "As a",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": " developer,\n",
					"text": " developer,\n",
					"escaped": false
				},
				{
					"type": "strong",
					"raw": "**I want**",
					"text": "I want",
					"tokens": [
						{
							"type": "text",
							"raw": "I want",
							"text": "I want",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": " the parser to identify links to both entire markdown files and specific sections within them,\n",
					"text": " the parser to identify links to both entire markdown files and specific sections within them,\n",
					"escaped": false
				},
				{
					"type": "strong",
					"raw": "**so that**",
					"text": "so that",
					"tokens": [
						{
							"type": "text",
							"raw": "so that",
							"text": "so that",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": " I can handle both types of content extraction in a unified way.",
					"text": " I can handle both types of content extraction in a unified way.",
					"escaped": false
				}
			]
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "heading",
			"raw": "#### Story 2.1 Acceptance Criteria\n",
			"depth": 4,
			"text": "Story 2.1 Acceptance Criteria",
			"tokens": [
				{
					"type": "text",
					"raw": "Story 2.1 Acceptance Criteria",
					"text": "Story 2.1 Acceptance Criteria",
					"escaped": false
				}
			]
		},
		{
			"type": "list",
			"raw": "1. GIVEN a markdown file, WHEN the parser runs, THEN it SHALL extract an array of all links pointing to local markdown files, distinguishing between links with section anchors and those without. ^US2-1AC1\n2. GIVEN the parser identifies multiple links to the same file, but at least one link includes a section anchor, THEN the system SHALL prioritize the section link(s) for extraction and issue a warning that the full file content will be ignored in favor of the more specific section(s). ^US2-1AC2\n3. GIVEN the parser identifies only links without section anchors to a specific file, THEN it SHALL designate the entire file for content extraction. ^US2-1AC3",
			"ordered": true,
			"start": 1,
			"loose": false,
			"items": [
				{
					"type": "list_item",
					"raw": "1. GIVEN a markdown file, WHEN the parser runs, THEN it SHALL extract an array of all links pointing to local markdown files, distinguishing between links with section anchors and those without. ^US2-1AC1\n",
					"task": false,
					"loose": false,
					"text": "GIVEN a markdown file, WHEN the parser runs, THEN it SHALL extract an array of all links pointing to local markdown files, distinguishing between links with section anchors and those without. ^US2-1AC1",
					"tokens": [
						{
							"type": "text",
							"raw": "GIVEN a markdown file, WHEN the parser runs, THEN it SHALL extract an array of all links pointing to local markdown files, distinguishing between links with section anchors and those without. ^US2-1AC1",
							"text": "GIVEN a markdown file, WHEN the parser runs, THEN it SHALL extract an array of all links pointing to local markdown files, distinguishing between links with section anchors and those without. ^US2-1AC1",
							"tokens": [
								{
									"type": "text",
									"raw": "GIVEN a markdown file, WHEN the parser runs, THEN it SHALL extract an array of all links pointing to local markdown files, distinguishing between links with section anchors and those without. ^US2-1AC1",
									"text": "GIVEN a markdown file, WHEN the parser runs, THEN it SHALL extract an array of all links pointing to local markdown files, distinguishing between links with section anchors and those without. ^US2-1AC1",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "2. GIVEN the parser identifies multiple links to the same file, but at least one link includes a section anchor, THEN the system SHALL prioritize the section link(s) for extraction and issue a warning that the full file content will be ignored in favor of the more specific section(s). ^US2-1AC2\n",
					"task": false,
					"loose": false,
					"text": "GIVEN the parser identifies multiple links to the same file, but at least one link includes a section anchor, THEN the system SHALL prioritize the section link(s) for extraction and issue a warning that the full file content will be ignored in favor of the more specific section(s). ^US2-1AC2",
					"tokens": [
						{
							"type": "text",
							"raw": "GIVEN the parser identifies multiple links to the same file, but at least one link includes a section anchor, THEN the system SHALL prioritize the section link(s) for extraction and issue a warning that the full file content will be ignored in favor of the more specific section(s). ^US2-1AC2",
							"text": "GIVEN the parser identifies multiple links to the same file, but at least one link includes a section anchor, THEN the system SHALL prioritize the section link(s) for extraction and issue a warning that the full file content will be ignored in favor of the more specific section(s). ^US2-1AC2",
							"tokens": [
								{
									"type": "text",
									"raw": "GIVEN the parser identifies multiple links to the same file, but at least one link includes a section anchor, THEN the system SHALL prioritize the section link(s) for extraction and issue a warning that the full file content will be ignored in favor of the more specific section(s). ^US2-1AC2",
									"text": "GIVEN the parser identifies multiple links to the same file, but at least one link includes a section anchor, THEN the system SHALL prioritize the section link(s) for extraction and issue a warning that the full file content will be ignored in favor of the more specific section(s). ^US2-1AC2",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "3. GIVEN the parser identifies only links without section anchors to a specific file, THEN it SHALL designate the entire file for content extraction. ^US2-1AC3",
					"task": false,
					"loose": false,
					"text": "GIVEN the parser identifies only links without section anchors to a specific file, THEN it SHALL designate the entire file for content extraction. ^US2-1AC3",
					"tokens": [
						{
							"type": "text",
							"raw": "GIVEN the parser identifies only links without section anchors to a specific file, THEN it SHALL designate the entire file for content extraction. ^US2-1AC3",
							"text": "GIVEN the parser identifies only links without section anchors to a specific file, THEN it SHALL designate the entire file for content extraction. ^US2-1AC3",
							"tokens": [
								{
									"type": "text",
									"raw": "GIVEN the parser identifies only links without section anchors to a specific file, THEN it SHALL designate the entire file for content extraction. ^US2-1AC3",
									"text": "GIVEN the parser identifies only links without section anchors to a specific file, THEN it SHALL designate the entire file for content extraction. ^US2-1AC3",
									"escaped": false
								}
							]
						}
					]
				}
			]
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "blockquote",
			"raw": "> [!note] **Technical Lead Feedback**: Parser output data contract - Base schema validated ✅\n> _Base Schema Status_: MarkdownParser.Output.DataContract validated in [US1.5 Phase 1](user-stories/us1.5-implement-cache-for-parsed-files/us1.5-implement-cache-for-parsed-files.md#Phase%201%20Parser%20Output%20Contract%20Validation%20&%20Documentation). Current schema: `{ filePath, content, tokens, links, headings, anchors }` with LinkObject (`linkType`, `scope`, `anchorType`, `source`, `target`) and AnchorObject (`anchorType`, `id`, `rawText`) structures.\n> _Epic 2 Analysis Required_: Story 2.1 implementation should review existing LinkObject schema to determine if current `linkType`/`scope`/`anchorType` fields sufficiently distinguish full-file vs. section links, or if minor schema extensions are needed for content extraction metadata.\n> _Relevant Architecture Principles_: [data-model-first](../../../../../design-docs/Architecture%20Principles.md#^data-model-first), [primitive-first-design](../../../../../design-docs/Architecture%20Principles.md#^primitive-first-design), [illegal-states-unrepresentable](../../../../../design-docs/Architecture%20Principles.md#^illegal-states-unrepresentable), [explicit-relationships](../../../../../design-docs/Architecture%20Principles.md#^explicit-relationships)\n",
			"tokens": [
				{
					"type": "paragraph",
					"raw": "[!note] **Technical Lead Feedback**: Parser output data contract - Base schema validated ✅\n_Base Schema Status_: MarkdownParser.Output.DataContract validated in [US1.5 Phase 1](user-stories/us1.5-implement-cache-for-parsed-files/us1.5-implement-cache-for-parsed-files.md#Phase%201%20Parser%20Output%20Contract%20Validation%20&%20Documentation). Current schema: `{ filePath, content, tokens, links, headings, anchors }` with LinkObject (`linkType`, `scope`, `anchorType`, `source`, `target`) and AnchorObject (`anchorType`, `id`, `rawText`) structures.\n_Epic 2 Analysis Required_: Story 2.1 implementation should review existing LinkObject schema to determine if current `linkType`/`scope`/`anchorType` fields sufficiently distinguish full-file vs. section links, or if minor schema extensions are needed for content extraction metadata.\n_Relevant Architecture Principles_: [data-model-first](../../../../../design-docs/Architecture%20Principles.md#^data-model-first), [primitive-first-design](../../../../../design-docs/Architecture%20Principles.md#^primitive-first-design), [illegal-states-unrepresentable](../../../../../design-docs/Architecture%20Principles.md#^illegal-states-unrepresentable), [explicit-relationships](../../../../../design-docs/Architecture%20Principles.md#^explicit-relationships)",
					"text": "[!note] **Technical Lead Feedback**: Parser output data contract - Base schema validated ✅\n_Base Schema Status_: MarkdownParser.Output.DataContract validated in [US1.5 Phase 1](user-stories/us1.5-implement-cache-for-parsed-files/us1.5-implement-cache-for-parsed-files.md#Phase%201%20Parser%20Output%20Contract%20Validation%20&%20Documentation). Current schema: `{ filePath, content, tokens, links, headings, anchors }` with LinkObject (`linkType`, `scope`, `anchorType`, `source`, `target`) and AnchorObject (`anchorType`, `id`, `rawText`) structures.\n_Epic 2 Analysis Required_: Story 2.1 implementation should review existing LinkObject schema to determine if current `linkType`/`scope`/`anchorType` fields sufficiently distinguish full-file vs. section links, or if minor schema extensions are needed for content extraction metadata.\n_Relevant Architecture Principles_: [data-model-first](../../../../../design-docs/Architecture%20Principles.md#^data-model-first), [primitive-first-design](../../../../../design-docs/Architecture%20Principles.md#^primitive-first-design), [illegal-states-unrepresentable](../../../../../design-docs/Architecture%20Principles.md#^illegal-states-unrepresentable), [explicit-relationships](../../../../../design-docs/Architecture%20Principles.md#^explicit-relationships)",
					"tokens": [
						{
							"type": "text",
							"raw": "[!note] ",
							"text": "[!note] "
						},
						{
							"type": "strong",
							"raw": "**Technical Lead Feedback**",
							"text": "Technical Lead Feedback",
							"tokens": [
								{
									"type": "text",
									"raw": "Technical Lead Feedback",
									"text": "Technical Lead Feedback",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ": Parser output data contract - Base schema validated ✅\n",
							"text": ": Parser output data contract - Base schema validated ✅\n",
							"escaped": false
						},
						{
							"type": "em",
							"raw": "_Base Schema Status_",
							"text": "Base Schema Status",
							"tokens": [
								{
									"type": "text",
									"raw": "Base Schema Status",
									"text": "Base Schema Status",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ": MarkdownParser.Output.DataContract validated in ",
							"text": ": MarkdownParser.Output.DataContract validated in ",
							"escaped": false
						},
						{
							"type": "link",
							"raw": "[US1.5 Phase 1](user-stories/us1.5-implement-cache-for-parsed-files/us1.5-implement-cache-for-parsed-files.md#Phase%201%20Parser%20Output%20Contract%20Validation%20&%20Documentation)",
							"href": "user-stories/us1.5-implement-cache-for-parsed-files/us1.5-implement-cache-for-parsed-files.md#Phase%201%20Parser%20Output%20Contract%20Validation%20&%20Documentation",
							"title": null,
							"text": "US1.5 Phase 1",
							"tokens": [
								{
									"type": "text",
									"raw": "US1.5 Phase 1",
									"text": "US1.5 Phase 1",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ". Current schema: ",
							"text": ". Current schema: ",
							"escaped": false
						},
						{
							"type": "codespan",
							"raw": "`{ filePath, content, tokens, links, headings, anchors }`",
							"text": "{ filePath, content, tokens, links, headings, anchors }"
						},
						{
							"type": "text",
							"raw": " with LinkObject (",
							"text": " with LinkObject (",
							"escaped": false
						},
						{
							"type": "codespan",
							"raw": "`linkType`",
							"text": "linkType"
						},
						{
							"type": "text",
							"raw": ", ",
							"text": ", ",
							"escaped": false
						},
						{
							"type": "codespan",
							"raw": "`scope`",
							"text": "scope"
						},
						{
							"type": "text",
							"raw": ", ",
							"text": ", ",
							"escaped": false
						},
						{
							"type": "codespan",
							"raw": "`anchorType`",
							"text": "anchorType"
						},
						{
							"type": "text",
							"raw": ", ",
							"text": ", ",
							"escaped": false
						},
						{
							"type": "codespan",
							"raw": "`source`",
							"text": "source"
						},
						{
							"type": "text",
							"raw": ", ",
							"text": ", ",
							"escaped": false
						},
						{
							"type": "codespan",
							"raw": "`target`",
							"text": "target"
						},
						{
							"type": "text",
							"raw": ") and AnchorObject (",
							"text": ") and AnchorObject (",
							"escaped": false
						},
						{
							"type": "codespan",
							"raw": "`anchorType`",
							"text": "anchorType"
						},
						{
							"type": "text",
							"raw": ", ",
							"text": ", ",
							"escaped": false
						},
						{
							"type": "codespan",
							"raw": "`id`",
							"text": "id"
						},
						{
							"type": "text",
							"raw": ", ",
							"text": ", ",
							"escaped": false
						},
						{
							"type": "codespan",
							"raw": "`rawText`",
							"text": "rawText"
						},
						{
							"type": "text",
							"raw": ") structures.\n",
							"text": ") structures.\n",
							"escaped": false
						},
						{
							"type": "em",
							"raw": "_Epic 2 Analysis Required_",
							"text": "Epic 2 Analysis Required",
							"tokens": [
								{
									"type": "text",
									"raw": "Epic 2 Analysis Required",
									"text": "Epic 2 Analysis Required",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ": Story 2.1 implementation should review existing LinkObject schema to determine if current ",
							"text": ": Story 2.1 implementation should review existing LinkObject schema to determine if current ",
							"escaped": false
						},
						{
							"type": "codespan",
							"raw": "`linkType`",
							"text": "linkType"
						},
						{
							"type": "text",
							"raw": "/",
							"text": "/",
							"escaped": false
						},
						{
							"type": "codespan",
							"raw": "`scope`",
							"text": "scope"
						},
						{
							"type": "text",
							"raw": "/",
							"text": "/",
							"escaped": false
						},
						{
							"type": "codespan",
							"raw": "`anchorType`",
							"text": "anchorType"
						},
						{
							"type": "text",
							"raw": " fields sufficiently distinguish full-file vs. section links, or if minor schema extensions are needed for content extraction metadata.\n",
							"text": " fields sufficiently distinguish full-file vs. section links, or if minor schema extensions are needed for content extraction metadata.\n",
							"escaped": false
						},
						{
							"type": "em",
							"raw": "_Relevant Architecture Principles_",
							"text": "Relevant Architecture Principles",
							"tokens": [
								{
									"type": "text",
									"raw": "Relevant Architecture Principles",
									"text": "Relevant Architecture Principles",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ": ",
							"text": ": ",
							"escaped": false
						},
						{
							"type": "link",
							"raw": "[data-model-first](../../../../../design-docs/Architecture%20Principles.md#^data-model-first)",
							"href": "../../../../../design-docs/Architecture%20Principles.md#^data-model-first",
							"title": null,
							"text": "data-model-first",
							"tokens": [
								{
									"type": "text",
									"raw": "data-model-first",
									"text": "data-model-first",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ", ",
							"text": ", ",
							"escaped": false
						},
						{
							"type": "link",
							"raw": "[primitive-first-design](../../../../../design-docs/Architecture%20Principles.md#^primitive-first-design)",
							"href": "../../../../../design-docs/Architecture%20Principles.md#^primitive-first-design",
							"title": null,
							"text": "primitive-first-design",
							"tokens": [
								{
									"type": "text",
									"raw": "primitive-first-design",
									"text": "primitive-first-design",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ", ",
							"text": ", ",
							"escaped": false
						},
						{
							"type": "link",
							"raw": "[illegal-states-unrepresentable](../../../../../design-docs/Architecture%20Principles.md#^illegal-states-unrepresentable)",
							"href": "../../../../../design-docs/Architecture%20Principles.md#^illegal-states-unrepresentable",
							"title": null,
							"text": "illegal-states-unrepresentable",
							"tokens": [
								{
									"type": "text",
									"raw": "illegal-states-unrepresentable",
									"text": "illegal-states-unrepresentable",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ", ",
							"text": ", ",
							"escaped": false
						},
						{
							"type": "link",
							"raw": "[explicit-relationships](../../../../../design-docs/Architecture%20Principles.md#^explicit-relationships)",
							"href": "../../../../../design-docs/Architecture%20Principles.md#^explicit-relationships",
							"title": null,
							"text": "explicit-relationships",
							"tokens": [
								{
									"type": "text",
									"raw": "explicit-relationships",
									"text": "explicit-relationships",
									"escaped": false
								}
							]
						}
					]
				}
			],
			"text": "[!note] **Technical Lead Feedback**: Parser output data contract - Base schema validated ✅\n_Base Schema Status_: MarkdownParser.Output.DataContract validated in [US1.5 Phase 1](user-stories/us1.5-implement-cache-for-parsed-files/us1.5-implement-cache-for-parsed-files.md#Phase%201%20Parser%20Output%20Contract%20Validation%20&%20Documentation). Current schema: `{ filePath, content, tokens, links, headings, anchors }` with LinkObject (`linkType`, `scope`, `anchorType`, `source`, `target`) and AnchorObject (`anchorType`, `id`, `rawText`) structures.\n_Epic 2 Analysis Required_: Story 2.1 implementation should review existing LinkObject schema to determine if current `linkType`/`scope`/`anchorType` fields sufficiently distinguish full-file vs. section links, or if minor schema extensions are needed for content extraction metadata.\n_Relevant Architecture Principles_: [data-model-first](../../../../../design-docs/Architecture%20Principles.md#^data-model-first), [primitive-first-design](../../../../../design-docs/Architecture%20Principles.md#^primitive-first-design), [illegal-states-unrepresentable](../../../../../design-docs/Architecture%20Principles.md#^illegal-states-unrepresentable), [explicit-relationships](../../../../../design-docs/Architecture%20Principles.md#^explicit-relationships)"
		},
		{
			"type": "html",
			"block": true,
			"raw": "<!-- -->\n",
			"pre": false,
			"text": "<!-- -->\n"
		},
		{
			"type": "blockquote",
			"raw": "> [!success] **Technical Lead Research**: Section extraction POC validated ✅ (2025-10-07)\n> _Research Objective_: Prove we can walk marked.js tokens to extract section content by heading level\n> _POC Location_: `tools/citation-manager/test/poc-section-extraction.test.js`\n> _Key Findings_:\n> - ✅ **Token walking works**: marked.js tokens provide complete AST for section boundary detection\n> - ✅ **Boundary detection validated**: Algorithm correctly stops at next same-or-higher level heading\n> - ✅ **Content reconstruction proven**: Concatenating `token.raw` properties rebuilds original markdown\n> - ✅ **Nested sections handled**: H3/H4 subsections correctly included under parent H2\n> _Implementation Pattern_: Use `walkTokens`-like traversal (mirrors `MarkdownParser.extractHeadings()` pattern at lines 321-343)\n> _API Validated_: `extractSection(tokens, headingText, headingLevel)` → `{ heading: { level, text, raw }, tokens: [...], content: string }`\n> _Context7 Research_: marked.js `walkTokens` API provides idiomatic pattern for token traversal (child tokens processed before siblings)\n> _Production Integration Path_: Create `ContentExtractor` component accepting `ParsedFileCache` dependency, leverage existing token structure from MarkdownParser.Output.DataContract\n> _Test Coverage_: 7/7 POC tests passing (100% success rate)\n> _Next Step_: Story 2.2 ContentExtractor implementation can use validated algorithm and API contract",
			"tokens": [
				{
					"type": "paragraph",
					"raw": "[!success] **Technical Lead Research**: Section extraction POC validated ✅ (2025-10-07)\n_Research Objective_: Prove we can walk marked.js tokens to extract section content by heading level\n_POC Location_: `tools/citation-manager/test/poc-section-extraction.test.js`\n_Key Findings_:\n",
					"text": "[!success] **Technical Lead Research**: Section extraction POC validated ✅ (2025-10-07)\n_Research Objective_: Prove we can walk marked.js tokens to extract section content by heading level\n_POC Location_: `tools/citation-manager/test/poc-section-extraction.test.js`\n_Key Findings_:",
					"tokens": [
						{
							"type": "text",
							"raw": "[!success] ",
							"text": "[!success] "
						},
						{
							"type": "strong",
							"raw": "**Technical Lead Research**",
							"text": "Technical Lead Research",
							"tokens": [
								{
									"type": "text",
									"raw": "Technical Lead Research",
									"text": "Technical Lead Research",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ": Section extraction POC validated ✅ (2025-10-07)\n",
							"text": ": Section extraction POC validated ✅ (2025-10-07)\n",
							"escaped": false
						},
						{
							"type": "em",
							"raw": "_Research Objective_",
							"text": "Research Objective",
							"tokens": [
								{
									"type": "text",
									"raw": "Research Objective",
									"text": "Research Objective",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ": Prove we can walk marked.js tokens to extract section content by heading level\n",
							"text": ": Prove we can walk marked.js tokens to extract section content by heading level\n",
							"escaped": false
						},
						{
							"type": "em",
							"raw": "_POC Location_",
							"text": "POC Location",
							"tokens": [
								{
									"type": "text",
									"raw": "POC Location",
									"text": "POC Location",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ": ",
							"text": ": ",
							"escaped": false
						},
						{
							"type": "codespan",
							"raw": "`tools/citation-manager/test/poc-section-extraction.test.js`",
							"text": "tools/citation-manager/test/poc-section-extraction.test.js"
						},
						{
							"type": "text",
							"raw": "\n",
							"text": "\n",
							"escaped": false
						},
						{
							"type": "em",
							"raw": "_Key Findings_",
							"text": "Key Findings",
							"tokens": [
								{
									"type": "text",
									"raw": "Key Findings",
									"text": "Key Findings",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ":",
							"text": ":",
							"escaped": false
						}
					]
				},
				{
					"type": "list",
					"raw": "- ✅ **Token walking works**: marked.js tokens provide complete AST for section boundary detection\n- ✅ **Boundary detection validated**: Algorithm correctly stops at next same-or-higher level heading\n- ✅ **Content reconstruction proven**: Concatenating `token.raw` properties rebuilds original markdown\n- ✅ **Nested sections handled**: H3/H4 subsections correctly included under parent H2\n_Implementation Pattern_: Use `walkTokens`-like traversal (mirrors `MarkdownParser.extractHeadings()` pattern at lines 321-343)\n_API Validated_: `extractSection(tokens, headingText, headingLevel)` → `{ heading: { level, text, raw }, tokens: [...], content: string }`\n_Context7 Research_: marked.js `walkTokens` API provides idiomatic pattern for token traversal (child tokens processed before siblings)\n_Production Integration Path_: Create `ContentExtractor` component accepting `ParsedFileCache` dependency, leverage existing token structure from MarkdownParser.Output.DataContract\n_Test Coverage_: 7/7 POC tests passing (100% success rate)\n_Next Step_: Story 2.2 ContentExtractor implementation can use validated algorithm and API contract",
					"ordered": false,
					"start": "",
					"loose": false,
					"items": [
						{
							"type": "list_item",
							"raw": "- ✅ **Token walking works**: marked.js tokens provide complete AST for section boundary detection\n",
							"task": false,
							"loose": false,
							"text": "✅ **Token walking works**: marked.js tokens provide complete AST for section boundary detection",
							"tokens": [
								{
									"type": "text",
									"raw": "✅ **Token walking works**: marked.js tokens provide complete AST for section boundary detection",
									"text": "✅ **Token walking works**: marked.js tokens provide complete AST for section boundary detection",
									"tokens": [
										{
											"type": "text",
											"raw": "✅ ",
											"text": "✅ ",
											"escaped": false
										},
										{
											"type": "strong",
											"raw": "**Token walking works**",
											"text": "Token walking works",
											"tokens": [
												{
													"type": "text",
													"raw": "Token walking works",
													"text": "Token walking works",
													"escaped": false
												}
											]
										},
										{
											"type": "text",
											"raw": ": marked.js tokens provide complete AST for section boundary detection",
											"text": ": marked.js tokens provide complete AST for section boundary detection",
											"escaped": false
										}
									]
								}
							]
						},
						{
							"type": "list_item",
							"raw": "- ✅ **Boundary detection validated**: Algorithm correctly stops at next same-or-higher level heading\n",
							"task": false,
							"loose": false,
							"text": "✅ **Boundary detection validated**: Algorithm correctly stops at next same-or-higher level heading",
							"tokens": [
								{
									"type": "text",
									"raw": "✅ **Boundary detection validated**: Algorithm correctly stops at next same-or-higher level heading",
									"text": "✅ **Boundary detection validated**: Algorithm correctly stops at next same-or-higher level heading",
									"tokens": [
										{
											"type": "text",
											"raw": "✅ ",
											"text": "✅ ",
											"escaped": false
										},
										{
											"type": "strong",
											"raw": "**Boundary detection validated**",
											"text": "Boundary detection validated",
											"tokens": [
												{
													"type": "text",
													"raw": "Boundary detection validated",
													"text": "Boundary detection validated",
													"escaped": false
												}
											]
										},
										{
											"type": "text",
											"raw": ": Algorithm correctly stops at next same-or-higher level heading",
											"text": ": Algorithm correctly stops at next same-or-higher level heading",
											"escaped": false
										}
									]
								}
							]
						},
						{
							"type": "list_item",
							"raw": "- ✅ **Content reconstruction proven**: Concatenating `token.raw` properties rebuilds original markdown\n",
							"task": false,
							"loose": false,
							"text": "✅ **Content reconstruction proven**: Concatenating `token.raw` properties rebuilds original markdown",
							"tokens": [
								{
									"type": "text",
									"raw": "✅ **Content reconstruction proven**: Concatenating `token.raw` properties rebuilds original markdown",
									"text": "✅ **Content reconstruction proven**: Concatenating `token.raw` properties rebuilds original markdown",
									"tokens": [
										{
											"type": "text",
											"raw": "✅ ",
											"text": "✅ ",
											"escaped": false
										},
										{
											"type": "strong",
											"raw": "**Content reconstruction proven**",
											"text": "Content reconstruction proven",
											"tokens": [
												{
													"type": "text",
													"raw": "Content reconstruction proven",
													"text": "Content reconstruction proven",
													"escaped": false
												}
											]
										},
										{
											"type": "text",
											"raw": ": Concatenating ",
											"text": ": Concatenating ",
											"escaped": false
										},
										{
											"type": "codespan",
											"raw": "`token.raw`",
											"text": "token.raw"
										},
										{
											"type": "text",
											"raw": " properties rebuilds original markdown",
											"text": " properties rebuilds original markdown",
											"escaped": false
										}
									]
								}
							]
						},
						{
							"type": "list_item",
							"raw": "- ✅ **Nested sections handled**: H3/H4 subsections correctly included under parent H2\n_Implementation Pattern_: Use `walkTokens`-like traversal (mirrors `MarkdownParser.extractHeadings()` pattern at lines 321-343)\n_API Validated_: `extractSection(tokens, headingText, headingLevel)` → `{ heading: { level, text, raw }, tokens: [...], content: string }`\n_Context7 Research_: marked.js `walkTokens` API provides idiomatic pattern for token traversal (child tokens processed before siblings)\n_Production Integration Path_: Create `ContentExtractor` component accepting `ParsedFileCache` dependency, leverage existing token structure from MarkdownParser.Output.DataContract\n_Test Coverage_: 7/7 POC tests passing (100% success rate)\n_Next Step_: Story 2.2 ContentExtractor implementation can use validated algorithm and API contract",
							"task": false,
							"loose": false,
							"text": "✅ **Nested sections handled**: H3/H4 subsections correctly included under parent H2\n_Implementation Pattern_: Use `walkTokens`-like traversal (mirrors `MarkdownParser.extractHeadings()` pattern at lines 321-343)\n_API Validated_: `extractSection(tokens, headingText, headingLevel)` → `{ heading: { level, text, raw }, tokens: [...], content: string }`\n_Context7 Research_: marked.js `walkTokens` API provides idiomatic pattern for token traversal (child tokens processed before siblings)\n_Production Integration Path_: Create `ContentExtractor` component accepting `ParsedFileCache` dependency, leverage existing token structure from MarkdownParser.Output.DataContract\n_Test Coverage_: 7/7 POC tests passing (100% success rate)\n_Next Step_: Story 2.2 ContentExtractor implementation can use validated algorithm and API contract",
							"tokens": [
								{
									"type": "text",
									"raw": "✅ **Nested sections handled**: H3/H4 subsections correctly included under parent H2\n\n_Implementation Pattern_: Use `walkTokens`-like traversal (mirrors `MarkdownParser.extractHeadings()` pattern at lines 321-343)\n\n_API Validated_: `extractSection(tokens, headingText, headingLevel)` → `{ heading: { level, text, raw }, tokens: [...], content: string }`\n\n_Context7 Research_: marked.js `walkTokens` API provides idiomatic pattern for token traversal (child tokens processed before siblings)\n\n_Production Integration Path_: Create `ContentExtractor` component accepting `ParsedFileCache` dependency, leverage existing token structure from MarkdownParser.Output.DataContract\n\n_Test Coverage_: 7/7 POC tests passing (100% success rate)\n\n_Next Step_: Story 2.2 ContentExtractor implementation can use validated algorithm and API contract",
									"text": "✅ **Nested sections handled**: H3/H4 subsections correctly included under parent H2\n_Implementation Pattern_: Use `walkTokens`-like traversal (mirrors `MarkdownParser.extractHeadings()` pattern at lines 321-343)\n_API Validated_: `extractSection(tokens, headingText, headingLevel)` → `{ heading: { level, text, raw }, tokens: [...], content: string }`\n_Context7 Research_: marked.js `walkTokens` API provides idiomatic pattern for token traversal (child tokens processed before siblings)\n_Production Integration Path_: Create `ContentExtractor` component accepting `ParsedFileCache` dependency, leverage existing token structure from MarkdownParser.Output.DataContract\n_Test Coverage_: 7/7 POC tests passing (100% success rate)\n_Next Step_: Story 2.2 ContentExtractor implementation can use validated algorithm and API contract",
									"tokens": [
										{
											"type": "text",
											"raw": "✅ ",
											"text": "✅ ",
											"escaped": false
										},
										{
											"type": "strong",
											"raw": "**Nested sections handled**",
											"text": "Nested sections handled",
											"tokens": [
												{
													"type": "text",
													"raw": "Nested sections handled",
													"text": "Nested sections handled",
													"escaped": false
												}
											]
										},
										{
											"type": "text",
											"raw": ": H3/H4 subsections correctly included under parent H2\n",
											"text": ": H3/H4 subsections correctly included under parent H2\n",
											"escaped": false
										},
										{
											"type": "em",
											"raw": "_Implementation Pattern_",
											"text": "Implementation Pattern",
											"tokens": [
												{
													"type": "text",
													"raw": "Implementation Pattern",
													"text": "Implementation Pattern",
													"escaped": false
												}
											]
										},
										{
											"type": "text",
											"raw": ": Use ",
											"text": ": Use ",
											"escaped": false
										},
										{
											"type": "codespan",
											"raw": "`walkTokens`",
											"text": "walkTokens"
										},
										{
											"type": "text",
											"raw": "-like traversal (mirrors ",
											"text": "-like traversal (mirrors ",
											"escaped": false
										},
										{
											"type": "codespan",
											"raw": "`MarkdownParser.extractHeadings()`",
											"text": "MarkdownParser.extractHeadings()"
										},
										{
											"type": "text",
											"raw": " pattern at lines 321-343)\n",
											"text": " pattern at lines 321-343)\n",
											"escaped": false
										},
										{
											"type": "em",
											"raw": "_API Validated_",
											"text": "API Validated",
											"tokens": [
												{
													"type": "text",
													"raw": "API Validated",
													"text": "API Validated",
													"escaped": false
												}
											]
										},
										{
											"type": "text",
											"raw": ": ",
											"text": ": ",
											"escaped": false
										},
										{
											"type": "codespan",
											"raw": "`extractSection(tokens, headingText, headingLevel)`",
											"text": "extractSection(tokens, headingText, headingLevel)"
										},
										{
											"type": "text",
											"raw": " → ",
											"text": " → ",
											"escaped": false
										},
										{
											"type": "codespan",
											"raw": "`{ heading: { level, text, raw }, tokens: [...], content: string }`",
											"text": "{ heading: { level, text, raw }, tokens: [...], content: string }"
										},
										{
											"type": "text",
											"raw": "\n",
											"text": "\n",
											"escaped": false
										},
										{
											"type": "em",
											"raw": "_Context7 Research_",
											"text": "Context7 Research",
											"tokens": [
												{
													"type": "text",
													"raw": "Context7 Research",
													"text": "Context7 Research",
													"escaped": false
												}
											]
										},
										{
											"type": "text",
											"raw": ": marked.js ",
											"text": ": marked.js ",
											"escaped": false
										},
										{
											"type": "codespan",
											"raw": "`walkTokens`",
											"text": "walkTokens"
										},
										{
											"type": "text",
											"raw": " API provides idiomatic pattern for token traversal (child tokens processed before siblings)\n",
											"text": " API provides idiomatic pattern for token traversal (child tokens processed before siblings)\n",
											"escaped": false
										},
										{
											"type": "em",
											"raw": "_Production Integration Path_",
											"text": "Production Integration Path",
											"tokens": [
												{
													"type": "text",
													"raw": "Production Integration Path",
													"text": "Production Integration Path",
													"escaped": false
												}
											]
										},
										{
											"type": "text",
											"raw": ": Create ",
											"text": ": Create ",
											"escaped": false
										},
										{
											"type": "codespan",
											"raw": "`ContentExtractor`",
											"text": "ContentExtractor"
										},
										{
											"type": "text",
											"raw": " component accepting ",
											"text": " component accepting ",
											"escaped": false
										},
										{
											"type": "codespan",
											"raw": "`ParsedFileCache`",
											"text": "ParsedFileCache"
										},
										{
											"type": "text",
											"raw": " dependency, leverage existing token structure from MarkdownParser.Output.DataContract\n",
											"text": " dependency, leverage existing token structure from MarkdownParser.Output.DataContract\n",
											"escaped": false
										},
										{
											"type": "em",
											"raw": "_Test Coverage_",
											"text": "Test Coverage",
											"tokens": [
												{
													"type": "text",
													"raw": "Test Coverage",
													"text": "Test Coverage",
													"escaped": false
												}
											]
										},
										{
											"type": "text",
											"raw": ": 7/7 POC tests passing (100% success rate)\n",
											"text": ": 7/7 POC tests passing (100% success rate)\n",
											"escaped": false
										},
										{
											"type": "em",
											"raw": "_Next Step_",
											"text": "Next Step",
											"tokens": [
												{
													"type": "text",
													"raw": "Next Step",
													"text": "Next Step",
													"escaped": false
												}
											]
										},
										{
											"type": "text",
											"raw": ": Story 2.2 ContentExtractor implementation can use validated algorithm and API contract",
											"text": ": Story 2.2 ContentExtractor implementation can use validated algorithm and API contract",
											"escaped": false
										}
									]
								}
							]
						}
					]
				}
			],
			"text": "[!success] **Technical Lead Research**: Section extraction POC validated ✅ (2025-10-07)\n_Research Objective_: Prove we can walk marked.js tokens to extract section content by heading level\n_POC Location_: `tools/citation-manager/test/poc-section-extraction.test.js`\n_Key Findings_:\n- ✅ **Token walking works**: marked.js tokens provide complete AST for section boundary detection\n- ✅ **Boundary detection validated**: Algorithm correctly stops at next same-or-higher level heading\n- ✅ **Content reconstruction proven**: Concatenating `token.raw` properties rebuilds original markdown\n- ✅ **Nested sections handled**: H3/H4 subsections correctly included under parent H2\n_Implementation Pattern_: Use `walkTokens`-like traversal (mirrors `MarkdownParser.extractHeadings()` pattern at lines 321-343)\n_API Validated_: `extractSection(tokens, headingText, headingLevel)` → `{ heading: { level, text, raw }, tokens: [...], content: string }`\n_Context7 Research_: marked.js `walkTokens` API provides idiomatic pattern for token traversal (child tokens processed before siblings)\n_Production Integration Path_: Create `ContentExtractor` component accepting `ParsedFileCache` dependency, leverage existing token structure from MarkdownParser.Output.DataContract\n_Test Coverage_: 7/7 POC tests passing (100% success rate)\n_Next Step_: Story 2.2 ContentExtractor implementation can use validated algorithm and API contract"
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "paragraph",
			"raw": "_Depends On_: [Story 1.5: Implement a Cache for Parsed File Objects](#Story%201.5%20Implement%20a%20Cache%20for%20Parsed%20File%20Objects)\n_Functional Requirements_: [[#^FR4|FR4]]",
			"text": "_Depends On_: [Story 1.5: Implement a Cache for Parsed File Objects](#Story%201.5%20Implement%20a%20Cache%20for%20Parsed%20File%20Objects)\n_Functional Requirements_: [[#^FR4|FR4]]",
			"tokens": [
				{
					"type": "em",
					"raw": "_Depends On_",
					"text": "Depends On",
					"tokens": [
						{
							"type": "text",
							"raw": "Depends On",
							"text": "Depends On",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": ": ",
					"text": ": ",
					"escaped": false
				},
				{
					"type": "link",
					"raw": "[Story 1.5: Implement a Cache for Parsed File Objects](#Story%201.5%20Implement%20a%20Cache%20for%20Parsed%20File%20Objects)",
					"href": "#Story%201.5%20Implement%20a%20Cache%20for%20Parsed%20File%20Objects",
					"title": null,
					"text": "Story 1.5: Implement a Cache for Parsed File Objects",
					"tokens": [
						{
							"type": "text",
							"raw": "Story 1.5: Implement a Cache for Parsed File Objects",
							"text": "Story 1.5: Implement a Cache for Parsed File Objects",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": "\n",
					"text": "\n",
					"escaped": false
				},
				{
					"type": "em",
					"raw": "_Functional Requirements_",
					"text": "Functional Requirements",
					"tokens": [
						{
							"type": "text",
							"raw": "Functional Requirements",
							"text": "Functional Requirements",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": ": [[#^FR4|FR4]]",
					"text": ": [[#^FR4|FR4]]",
					"escaped": false
				}
			]
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "heading",
			"raw": "### Story 2.2: Implement Unified Content Extractor with Metadata\n\n",
			"depth": 3,
			"text": "Story 2.2: Implement Unified Content Extractor with Metadata",
			"tokens": [
				{
					"type": "text",
					"raw": "Story 2.2: Implement Unified Content Extractor with Metadata",
					"text": "Story 2.2: Implement Unified Content Extractor with Metadata",
					"escaped": false
				}
			]
		},
		{
			"type": "paragraph",
			"raw": "**As a** developer,\n**I want** to create a content extraction module that can return either a full file's content or a specific section's content, including source metadata,\n**so that** I have a single, reliable way to retrieve content for aggregation.",
			"text": "**As a** developer,\n**I want** to create a content extraction module that can return either a full file's content or a specific section's content, including source metadata,\n**so that** I have a single, reliable way to retrieve content for aggregation.",
			"tokens": [
				{
					"type": "strong",
					"raw": "**As a**",
					"text": "As a",
					"tokens": [
						{
							"type": "text",
							"raw": "As a",
							"text": "As a",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": " developer,\n",
					"text": " developer,\n",
					"escaped": false
				},
				{
					"type": "strong",
					"raw": "**I want**",
					"text": "I want",
					"tokens": [
						{
							"type": "text",
							"raw": "I want",
							"text": "I want",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": " to create a content extraction module that can return either a full file's content or a specific section's content, including source metadata,\n",
					"text": " to create a content extraction module that can return either a full file's content or a specific section's content, including source metadata,\n",
					"escaped": false
				},
				{
					"type": "strong",
					"raw": "**so that**",
					"text": "so that",
					"tokens": [
						{
							"type": "text",
							"raw": "so that",
							"text": "so that",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": " I have a single, reliable way to retrieve content for aggregation.",
					"text": " I have a single, reliable way to retrieve content for aggregation.",
					"escaped": false
				}
			]
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "heading",
			"raw": "#### Story 2.2 Acceptance Criteria\n",
			"depth": 4,
			"text": "Story 2.2 Acceptance Criteria",
			"tokens": [
				{
					"type": "text",
					"raw": "Story 2.2 Acceptance Criteria",
					"text": "Story 2.2 Acceptance Criteria",
					"escaped": false
				}
			]
		},
		{
			"type": "list",
			"raw": "1. GIVEN a file path and an optional heading, WHEN the extractor is called, THEN it SHALL return a structured object containing the extracted `content` string and `metadata`. ^US2-2AC1\n2. IF a heading is provided, THEN the `content` SHALL be the text between that heading and the next heading of an equal or higher level. ^US2-2AC2\n3. IF no heading is provided, THEN the `content` SHALL be the entire content of the file. ^US2-2AC3\n4. GIVEN a file path or heading that does not exist, WHEN the extractor is called, THEN it SHALL fail gracefully by returning null or an empty object and log a warning. ^US2-2AC4",
			"ordered": true,
			"start": 1,
			"loose": false,
			"items": [
				{
					"type": "list_item",
					"raw": "1. GIVEN a file path and an optional heading, WHEN the extractor is called, THEN it SHALL return a structured object containing the extracted `content` string and `metadata`. ^US2-2AC1\n",
					"task": false,
					"loose": false,
					"text": "GIVEN a file path and an optional heading, WHEN the extractor is called, THEN it SHALL return a structured object containing the extracted `content` string and `metadata`. ^US2-2AC1",
					"tokens": [
						{
							"type": "text",
							"raw": "GIVEN a file path and an optional heading, WHEN the extractor is called, THEN it SHALL return a structured object containing the extracted `content` string and `metadata`. ^US2-2AC1",
							"text": "GIVEN a file path and an optional heading, WHEN the extractor is called, THEN it SHALL return a structured object containing the extracted `content` string and `metadata`. ^US2-2AC1",
							"tokens": [
								{
									"type": "text",
									"raw": "GIVEN a file path and an optional heading, WHEN the extractor is called, THEN it SHALL return a structured object containing the extracted ",
									"text": "GIVEN a file path and an optional heading, WHEN the extractor is called, THEN it SHALL return a structured object containing the extracted ",
									"escaped": false
								},
								{
									"type": "codespan",
									"raw": "`content`",
									"text": "content"
								},
								{
									"type": "text",
									"raw": " string and ",
									"text": " string and ",
									"escaped": false
								},
								{
									"type": "codespan",
									"raw": "`metadata`",
									"text": "metadata"
								},
								{
									"type": "text",
									"raw": ". ^US2-2AC1",
									"text": ". ^US2-2AC1",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "2. IF a heading is provided, THEN the `content` SHALL be the text between that heading and the next heading of an equal or higher level. ^US2-2AC2\n",
					"task": false,
					"loose": false,
					"text": "IF a heading is provided, THEN the `content` SHALL be the text between that heading and the next heading of an equal or higher level. ^US2-2AC2",
					"tokens": [
						{
							"type": "text",
							"raw": "IF a heading is provided, THEN the `content` SHALL be the text between that heading and the next heading of an equal or higher level. ^US2-2AC2",
							"text": "IF a heading is provided, THEN the `content` SHALL be the text between that heading and the next heading of an equal or higher level. ^US2-2AC2",
							"tokens": [
								{
									"type": "text",
									"raw": "IF a heading is provided, THEN the ",
									"text": "IF a heading is provided, THEN the ",
									"escaped": false
								},
								{
									"type": "codespan",
									"raw": "`content`",
									"text": "content"
								},
								{
									"type": "text",
									"raw": " SHALL be the text between that heading and the next heading of an equal or higher level. ^US2-2AC2",
									"text": " SHALL be the text between that heading and the next heading of an equal or higher level. ^US2-2AC2",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "3. IF no heading is provided, THEN the `content` SHALL be the entire content of the file. ^US2-2AC3\n",
					"task": false,
					"loose": false,
					"text": "IF no heading is provided, THEN the `content` SHALL be the entire content of the file. ^US2-2AC3",
					"tokens": [
						{
							"type": "text",
							"raw": "IF no heading is provided, THEN the `content` SHALL be the entire content of the file. ^US2-2AC3",
							"text": "IF no heading is provided, THEN the `content` SHALL be the entire content of the file. ^US2-2AC3",
							"tokens": [
								{
									"type": "text",
									"raw": "IF no heading is provided, THEN the ",
									"text": "IF no heading is provided, THEN the ",
									"escaped": false
								},
								{
									"type": "codespan",
									"raw": "`content`",
									"text": "content"
								},
								{
									"type": "text",
									"raw": " SHALL be the entire content of the file. ^US2-2AC3",
									"text": " SHALL be the entire content of the file. ^US2-2AC3",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "4. GIVEN a file path or heading that does not exist, WHEN the extractor is called, THEN it SHALL fail gracefully by returning null or an empty object and log a warning. ^US2-2AC4",
					"task": false,
					"loose": false,
					"text": "GIVEN a file path or heading that does not exist, WHEN the extractor is called, THEN it SHALL fail gracefully by returning null or an empty object and log a warning. ^US2-2AC4",
					"tokens": [
						{
							"type": "text",
							"raw": "GIVEN a file path or heading that does not exist, WHEN the extractor is called, THEN it SHALL fail gracefully by returning null or an empty object and log a warning. ^US2-2AC4",
							"text": "GIVEN a file path or heading that does not exist, WHEN the extractor is called, THEN it SHALL fail gracefully by returning null or an empty object and log a warning. ^US2-2AC4",
							"tokens": [
								{
									"type": "text",
									"raw": "GIVEN a file path or heading that does not exist, WHEN the extractor is called, THEN it SHALL fail gracefully by returning null or an empty object and log a warning. ^US2-2AC4",
									"text": "GIVEN a file path or heading that does not exist, WHEN the extractor is called, THEN it SHALL fail gracefully by returning null or an empty object and log a warning. ^US2-2AC4",
									"escaped": false
								}
							]
						}
					]
				}
			]
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "blockquote",
			"raw": "> [!warning] **Technical Lead Feedback**: Parser-extractor interaction model design required\n> _Architecture Impact_: The interaction model between the parser and this new extractor component needs to be designed, including the specific data structures they will use to communicate.\n> _Relevant Architecture Principles_: [black-box-interfaces](../../../../../design-docs/Architecture%20Principles.md#^black-box-interfaces), [data-model-first](../../../../../design-docs/Architecture%20Principles.md#^data-model-first), [single-responsibility](../../../../../design-docs/Architecture%20Principles.md#^single-responsibility)\n",
			"tokens": [
				{
					"type": "paragraph",
					"raw": "[!warning] **Technical Lead Feedback**: Parser-extractor interaction model design required\n_Architecture Impact_: The interaction model between the parser and this new extractor component needs to be designed, including the specific data structures they will use to communicate.\n_Relevant Architecture Principles_: [black-box-interfaces](../../../../../design-docs/Architecture%20Principles.md#^black-box-interfaces), [data-model-first](../../../../../design-docs/Architecture%20Principles.md#^data-model-first), [single-responsibility](../../../../../design-docs/Architecture%20Principles.md#^single-responsibility)",
					"text": "[!warning] **Technical Lead Feedback**: Parser-extractor interaction model design required\n_Architecture Impact_: The interaction model between the parser and this new extractor component needs to be designed, including the specific data structures they will use to communicate.\n_Relevant Architecture Principles_: [black-box-interfaces](../../../../../design-docs/Architecture%20Principles.md#^black-box-interfaces), [data-model-first](../../../../../design-docs/Architecture%20Principles.md#^data-model-first), [single-responsibility](../../../../../design-docs/Architecture%20Principles.md#^single-responsibility)",
					"tokens": [
						{
							"type": "text",
							"raw": "[!warning] ",
							"text": "[!warning] "
						},
						{
							"type": "strong",
							"raw": "**Technical Lead Feedback**",
							"text": "Technical Lead Feedback",
							"tokens": [
								{
									"type": "text",
									"raw": "Technical Lead Feedback",
									"text": "Technical Lead Feedback",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ": Parser-extractor interaction model design required\n",
							"text": ": Parser-extractor interaction model design required\n",
							"escaped": false
						},
						{
							"type": "em",
							"raw": "_Architecture Impact_",
							"text": "Architecture Impact",
							"tokens": [
								{
									"type": "text",
									"raw": "Architecture Impact",
									"text": "Architecture Impact",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ": The interaction model between the parser and this new extractor component needs to be designed, including the specific data structures they will use to communicate.\n",
							"text": ": The interaction model between the parser and this new extractor component needs to be designed, including the specific data structures they will use to communicate.\n",
							"escaped": false
						},
						{
							"type": "em",
							"raw": "_Relevant Architecture Principles_",
							"text": "Relevant Architecture Principles",
							"tokens": [
								{
									"type": "text",
									"raw": "Relevant Architecture Principles",
									"text": "Relevant Architecture Principles",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ": ",
							"text": ": ",
							"escaped": false
						},
						{
							"type": "link",
							"raw": "[black-box-interfaces](../../../../../design-docs/Architecture%20Principles.md#^black-box-interfaces)",
							"href": "../../../../../design-docs/Architecture%20Principles.md#^black-box-interfaces",
							"title": null,
							"text": "black-box-interfaces",
							"tokens": [
								{
									"type": "text",
									"raw": "black-box-interfaces",
									"text": "black-box-interfaces",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ", ",
							"text": ", ",
							"escaped": false
						},
						{
							"type": "link",
							"raw": "[data-model-first](../../../../../design-docs/Architecture%20Principles.md#^data-model-first)",
							"href": "../../../../../design-docs/Architecture%20Principles.md#^data-model-first",
							"title": null,
							"text": "data-model-first",
							"tokens": [
								{
									"type": "text",
									"raw": "data-model-first",
									"text": "data-model-first",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ", ",
							"text": ", ",
							"escaped": false
						},
						{
							"type": "link",
							"raw": "[single-responsibility](../../../../../design-docs/Architecture%20Principles.md#^single-responsibility)",
							"href": "../../../../../design-docs/Architecture%20Principles.md#^single-responsibility",
							"title": null,
							"text": "single-responsibility",
							"tokens": [
								{
									"type": "text",
									"raw": "single-responsibility",
									"text": "single-responsibility",
									"escaped": false
								}
							]
						}
					]
				}
			],
			"text": "[!warning] **Technical Lead Feedback**: Parser-extractor interaction model design required\n_Architecture Impact_: The interaction model between the parser and this new extractor component needs to be designed, including the specific data structures they will use to communicate.\n_Relevant Architecture Principles_: [black-box-interfaces](../../../../../design-docs/Architecture%20Principles.md#^black-box-interfaces), [data-model-first](../../../../../design-docs/Architecture%20Principles.md#^data-model-first), [single-responsibility](../../../../../design-docs/Architecture%20Principles.md#^single-responsibility)"
		},
		{
			"type": "html",
			"block": true,
			"raw": "<!-- -->\n",
			"pre": false,
			"text": "<!-- -->\n"
		},
		{
			"type": "blockquote",
			"raw": "> [!success] **Technical Lead Research**: Parser-extractor data contract validated ✅ (2025-10-07)\n> _Research Finding_: POC confirms ContentExtractor can consume MarkdownParser.Output.DataContract directly without schema changes\n> _Data Flow Validated_:\n> 1. `ParsedFileCache.resolveParsedFile(filePath)` → MarkdownParser.Output.DataContract (`{ tokens, headings, content, ... }`)\n> 2. `ContentExtractor.extractSection(tokens, headingText, headingLevel)` → Section data (`{ heading, tokens, content }`)\n> 3. No parser modifications needed - existing token structure sufficient\n> _Interaction Model_: ContentExtractor accepts `ParsedFileCache` as constructor dependency (DI pattern from US1.4b/US1.5)\n> _Interface Contract_:\n>\n> ```javascript\n> class ContentExtractor {\n>   constructor(parsedFileCache) { ... }\n>   async extractSection(filePath, headingText, headingLevel) {\n>     const parsed = await this.parsedFileCache.resolveParsedFile(filePath);\n>     return this.extractSectionFromTokens(parsed.tokens, headingText, headingLevel);\n>   }\n>   async extractFullFile(filePath) {\n>     const parsed = await this.parsedFileCache.resolveParsedFile(filePath);\n>     return { content: parsed.content, tokens: parsed.tokens, metadata: {...} };\n>   }\n> }\n> ```\n>\n> _Metadata Structure_: `{ sourceFile: string, section: string|null, heading: object|null, lineRange: {start, end} }`\n> _POC Reference_: See `tools/citation-manager/test/poc-section-extraction.test.js` for validated extraction algorithm\n",
			"tokens": [
				{
					"type": "paragraph",
					"raw": "[!success] **Technical Lead Research**: Parser-extractor data contract validated ✅ (2025-10-07)\n_Research Finding_: POC confirms ContentExtractor can consume MarkdownParser.Output.DataContract directly without schema changes\n_Data Flow Validated_:\n",
					"text": "[!success] **Technical Lead Research**: Parser-extractor data contract validated ✅ (2025-10-07)\n_Research Finding_: POC confirms ContentExtractor can consume MarkdownParser.Output.DataContract directly without schema changes\n_Data Flow Validated_:",
					"tokens": [
						{
							"type": "text",
							"raw": "[!success] ",
							"text": "[!success] "
						},
						{
							"type": "strong",
							"raw": "**Technical Lead Research**",
							"text": "Technical Lead Research",
							"tokens": [
								{
									"type": "text",
									"raw": "Technical Lead Research",
									"text": "Technical Lead Research",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ": Parser-extractor data contract validated ✅ (2025-10-07)\n",
							"text": ": Parser-extractor data contract validated ✅ (2025-10-07)\n",
							"escaped": false
						},
						{
							"type": "em",
							"raw": "_Research Finding_",
							"text": "Research Finding",
							"tokens": [
								{
									"type": "text",
									"raw": "Research Finding",
									"text": "Research Finding",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ": POC confirms ContentExtractor can consume MarkdownParser.Output.DataContract directly without schema changes\n",
							"text": ": POC confirms ContentExtractor can consume MarkdownParser.Output.DataContract directly without schema changes\n",
							"escaped": false
						},
						{
							"type": "em",
							"raw": "_Data Flow Validated_",
							"text": "Data Flow Validated",
							"tokens": [
								{
									"type": "text",
									"raw": "Data Flow Validated",
									"text": "Data Flow Validated",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ":",
							"text": ":",
							"escaped": false
						}
					]
				},
				{
					"type": "list",
					"raw": "1. `ParsedFileCache.resolveParsedFile(filePath)` → MarkdownParser.Output.DataContract (`{ tokens, headings, content, ... }`)\n2. `ContentExtractor.extractSection(tokens, headingText, headingLevel)` → Section data (`{ heading, tokens, content }`)\n3. No parser modifications needed - existing token structure sufficient\n_Interaction Model_: ContentExtractor accepts `ParsedFileCache` as constructor dependency (DI pattern from US1.4b/US1.5)\n_Interface Contract_:",
					"ordered": true,
					"start": 1,
					"loose": false,
					"items": [
						{
							"type": "list_item",
							"raw": "1. `ParsedFileCache.resolveParsedFile(filePath)` → MarkdownParser.Output.DataContract (`{ tokens, headings, content, ... }`)\n",
							"task": false,
							"loose": false,
							"text": "`ParsedFileCache.resolveParsedFile(filePath)` → MarkdownParser.Output.DataContract (`{ tokens, headings, content, ... }`)",
							"tokens": [
								{
									"type": "text",
									"raw": "`ParsedFileCache.resolveParsedFile(filePath)` → MarkdownParser.Output.DataContract (`{ tokens, headings, content, ... }`)",
									"text": "`ParsedFileCache.resolveParsedFile(filePath)` → MarkdownParser.Output.DataContract (`{ tokens, headings, content, ... }`)",
									"tokens": [
										{
											"type": "codespan",
											"raw": "`ParsedFileCache.resolveParsedFile(filePath)`",
											"text": "ParsedFileCache.resolveParsedFile(filePath)"
										},
										{
											"type": "text",
											"raw": " → MarkdownParser.Output.DataContract (",
											"text": " → MarkdownParser.Output.DataContract (",
											"escaped": false
										},
										{
											"type": "codespan",
											"raw": "`{ tokens, headings, content, ... }`",
											"text": "{ tokens, headings, content, ... }"
										},
										{
											"type": "text",
											"raw": ")",
											"text": ")",
											"escaped": false
										}
									]
								}
							]
						},
						{
							"type": "list_item",
							"raw": "2. `ContentExtractor.extractSection(tokens, headingText, headingLevel)` → Section data (`{ heading, tokens, content }`)\n",
							"task": false,
							"loose": false,
							"text": "`ContentExtractor.extractSection(tokens, headingText, headingLevel)` → Section data (`{ heading, tokens, content }`)",
							"tokens": [
								{
									"type": "text",
									"raw": "`ContentExtractor.extractSection(tokens, headingText, headingLevel)` → Section data (`{ heading, tokens, content }`)",
									"text": "`ContentExtractor.extractSection(tokens, headingText, headingLevel)` → Section data (`{ heading, tokens, content }`)",
									"tokens": [
										{
											"type": "codespan",
											"raw": "`ContentExtractor.extractSection(tokens, headingText, headingLevel)`",
											"text": "ContentExtractor.extractSection(tokens, headingText, headingLevel)"
										},
										{
											"type": "text",
											"raw": " → Section data (",
											"text": " → Section data (",
											"escaped": false
										},
										{
											"type": "codespan",
											"raw": "`{ heading, tokens, content }`",
											"text": "{ heading, tokens, content }"
										},
										{
											"type": "text",
											"raw": ")",
											"text": ")",
											"escaped": false
										}
									]
								}
							]
						},
						{
							"type": "list_item",
							"raw": "3. No parser modifications needed - existing token structure sufficient\n_Interaction Model_: ContentExtractor accepts `ParsedFileCache` as constructor dependency (DI pattern from US1.4b/US1.5)\n_Interface Contract_:",
							"task": false,
							"loose": false,
							"text": "No parser modifications needed - existing token structure sufficient\n_Interaction Model_: ContentExtractor accepts `ParsedFileCache` as constructor dependency (DI pattern from US1.4b/US1.5)\n_Interface Contract_:",
							"tokens": [
								{
									"type": "text",
									"raw": "No parser modifications needed - existing token structure sufficient\n\n_Interaction Model_: ContentExtractor accepts `ParsedFileCache` as constructor dependency (DI pattern from US1.4b/US1.5)\n\n_Interface Contract_:",
									"text": "No parser modifications needed - existing token structure sufficient\n_Interaction Model_: ContentExtractor accepts `ParsedFileCache` as constructor dependency (DI pattern from US1.4b/US1.5)\n_Interface Contract_:",
									"tokens": [
										{
											"type": "text",
											"raw": "No parser modifications needed - existing token structure sufficient\n",
											"text": "No parser modifications needed - existing token structure sufficient\n",
											"escaped": false
										},
										{
											"type": "em",
											"raw": "_Interaction Model_",
											"text": "Interaction Model",
											"tokens": [
												{
													"type": "text",
													"raw": "Interaction Model",
													"text": "Interaction Model",
													"escaped": false
												}
											]
										},
										{
											"type": "text",
											"raw": ": ContentExtractor accepts ",
											"text": ": ContentExtractor accepts ",
											"escaped": false
										},
										{
											"type": "codespan",
											"raw": "`ParsedFileCache`",
											"text": "ParsedFileCache"
										},
										{
											"type": "text",
											"raw": " as constructor dependency (DI pattern from US1.4b/US1.5)\n",
											"text": " as constructor dependency (DI pattern from US1.4b/US1.5)\n",
											"escaped": false
										},
										{
											"type": "em",
											"raw": "_Interface Contract_",
											"text": "Interface Contract",
											"tokens": [
												{
													"type": "text",
													"raw": "Interface Contract",
													"text": "Interface Contract",
													"escaped": false
												}
											]
										},
										{
											"type": "text",
											"raw": ":",
											"text": ":",
											"escaped": false
										}
									]
								}
							]
						}
					]
				},
				{
					"type": "space",
					"raw": "\n\n"
				},
				{
					"type": "code",
					"raw": "```javascript\nclass ContentExtractor {\n  constructor(parsedFileCache) { ... }\n  async extractSection(filePath, headingText, headingLevel) {\n    const parsed = await this.parsedFileCache.resolveParsedFile(filePath);\n    return this.extractSectionFromTokens(parsed.tokens, headingText, headingLevel);\n  }\n  async extractFullFile(filePath) {\n    const parsed = await this.parsedFileCache.resolveParsedFile(filePath);\n    return { content: parsed.content, tokens: parsed.tokens, metadata: {...} };\n  }\n}\n```",
					"lang": "javascript",
					"text": "class ContentExtractor {\n  constructor(parsedFileCache) { ... }\n  async extractSection(filePath, headingText, headingLevel) {\n    const parsed = await this.parsedFileCache.resolveParsedFile(filePath);\n    return this.extractSectionFromTokens(parsed.tokens, headingText, headingLevel);\n  }\n  async extractFullFile(filePath) {\n    const parsed = await this.parsedFileCache.resolveParsedFile(filePath);\n    return { content: parsed.content, tokens: parsed.tokens, metadata: {...} };\n  }\n}"
				},
				{
					"type": "space",
					"raw": "\n\n"
				},
				{
					"type": "paragraph",
					"raw": "_Metadata Structure_: `{ sourceFile: string, section: string|null, heading: object|null, lineRange: {start, end} }`\n_POC Reference_: See `tools/citation-manager/test/poc-section-extraction.test.js` for validated extraction algorithm",
					"text": "_Metadata Structure_: `{ sourceFile: string, section: string|null, heading: object|null, lineRange: {start, end} }`\n_POC Reference_: See `tools/citation-manager/test/poc-section-extraction.test.js` for validated extraction algorithm",
					"tokens": [
						{
							"type": "em",
							"raw": "_Metadata Structure_",
							"text": "Metadata Structure",
							"tokens": [
								{
									"type": "text",
									"raw": "Metadata Structure",
									"text": "Metadata Structure",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ": ",
							"text": ": ",
							"escaped": false
						},
						{
							"type": "codespan",
							"raw": "`{ sourceFile: string, section: string|null, heading: object|null, lineRange: {start, end} }`",
							"text": "{ sourceFile: string, section: string|null, heading: object|null, lineRange: {start, end} }"
						},
						{
							"type": "text",
							"raw": "\n",
							"text": "\n",
							"escaped": false
						},
						{
							"type": "em",
							"raw": "_POC Reference_",
							"text": "POC Reference",
							"tokens": [
								{
									"type": "text",
									"raw": "POC Reference",
									"text": "POC Reference",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ": See ",
							"text": ": See ",
							"escaped": false
						},
						{
							"type": "codespan",
							"raw": "`tools/citation-manager/test/poc-section-extraction.test.js`",
							"text": "tools/citation-manager/test/poc-section-extraction.test.js"
						},
						{
							"type": "text",
							"raw": " for validated extraction algorithm",
							"text": " for validated extraction algorithm",
							"escaped": false
						}
					]
				}
			],
			"text": "[!success] **Technical Lead Research**: Parser-extractor data contract validated ✅ (2025-10-07)\n_Research Finding_: POC confirms ContentExtractor can consume MarkdownParser.Output.DataContract directly without schema changes\n_Data Flow Validated_:\n1. `ParsedFileCache.resolveParsedFile(filePath)` → MarkdownParser.Output.DataContract (`{ tokens, headings, content, ... }`)\n2. `ContentExtractor.extractSection(tokens, headingText, headingLevel)` → Section data (`{ heading, tokens, content }`)\n3. No parser modifications needed - existing token structure sufficient\n_Interaction Model_: ContentExtractor accepts `ParsedFileCache` as constructor dependency (DI pattern from US1.4b/US1.5)\n_Interface Contract_:\n\n```javascript\nclass ContentExtractor {\n  constructor(parsedFileCache) { ... }\n  async extractSection(filePath, headingText, headingLevel) {\n    const parsed = await this.parsedFileCache.resolveParsedFile(filePath);\n    return this.extractSectionFromTokens(parsed.tokens, headingText, headingLevel);\n  }\n  async extractFullFile(filePath) {\n    const parsed = await this.parsedFileCache.resolveParsedFile(filePath);\n    return { content: parsed.content, tokens: parsed.tokens, metadata: {...} };\n  }\n}\n```\n\n_Metadata Structure_: `{ sourceFile: string, section: string|null, heading: object|null, lineRange: {start, end} }`\n_POC Reference_: See `tools/citation-manager/test/poc-section-extraction.test.js` for validated extraction algorithm"
		},
		{
			"type": "html",
			"block": true,
			"raw": "<!-- -->\n",
			"pre": false,
			"text": "<!-- -->\n"
		},
		{
			"type": "blockquote",
			"raw": "> [!success] **Technical Lead Research**: Block anchor extraction POC validated ✅ (2025-10-07)\n> _Research Objective_: Prove we can extract single block content by `^anchor-id` references\n> _POC Location_: `tools/citation-manager/test/poc-block-extraction.test.js`\n> _Key Findings_:\n> - ✅ **Anchor detection works**: `MarkdownParser.extractAnchors()` correctly identifies all `^anchor-id` patterns at line endings\n> - ✅ **Line-based extraction validated**: Can extract single line/paragraph using anchor's `line` number from MarkdownParser.Output.DataContract\n> - ✅ **Anchor metadata accurate**: Line numbers, column positions, and IDs correctly populated in `anchors` array\n> - ✅ **Multiple block types handled**: Works for paragraphs, headings, list items across different sections\n> _Block Anchor Formats Supported_:\n> 1. Obsidian block references: `Some content ^anchor-id` (end of line)\n> 2. Caret syntax: `^anchor-id` anywhere in line (legacy)\n> 3. Emphasis-marked: `==**text**==` (creates implicit anchor)\n> _API Validated_: `extractBlock(content, anchors, blockId)` → `{ anchor: { anchorType, id, line, column }, content: string, lineNumber: number }`\n> _Key Difference from Sections_: Blocks extract ONLY single line/paragraph (not multi-line), uses line number lookup (not token walking)\n> _Production Integration Path_: ContentExtractor needs both `extractSection()` and `extractBlock()` methods to handle header vs block anchors\n> _Test Coverage_: 9/9 POC tests passing (100% success rate)\n> _Implementation Note_: Current POC extracts single line; production may need paragraph boundary detection for multi-line blocks",
			"tokens": [
				{
					"type": "paragraph",
					"raw": "[!success] **Technical Lead Research**: Block anchor extraction POC validated ✅ (2025-10-07)\n_Research Objective_: Prove we can extract single block content by `^anchor-id` references\n_POC Location_: `tools/citation-manager/test/poc-block-extraction.test.js`\n_Key Findings_:\n",
					"text": "[!success] **Technical Lead Research**: Block anchor extraction POC validated ✅ (2025-10-07)\n_Research Objective_: Prove we can extract single block content by `^anchor-id` references\n_POC Location_: `tools/citation-manager/test/poc-block-extraction.test.js`\n_Key Findings_:",
					"tokens": [
						{
							"type": "text",
							"raw": "[!success] ",
							"text": "[!success] "
						},
						{
							"type": "strong",
							"raw": "**Technical Lead Research**",
							"text": "Technical Lead Research",
							"tokens": [
								{
									"type": "text",
									"raw": "Technical Lead Research",
									"text": "Technical Lead Research",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ": Block anchor extraction POC validated ✅ (2025-10-07)\n",
							"text": ": Block anchor extraction POC validated ✅ (2025-10-07)\n",
							"escaped": false
						},
						{
							"type": "em",
							"raw": "_Research Objective_",
							"text": "Research Objective",
							"tokens": [
								{
									"type": "text",
									"raw": "Research Objective",
									"text": "Research Objective",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ": Prove we can extract single block content by ",
							"text": ": Prove we can extract single block content by ",
							"escaped": false
						},
						{
							"type": "codespan",
							"raw": "`^anchor-id`",
							"text": "^anchor-id"
						},
						{
							"type": "text",
							"raw": " references\n",
							"text": " references\n",
							"escaped": false
						},
						{
							"type": "em",
							"raw": "_POC Location_",
							"text": "POC Location",
							"tokens": [
								{
									"type": "text",
									"raw": "POC Location",
									"text": "POC Location",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ": ",
							"text": ": ",
							"escaped": false
						},
						{
							"type": "codespan",
							"raw": "`tools/citation-manager/test/poc-block-extraction.test.js`",
							"text": "tools/citation-manager/test/poc-block-extraction.test.js"
						},
						{
							"type": "text",
							"raw": "\n",
							"text": "\n",
							"escaped": false
						},
						{
							"type": "em",
							"raw": "_Key Findings_",
							"text": "Key Findings",
							"tokens": [
								{
									"type": "text",
									"raw": "Key Findings",
									"text": "Key Findings",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ":",
							"text": ":",
							"escaped": false
						}
					]
				},
				{
					"type": "list",
					"raw": "- ✅ **Anchor detection works**: `MarkdownParser.extractAnchors()` correctly identifies all `^anchor-id` patterns at line endings\n- ✅ **Line-based extraction validated**: Can extract single line/paragraph using anchor's `line` number from MarkdownParser.Output.DataContract\n- ✅ **Anchor metadata accurate**: Line numbers, column positions, and IDs correctly populated in `anchors` array\n- ✅ **Multiple block types handled**: Works for paragraphs, headings, list items across different sections\n_Block Anchor Formats Supported_:\n",
					"ordered": false,
					"start": "",
					"loose": false,
					"items": [
						{
							"type": "list_item",
							"raw": "- ✅ **Anchor detection works**: `MarkdownParser.extractAnchors()` correctly identifies all `^anchor-id` patterns at line endings\n",
							"task": false,
							"loose": false,
							"text": "✅ **Anchor detection works**: `MarkdownParser.extractAnchors()` correctly identifies all `^anchor-id` patterns at line endings",
							"tokens": [
								{
									"type": "text",
									"raw": "✅ **Anchor detection works**: `MarkdownParser.extractAnchors()` correctly identifies all `^anchor-id` patterns at line endings",
									"text": "✅ **Anchor detection works**: `MarkdownParser.extractAnchors()` correctly identifies all `^anchor-id` patterns at line endings",
									"tokens": [
										{
											"type": "text",
											"raw": "✅ ",
											"text": "✅ ",
											"escaped": false
										},
										{
											"type": "strong",
											"raw": "**Anchor detection works**",
											"text": "Anchor detection works",
											"tokens": [
												{
													"type": "text",
													"raw": "Anchor detection works",
													"text": "Anchor detection works",
													"escaped": false
												}
											]
										},
										{
											"type": "text",
											"raw": ": ",
											"text": ": ",
											"escaped": false
										},
										{
											"type": "codespan",
											"raw": "`MarkdownParser.extractAnchors()`",
											"text": "MarkdownParser.extractAnchors()"
										},
										{
											"type": "text",
											"raw": " correctly identifies all ",
											"text": " correctly identifies all ",
											"escaped": false
										},
										{
											"type": "codespan",
											"raw": "`^anchor-id`",
											"text": "^anchor-id"
										},
										{
											"type": "text",
											"raw": " patterns at line endings",
											"text": " patterns at line endings",
											"escaped": false
										}
									]
								}
							]
						},
						{
							"type": "list_item",
							"raw": "- ✅ **Line-based extraction validated**: Can extract single line/paragraph using anchor's `line` number from MarkdownParser.Output.DataContract\n",
							"task": false,
							"loose": false,
							"text": "✅ **Line-based extraction validated**: Can extract single line/paragraph using anchor's `line` number from MarkdownParser.Output.DataContract",
							"tokens": [
								{
									"type": "text",
									"raw": "✅ **Line-based extraction validated**: Can extract single line/paragraph using anchor's `line` number from MarkdownParser.Output.DataContract",
									"text": "✅ **Line-based extraction validated**: Can extract single line/paragraph using anchor's `line` number from MarkdownParser.Output.DataContract",
									"tokens": [
										{
											"type": "text",
											"raw": "✅ ",
											"text": "✅ ",
											"escaped": false
										},
										{
											"type": "strong",
											"raw": "**Line-based extraction validated**",
											"text": "Line-based extraction validated",
											"tokens": [
												{
													"type": "text",
													"raw": "Line-based extraction validated",
													"text": "Line-based extraction validated",
													"escaped": false
												}
											]
										},
										{
											"type": "text",
											"raw": ": Can extract single line/paragraph using anchor's ",
											"text": ": Can extract single line/paragraph using anchor's ",
											"escaped": false
										},
										{
											"type": "codespan",
											"raw": "`line`",
											"text": "line"
										},
										{
											"type": "text",
											"raw": " number from MarkdownParser.Output.DataContract",
											"text": " number from MarkdownParser.Output.DataContract",
											"escaped": false
										}
									]
								}
							]
						},
						{
							"type": "list_item",
							"raw": "- ✅ **Anchor metadata accurate**: Line numbers, column positions, and IDs correctly populated in `anchors` array\n",
							"task": false,
							"loose": false,
							"text": "✅ **Anchor metadata accurate**: Line numbers, column positions, and IDs correctly populated in `anchors` array",
							"tokens": [
								{
									"type": "text",
									"raw": "✅ **Anchor metadata accurate**: Line numbers, column positions, and IDs correctly populated in `anchors` array",
									"text": "✅ **Anchor metadata accurate**: Line numbers, column positions, and IDs correctly populated in `anchors` array",
									"tokens": [
										{
											"type": "text",
											"raw": "✅ ",
											"text": "✅ ",
											"escaped": false
										},
										{
											"type": "strong",
											"raw": "**Anchor metadata accurate**",
											"text": "Anchor metadata accurate",
											"tokens": [
												{
													"type": "text",
													"raw": "Anchor metadata accurate",
													"text": "Anchor metadata accurate",
													"escaped": false
												}
											]
										},
										{
											"type": "text",
											"raw": ": Line numbers, column positions, and IDs correctly populated in ",
											"text": ": Line numbers, column positions, and IDs correctly populated in ",
											"escaped": false
										},
										{
											"type": "codespan",
											"raw": "`anchors`",
											"text": "anchors"
										},
										{
											"type": "text",
											"raw": " array",
											"text": " array",
											"escaped": false
										}
									]
								}
							]
						},
						{
							"type": "list_item",
							"raw": "- ✅ **Multiple block types handled**: Works for paragraphs, headings, list items across different sections\n_Block Anchor Formats Supported_:",
							"task": false,
							"loose": false,
							"text": "✅ **Multiple block types handled**: Works for paragraphs, headings, list items across different sections\n_Block Anchor Formats Supported_:",
							"tokens": [
								{
									"type": "text",
									"raw": "✅ **Multiple block types handled**: Works for paragraphs, headings, list items across different sections\n\n_Block Anchor Formats Supported_:",
									"text": "✅ **Multiple block types handled**: Works for paragraphs, headings, list items across different sections\n_Block Anchor Formats Supported_:",
									"tokens": [
										{
											"type": "text",
											"raw": "✅ ",
											"text": "✅ ",
											"escaped": false
										},
										{
											"type": "strong",
											"raw": "**Multiple block types handled**",
											"text": "Multiple block types handled",
											"tokens": [
												{
													"type": "text",
													"raw": "Multiple block types handled",
													"text": "Multiple block types handled",
													"escaped": false
												}
											]
										},
										{
											"type": "text",
											"raw": ": Works for paragraphs, headings, list items across different sections\n",
											"text": ": Works for paragraphs, headings, list items across different sections\n",
											"escaped": false
										},
										{
											"type": "em",
											"raw": "_Block Anchor Formats Supported_",
											"text": "Block Anchor Formats Supported",
											"tokens": [
												{
													"type": "text",
													"raw": "Block Anchor Formats Supported",
													"text": "Block Anchor Formats Supported",
													"escaped": false
												}
											]
										},
										{
											"type": "text",
											"raw": ":",
											"text": ":",
											"escaped": false
										}
									]
								}
							]
						}
					]
				},
				{
					"type": "list",
					"raw": "1. Obsidian block references: `Some content ^anchor-id` (end of line)\n2. Caret syntax: `^anchor-id` anywhere in line (legacy)\n3. Emphasis-marked: `==**text**==` (creates implicit anchor)\n_API Validated_: `extractBlock(content, anchors, blockId)` → `{ anchor: { anchorType, id, line, column }, content: string, lineNumber: number }`\n_Key Difference from Sections_: Blocks extract ONLY single line/paragraph (not multi-line), uses line number lookup (not token walking)\n_Production Integration Path_: ContentExtractor needs both `extractSection()` and `extractBlock()` methods to handle header vs block anchors\n_Test Coverage_: 9/9 POC tests passing (100% success rate)\n_Implementation Note_: Current POC extracts single line; production may need paragraph boundary detection for multi-line blocks",
					"ordered": true,
					"start": 1,
					"loose": false,
					"items": [
						{
							"type": "list_item",
							"raw": "1. Obsidian block references: `Some content ^anchor-id` (end of line)\n",
							"task": false,
							"loose": false,
							"text": "Obsidian block references: `Some content ^anchor-id` (end of line)",
							"tokens": [
								{
									"type": "text",
									"raw": "Obsidian block references: `Some content ^anchor-id` (end of line)",
									"text": "Obsidian block references: `Some content ^anchor-id` (end of line)",
									"tokens": [
										{
											"type": "text",
											"raw": "Obsidian block references: ",
											"text": "Obsidian block references: ",
											"escaped": false
										},
										{
											"type": "codespan",
											"raw": "`Some content ^anchor-id`",
											"text": "Some content ^anchor-id"
										},
										{
											"type": "text",
											"raw": " (end of line)",
											"text": " (end of line)",
											"escaped": false
										}
									]
								}
							]
						},
						{
							"type": "list_item",
							"raw": "2. Caret syntax: `^anchor-id` anywhere in line (legacy)\n",
							"task": false,
							"loose": false,
							"text": "Caret syntax: `^anchor-id` anywhere in line (legacy)",
							"tokens": [
								{
									"type": "text",
									"raw": "Caret syntax: `^anchor-id` anywhere in line (legacy)",
									"text": "Caret syntax: `^anchor-id` anywhere in line (legacy)",
									"tokens": [
										{
											"type": "text",
											"raw": "Caret syntax: ",
											"text": "Caret syntax: ",
											"escaped": false
										},
										{
											"type": "codespan",
											"raw": "`^anchor-id`",
											"text": "^anchor-id"
										},
										{
											"type": "text",
											"raw": " anywhere in line (legacy)",
											"text": " anywhere in line (legacy)",
											"escaped": false
										}
									]
								}
							]
						},
						{
							"type": "list_item",
							"raw": "3. Emphasis-marked: `==**text**==` (creates implicit anchor)\n_API Validated_: `extractBlock(content, anchors, blockId)` → `{ anchor: { anchorType, id, line, column }, content: string, lineNumber: number }`\n_Key Difference from Sections_: Blocks extract ONLY single line/paragraph (not multi-line), uses line number lookup (not token walking)\n_Production Integration Path_: ContentExtractor needs both `extractSection()` and `extractBlock()` methods to handle header vs block anchors\n_Test Coverage_: 9/9 POC tests passing (100% success rate)\n_Implementation Note_: Current POC extracts single line; production may need paragraph boundary detection for multi-line blocks",
							"task": false,
							"loose": false,
							"text": "Emphasis-marked: `==**text**==` (creates implicit anchor)\n_API Validated_: `extractBlock(content, anchors, blockId)` → `{ anchor: { anchorType, id, line, column }, content: string, lineNumber: number }`\n_Key Difference from Sections_: Blocks extract ONLY single line/paragraph (not multi-line), uses line number lookup (not token walking)\n_Production Integration Path_: ContentExtractor needs both `extractSection()` and `extractBlock()` methods to handle header vs block anchors\n_Test Coverage_: 9/9 POC tests passing (100% success rate)\n_Implementation Note_: Current POC extracts single line; production may need paragraph boundary detection for multi-line blocks",
							"tokens": [
								{
									"type": "text",
									"raw": "Emphasis-marked: `==**text**==` (creates implicit anchor)\n\n_API Validated_: `extractBlock(content, anchors, blockId)` → `{ anchor: { anchorType, id, line, column }, content: string, lineNumber: number }`\n\n_Key Difference from Sections_: Blocks extract ONLY single line/paragraph (not multi-line), uses line number lookup (not token walking)\n\n_Production Integration Path_: ContentExtractor needs both `extractSection()` and `extractBlock()` methods to handle header vs block anchors\n\n_Test Coverage_: 9/9 POC tests passing (100% success rate)\n\n_Implementation Note_: Current POC extracts single line; production may need paragraph boundary detection for multi-line blocks",
									"text": "Emphasis-marked: `==**text**==` (creates implicit anchor)\n_API Validated_: `extractBlock(content, anchors, blockId)` → `{ anchor: { anchorType, id, line, column }, content: string, lineNumber: number }`\n_Key Difference from Sections_: Blocks extract ONLY single line/paragraph (not multi-line), uses line number lookup (not token walking)\n_Production Integration Path_: ContentExtractor needs both `extractSection()` and `extractBlock()` methods to handle header vs block anchors\n_Test Coverage_: 9/9 POC tests passing (100% success rate)\n_Implementation Note_: Current POC extracts single line; production may need paragraph boundary detection for multi-line blocks",
									"tokens": [
										{
											"type": "text",
											"raw": "Emphasis-marked: ",
											"text": "Emphasis-marked: ",
											"escaped": false
										},
										{
											"type": "codespan",
											"raw": "`==**text**==`",
											"text": "==**text**=="
										},
										{
											"type": "text",
											"raw": " (creates implicit anchor)\n",
											"text": " (creates implicit anchor)\n",
											"escaped": false
										},
										{
											"type": "em",
											"raw": "_API Validated_",
											"text": "API Validated",
											"tokens": [
												{
													"type": "text",
													"raw": "API Validated",
													"text": "API Validated",
													"escaped": false
												}
											]
										},
										{
											"type": "text",
											"raw": ": ",
											"text": ": ",
											"escaped": false
										},
										{
											"type": "codespan",
											"raw": "`extractBlock(content, anchors, blockId)`",
											"text": "extractBlock(content, anchors, blockId)"
										},
										{
											"type": "text",
											"raw": " → ",
											"text": " → ",
											"escaped": false
										},
										{
											"type": "codespan",
											"raw": "`{ anchor: { anchorType, id, line, column }, content: string, lineNumber: number }`",
											"text": "{ anchor: { anchorType, id, line, column }, content: string, lineNumber: number }"
										},
										{
											"type": "text",
											"raw": "\n",
											"text": "\n",
											"escaped": false
										},
										{
											"type": "em",
											"raw": "_Key Difference from Sections_",
											"text": "Key Difference from Sections",
											"tokens": [
												{
													"type": "text",
													"raw": "Key Difference from Sections",
													"text": "Key Difference from Sections",
													"escaped": false
												}
											]
										},
										{
											"type": "text",
											"raw": ": Blocks extract ONLY single line/paragraph (not multi-line), uses line number lookup (not token walking)\n",
											"text": ": Blocks extract ONLY single line/paragraph (not multi-line), uses line number lookup (not token walking)\n",
											"escaped": false
										},
										{
											"type": "em",
											"raw": "_Production Integration Path_",
											"text": "Production Integration Path",
											"tokens": [
												{
													"type": "text",
													"raw": "Production Integration Path",
													"text": "Production Integration Path",
													"escaped": false
												}
											]
										},
										{
											"type": "text",
											"raw": ": ContentExtractor needs both ",
											"text": ": ContentExtractor needs both ",
											"escaped": false
										},
										{
											"type": "codespan",
											"raw": "`extractSection()`",
											"text": "extractSection()"
										},
										{
											"type": "text",
											"raw": " and ",
											"text": " and ",
											"escaped": false
										},
										{
											"type": "codespan",
											"raw": "`extractBlock()`",
											"text": "extractBlock()"
										},
										{
											"type": "text",
											"raw": " methods to handle header vs block anchors\n",
											"text": " methods to handle header vs block anchors\n",
											"escaped": false
										},
										{
											"type": "em",
											"raw": "_Test Coverage_",
											"text": "Test Coverage",
											"tokens": [
												{
													"type": "text",
													"raw": "Test Coverage",
													"text": "Test Coverage",
													"escaped": false
												}
											]
										},
										{
											"type": "text",
											"raw": ": 9/9 POC tests passing (100% success rate)\n",
											"text": ": 9/9 POC tests passing (100% success rate)\n",
											"escaped": false
										},
										{
											"type": "em",
											"raw": "_Implementation Note_",
											"text": "Implementation Note",
											"tokens": [
												{
													"type": "text",
													"raw": "Implementation Note",
													"text": "Implementation Note",
													"escaped": false
												}
											]
										},
										{
											"type": "text",
											"raw": ": Current POC extracts single line; production may need paragraph boundary detection for multi-line blocks",
											"text": ": Current POC extracts single line; production may need paragraph boundary detection for multi-line blocks",
											"escaped": false
										}
									]
								}
							]
						}
					]
				}
			],
			"text": "[!success] **Technical Lead Research**: Block anchor extraction POC validated ✅ (2025-10-07)\n_Research Objective_: Prove we can extract single block content by `^anchor-id` references\n_POC Location_: `tools/citation-manager/test/poc-block-extraction.test.js`\n_Key Findings_:\n- ✅ **Anchor detection works**: `MarkdownParser.extractAnchors()` correctly identifies all `^anchor-id` patterns at line endings\n- ✅ **Line-based extraction validated**: Can extract single line/paragraph using anchor's `line` number from MarkdownParser.Output.DataContract\n- ✅ **Anchor metadata accurate**: Line numbers, column positions, and IDs correctly populated in `anchors` array\n- ✅ **Multiple block types handled**: Works for paragraphs, headings, list items across different sections\n_Block Anchor Formats Supported_:\n1. Obsidian block references: `Some content ^anchor-id` (end of line)\n2. Caret syntax: `^anchor-id` anywhere in line (legacy)\n3. Emphasis-marked: `==**text**==` (creates implicit anchor)\n_API Validated_: `extractBlock(content, anchors, blockId)` → `{ anchor: { anchorType, id, line, column }, content: string, lineNumber: number }`\n_Key Difference from Sections_: Blocks extract ONLY single line/paragraph (not multi-line), uses line number lookup (not token walking)\n_Production Integration Path_: ContentExtractor needs both `extractSection()` and `extractBlock()` methods to handle header vs block anchors\n_Test Coverage_: 9/9 POC tests passing (100% success rate)\n_Implementation Note_: Current POC extracts single line; production may need paragraph boundary detection for multi-line blocks"
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "paragraph",
			"raw": "_Depends On_: Story 2.1\n_Functional Requirements_: [[#^FR5|FR5]]",
			"text": "_Depends On_: Story 2.1\n_Functional Requirements_: [[#^FR5|FR5]]",
			"tokens": [
				{
					"type": "em",
					"raw": "_Depends On_",
					"text": "Depends On",
					"tokens": [
						{
							"type": "text",
							"raw": "Depends On",
							"text": "Depends On",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": ": Story 2.1\n",
					"text": ": Story 2.1\n",
					"escaped": false
				},
				{
					"type": "em",
					"raw": "_Functional Requirements_",
					"text": "Functional Requirements",
					"tokens": [
						{
							"type": "text",
							"raw": "Functional Requirements",
							"text": "Functional Requirements",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": ": [[#^FR5|FR5]]",
					"text": ": [[#^FR5|FR5]]",
					"escaped": false
				}
			]
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "heading",
			"raw": "### Story 2.3: Add `--extract-context` Flag to `validate` Command\n\n",
			"depth": 3,
			"text": "Story 2.3: Add `--extract-context` Flag to `validate` Command",
			"tokens": [
				{
					"type": "text",
					"raw": "Story 2.3: Add ",
					"text": "Story 2.3: Add ",
					"escaped": false
				},
				{
					"type": "codespan",
					"raw": "`--extract-context`",
					"text": "--extract-context"
				},
				{
					"type": "text",
					"raw": " Flag to ",
					"text": " Flag to ",
					"escaped": false
				},
				{
					"type": "codespan",
					"raw": "`validate`",
					"text": "validate"
				},
				{
					"type": "text",
					"raw": " Command",
					"text": " Command",
					"escaped": false
				}
			]
		},
		{
			"type": "paragraph",
			"raw": "**As a** developer,\n**I want** to add an `--extract-context` flag to the existing `validate` command,\n**so that** I can generate a structured context file based on the links found in a source document.",
			"text": "**As a** developer,\n**I want** to add an `--extract-context` flag to the existing `validate` command,\n**so that** I can generate a structured context file based on the links found in a source document.",
			"tokens": [
				{
					"type": "strong",
					"raw": "**As a**",
					"text": "As a",
					"tokens": [
						{
							"type": "text",
							"raw": "As a",
							"text": "As a",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": " developer,\n",
					"text": " developer,\n",
					"escaped": false
				},
				{
					"type": "strong",
					"raw": "**I want**",
					"text": "I want",
					"tokens": [
						{
							"type": "text",
							"raw": "I want",
							"text": "I want",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": " to add an ",
					"text": " to add an ",
					"escaped": false
				},
				{
					"type": "codespan",
					"raw": "`--extract-context`",
					"text": "--extract-context"
				},
				{
					"type": "text",
					"raw": " flag to the existing ",
					"text": " flag to the existing ",
					"escaped": false
				},
				{
					"type": "codespan",
					"raw": "`validate`",
					"text": "validate"
				},
				{
					"type": "text",
					"raw": " command,\n",
					"text": " command,\n",
					"escaped": false
				},
				{
					"type": "strong",
					"raw": "**so that**",
					"text": "so that",
					"tokens": [
						{
							"type": "text",
							"raw": "so that",
							"text": "so that",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": " I can generate a structured context file based on the links found in a source document.",
					"text": " I can generate a structured context file based on the links found in a source document.",
					"escaped": false
				}
			]
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "heading",
			"raw": "#### Story 2.3 Acceptance Criteria\n",
			"depth": 4,
			"text": "Story 2.3 Acceptance Criteria",
			"tokens": [
				{
					"type": "text",
					"raw": "Story 2.3 Acceptance Criteria",
					"text": "Story 2.3 Acceptance Criteria",
					"escaped": false
				}
			]
		},
		{
			"type": "list",
			"raw": "1. GIVEN a new `--extract-context <output_file.md>` flag is added to the `validate` command, WHEN run, THEN it SHALL execute the end-to-end context aggregation process and write the result to the specified output file. ^US2-3AC1\n2. GIVEN the output file, THEN the content from each extracted source SHALL be clearly delineated by a markdown header indicating its origin file (e.g., `## File: path/to/source.md`). ^US2-3AC2\n3. IF content is extracted from a specific section, THEN the header in the output file SHALL also include the section heading (e.g., `## File: path/to/source.md#Section Heading`). ^US2-3AC3",
			"ordered": true,
			"start": 1,
			"loose": false,
			"items": [
				{
					"type": "list_item",
					"raw": "1. GIVEN a new `--extract-context <output_file.md>` flag is added to the `validate` command, WHEN run, THEN it SHALL execute the end-to-end context aggregation process and write the result to the specified output file. ^US2-3AC1\n",
					"task": false,
					"loose": false,
					"text": "GIVEN a new `--extract-context <output_file.md>` flag is added to the `validate` command, WHEN run, THEN it SHALL execute the end-to-end context aggregation process and write the result to the specified output file. ^US2-3AC1",
					"tokens": [
						{
							"type": "text",
							"raw": "GIVEN a new `--extract-context <output_file.md>` flag is added to the `validate` command, WHEN run, THEN it SHALL execute the end-to-end context aggregation process and write the result to the specified output file. ^US2-3AC1",
							"text": "GIVEN a new `--extract-context <output_file.md>` flag is added to the `validate` command, WHEN run, THEN it SHALL execute the end-to-end context aggregation process and write the result to the specified output file. ^US2-3AC1",
							"tokens": [
								{
									"type": "text",
									"raw": "GIVEN a new ",
									"text": "GIVEN a new ",
									"escaped": false
								},
								{
									"type": "codespan",
									"raw": "`--extract-context <output_file.md>`",
									"text": "--extract-context <output_file.md>"
								},
								{
									"type": "text",
									"raw": " flag is added to the ",
									"text": " flag is added to the ",
									"escaped": false
								},
								{
									"type": "codespan",
									"raw": "`validate`",
									"text": "validate"
								},
								{
									"type": "text",
									"raw": " command, WHEN run, THEN it SHALL execute the end-to-end context aggregation process and write the result to the specified output file. ^US2-3AC1",
									"text": " command, WHEN run, THEN it SHALL execute the end-to-end context aggregation process and write the result to the specified output file. ^US2-3AC1",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "2. GIVEN the output file, THEN the content from each extracted source SHALL be clearly delineated by a markdown header indicating its origin file (e.g., `## File: path/to/source.md`). ^US2-3AC2\n",
					"task": false,
					"loose": false,
					"text": "GIVEN the output file, THEN the content from each extracted source SHALL be clearly delineated by a markdown header indicating its origin file (e.g., `## File: path/to/source.md`). ^US2-3AC2",
					"tokens": [
						{
							"type": "text",
							"raw": "GIVEN the output file, THEN the content from each extracted source SHALL be clearly delineated by a markdown header indicating its origin file (e.g., `## File: path/to/source.md`). ^US2-3AC2",
							"text": "GIVEN the output file, THEN the content from each extracted source SHALL be clearly delineated by a markdown header indicating its origin file (e.g., `## File: path/to/source.md`). ^US2-3AC2",
							"tokens": [
								{
									"type": "text",
									"raw": "GIVEN the output file, THEN the content from each extracted source SHALL be clearly delineated by a markdown header indicating its origin file (e.g., ",
									"text": "GIVEN the output file, THEN the content from each extracted source SHALL be clearly delineated by a markdown header indicating its origin file (e.g., ",
									"escaped": false
								},
								{
									"type": "codespan",
									"raw": "`## File: path/to/source.md`",
									"text": "## File: path/to/source.md"
								},
								{
									"type": "text",
									"raw": "). ^US2-3AC2",
									"text": "). ^US2-3AC2",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "3. IF content is extracted from a specific section, THEN the header in the output file SHALL also include the section heading (e.g., `## File: path/to/source.md#Section Heading`). ^US2-3AC3",
					"task": false,
					"loose": false,
					"text": "IF content is extracted from a specific section, THEN the header in the output file SHALL also include the section heading (e.g., `## File: path/to/source.md#Section Heading`). ^US2-3AC3",
					"tokens": [
						{
							"type": "text",
							"raw": "IF content is extracted from a specific section, THEN the header in the output file SHALL also include the section heading (e.g., `## File: path/to/source.md#Section Heading`). ^US2-3AC3",
							"text": "IF content is extracted from a specific section, THEN the header in the output file SHALL also include the section heading (e.g., `## File: path/to/source.md#Section Heading`). ^US2-3AC3",
							"tokens": [
								{
									"type": "text",
									"raw": "IF content is extracted from a specific section, THEN the header in the output file SHALL also include the section heading (e.g., ",
									"text": "IF content is extracted from a specific section, THEN the header in the output file SHALL also include the section heading (e.g., ",
									"escaped": false
								},
								{
									"type": "codespan",
									"raw": "`## File: path/to/source.md#Section Heading`",
									"text": "## File: path/to/source.md#Section Heading"
								},
								{
									"type": "text",
									"raw": "). ^US2-3AC3",
									"text": "). ^US2-3AC3",
									"escaped": false
								}
							]
						}
					]
				}
			]
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "blockquote",
			"raw": "> [!warning] **Technical Lead Feedback**: Research & Design CLI feature flag/command pattern\n> _Architecture Impact_: Research and a design decision are needed to confirm if adding a feature flag to the `validate` command is the correct long-term CLI interface, or if a new, dedicated `extract` command would be more intuitive and extensible.\n> _Relevant Architecture Principles_: [simplicity-first](../../../../../design-docs/Architecture%20Principles.md#^simplicity-first), [follow-conventions](../../../../../design-docs/Architecture%20Principles.md#^follow-conventions), [immediate-understanding](../../../../../design-docs/Architecture%20Principles.md#^immediate-understanding), [extension-over-modification](../../../../../design-docs/Architecture%20Principles.md#^extension-over-modification)",
			"tokens": [
				{
					"type": "paragraph",
					"raw": "[!warning] **Technical Lead Feedback**: Research & Design CLI feature flag/command pattern\n_Architecture Impact_: Research and a design decision are needed to confirm if adding a feature flag to the `validate` command is the correct long-term CLI interface, or if a new, dedicated `extract` command would be more intuitive and extensible.\n_Relevant Architecture Principles_: [simplicity-first](../../../../../design-docs/Architecture%20Principles.md#^simplicity-first), [follow-conventions](../../../../../design-docs/Architecture%20Principles.md#^follow-conventions), [immediate-understanding](../../../../../design-docs/Architecture%20Principles.md#^immediate-understanding), [extension-over-modification](../../../../../design-docs/Architecture%20Principles.md#^extension-over-modification)",
					"text": "[!warning] **Technical Lead Feedback**: Research & Design CLI feature flag/command pattern\n_Architecture Impact_: Research and a design decision are needed to confirm if adding a feature flag to the `validate` command is the correct long-term CLI interface, or if a new, dedicated `extract` command would be more intuitive and extensible.\n_Relevant Architecture Principles_: [simplicity-first](../../../../../design-docs/Architecture%20Principles.md#^simplicity-first), [follow-conventions](../../../../../design-docs/Architecture%20Principles.md#^follow-conventions), [immediate-understanding](../../../../../design-docs/Architecture%20Principles.md#^immediate-understanding), [extension-over-modification](../../../../../design-docs/Architecture%20Principles.md#^extension-over-modification)",
					"tokens": [
						{
							"type": "text",
							"raw": "[!warning] ",
							"text": "[!warning] "
						},
						{
							"type": "strong",
							"raw": "**Technical Lead Feedback**",
							"text": "Technical Lead Feedback",
							"tokens": [
								{
									"type": "text",
									"raw": "Technical Lead Feedback",
									"text": "Technical Lead Feedback",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ": Research & Design CLI feature flag/command pattern\n",
							"text": ": Research & Design CLI feature flag/command pattern\n",
							"escaped": false
						},
						{
							"type": "em",
							"raw": "_Architecture Impact_",
							"text": "Architecture Impact",
							"tokens": [
								{
									"type": "text",
									"raw": "Architecture Impact",
									"text": "Architecture Impact",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ": Research and a design decision are needed to confirm if adding a feature flag to the ",
							"text": ": Research and a design decision are needed to confirm if adding a feature flag to the ",
							"escaped": false
						},
						{
							"type": "codespan",
							"raw": "`validate`",
							"text": "validate"
						},
						{
							"type": "text",
							"raw": " command is the correct long-term CLI interface, or if a new, dedicated ",
							"text": " command is the correct long-term CLI interface, or if a new, dedicated ",
							"escaped": false
						},
						{
							"type": "codespan",
							"raw": "`extract`",
							"text": "extract"
						},
						{
							"type": "text",
							"raw": " command would be more intuitive and extensible.\n",
							"text": " command would be more intuitive and extensible.\n",
							"escaped": false
						},
						{
							"type": "em",
							"raw": "_Relevant Architecture Principles_",
							"text": "Relevant Architecture Principles",
							"tokens": [
								{
									"type": "text",
									"raw": "Relevant Architecture Principles",
									"text": "Relevant Architecture Principles",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ": ",
							"text": ": ",
							"escaped": false
						},
						{
							"type": "link",
							"raw": "[simplicity-first](../../../../../design-docs/Architecture%20Principles.md#^simplicity-first)",
							"href": "../../../../../design-docs/Architecture%20Principles.md#^simplicity-first",
							"title": null,
							"text": "simplicity-first",
							"tokens": [
								{
									"type": "text",
									"raw": "simplicity-first",
									"text": "simplicity-first",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ", ",
							"text": ", ",
							"escaped": false
						},
						{
							"type": "link",
							"raw": "[follow-conventions](../../../../../design-docs/Architecture%20Principles.md#^follow-conventions)",
							"href": "../../../../../design-docs/Architecture%20Principles.md#^follow-conventions",
							"title": null,
							"text": "follow-conventions",
							"tokens": [
								{
									"type": "text",
									"raw": "follow-conventions",
									"text": "follow-conventions",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ", ",
							"text": ", ",
							"escaped": false
						},
						{
							"type": "link",
							"raw": "[immediate-understanding](../../../../../design-docs/Architecture%20Principles.md#^immediate-understanding)",
							"href": "../../../../../design-docs/Architecture%20Principles.md#^immediate-understanding",
							"title": null,
							"text": "immediate-understanding",
							"tokens": [
								{
									"type": "text",
									"raw": "immediate-understanding",
									"text": "immediate-understanding",
									"escaped": false
								}
							]
						},
						{
							"type": "text",
							"raw": ", ",
							"text": ", ",
							"escaped": false
						},
						{
							"type": "link",
							"raw": "[extension-over-modification](../../../../../design-docs/Architecture%20Principles.md#^extension-over-modification)",
							"href": "../../../../../design-docs/Architecture%20Principles.md#^extension-over-modification",
							"title": null,
							"text": "extension-over-modification",
							"tokens": [
								{
									"type": "text",
									"raw": "extension-over-modification",
									"text": "extension-over-modification",
									"escaped": false
								}
							]
						}
					]
				}
			],
			"text": "[!warning] **Technical Lead Feedback**: Research & Design CLI feature flag/command pattern\n_Architecture Impact_: Research and a design decision are needed to confirm if adding a feature flag to the `validate` command is the correct long-term CLI interface, or if a new, dedicated `extract` command would be more intuitive and extensible.\n_Relevant Architecture Principles_: [simplicity-first](../../../../../design-docs/Architecture%20Principles.md#^simplicity-first), [follow-conventions](../../../../../design-docs/Architecture%20Principles.md#^follow-conventions), [immediate-understanding](../../../../../design-docs/Architecture%20Principles.md#^immediate-understanding), [extension-over-modification](../../../../../design-docs/Architecture%20Principles.md#^extension-over-modification)"
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "paragraph",
			"raw": "_Depends On_: Story 2.2\n_Functional Requirements_: [[#^FR6|FR6]], [[#^FR7|FR7]]",
			"text": "_Depends On_: Story 2.2\n_Functional Requirements_: [[#^FR6|FR6]], [[#^FR7|FR7]]",
			"tokens": [
				{
					"type": "em",
					"raw": "_Depends On_",
					"text": "Depends On",
					"tokens": [
						{
							"type": "text",
							"raw": "Depends On",
							"text": "Depends On",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": ": Story 2.2\n",
					"text": ": Story 2.2\n",
					"escaped": false
				},
				{
					"type": "em",
					"raw": "_Functional Requirements_",
					"text": "Functional Requirements",
					"tokens": [
						{
							"type": "text",
							"raw": "Functional Requirements",
							"text": "Functional Requirements",
							"escaped": false
						}
					]
				},
				{
					"type": "text",
					"raw": ": [[#^FR6|FR6]], [[#^FR7|FR7]]",
					"text": ": [[#^FR6|FR6]], [[#^FR7|FR7]]",
					"escaped": false
				}
			]
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "hr",
			"raw": "---"
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "heading",
			"raw": "## Feature Validation Approach\n\n",
			"depth": 2,
			"text": "Feature Validation Approach",
			"tokens": [
				{
					"type": "text",
					"raw": "Feature Validation Approach",
					"text": "Feature Validation Approach",
					"escaped": false
				}
			]
		},
		{
			"type": "paragraph",
			"raw": "The feature will be validated through:",
			"text": "The feature will be validated through:",
			"tokens": [
				{
					"type": "text",
					"raw": "The feature will be validated through:",
					"text": "The feature will be validated through:",
					"escaped": false
				}
			]
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "list",
			"raw": "- **Test Migration Success**: All existing citation-manager tests pass without regressions in the workspace environment (US 1.4)\n- **Content Extraction Functionality**: The `--extract-context` command successfully generates structured output files containing full content from both file-level and section-level links (US 2.1-2.3)\n- **Quality Standards**: New functionality meets the 50% code coverage requirement with integration tests using real file operations",
			"ordered": false,
			"start": "",
			"loose": false,
			"items": [
				{
					"type": "list_item",
					"raw": "- **Test Migration Success**: All existing citation-manager tests pass without regressions in the workspace environment (US 1.4)\n",
					"task": false,
					"loose": false,
					"text": "**Test Migration Success**: All existing citation-manager tests pass without regressions in the workspace environment (US 1.4)",
					"tokens": [
						{
							"type": "text",
							"raw": "**Test Migration Success**: All existing citation-manager tests pass without regressions in the workspace environment (US 1.4)",
							"text": "**Test Migration Success**: All existing citation-manager tests pass without regressions in the workspace environment (US 1.4)",
							"tokens": [
								{
									"type": "strong",
									"raw": "**Test Migration Success**",
									"text": "Test Migration Success",
									"tokens": [
										{
											"type": "text",
											"raw": "Test Migration Success",
											"text": "Test Migration Success",
											"escaped": false
										}
									]
								},
								{
									"type": "text",
									"raw": ": All existing citation-manager tests pass without regressions in the workspace environment (US 1.4)",
									"text": ": All existing citation-manager tests pass without regressions in the workspace environment (US 1.4)",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "- **Content Extraction Functionality**: The `--extract-context` command successfully generates structured output files containing full content from both file-level and section-level links (US 2.1-2.3)\n",
					"task": false,
					"loose": false,
					"text": "**Content Extraction Functionality**: The `--extract-context` command successfully generates structured output files containing full content from both file-level and section-level links (US 2.1-2.3)",
					"tokens": [
						{
							"type": "text",
							"raw": "**Content Extraction Functionality**: The `--extract-context` command successfully generates structured output files containing full content from both file-level and section-level links (US 2.1-2.3)",
							"text": "**Content Extraction Functionality**: The `--extract-context` command successfully generates structured output files containing full content from both file-level and section-level links (US 2.1-2.3)",
							"tokens": [
								{
									"type": "strong",
									"raw": "**Content Extraction Functionality**",
									"text": "Content Extraction Functionality",
									"tokens": [
										{
											"type": "text",
											"raw": "Content Extraction Functionality",
											"text": "Content Extraction Functionality",
											"escaped": false
										}
									]
								},
								{
									"type": "text",
									"raw": ": The ",
									"text": ": The ",
									"escaped": false
								},
								{
									"type": "codespan",
									"raw": "`--extract-context`",
									"text": "--extract-context"
								},
								{
									"type": "text",
									"raw": " command successfully generates structured output files containing full content from both file-level and section-level links (US 2.1-2.3)",
									"text": " command successfully generates structured output files containing full content from both file-level and section-level links (US 2.1-2.3)",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "- **Quality Standards**: New functionality meets the 50% code coverage requirement with integration tests using real file operations",
					"task": false,
					"loose": false,
					"text": "**Quality Standards**: New functionality meets the 50% code coverage requirement with integration tests using real file operations",
					"tokens": [
						{
							"type": "text",
							"raw": "**Quality Standards**: New functionality meets the 50% code coverage requirement with integration tests using real file operations",
							"text": "**Quality Standards**: New functionality meets the 50% code coverage requirement with integration tests using real file operations",
							"tokens": [
								{
									"type": "strong",
									"raw": "**Quality Standards**",
									"text": "Quality Standards",
									"tokens": [
										{
											"type": "text",
											"raw": "Quality Standards",
											"text": "Quality Standards",
											"escaped": false
										}
									]
								},
								{
									"type": "text",
									"raw": ": New functionality meets the 50% code coverage requirement with integration tests using real file operations",
									"text": ": New functionality meets the 50% code coverage requirement with integration tests using real file operations",
									"escaped": false
								}
							]
						}
					]
				}
			]
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "hr",
			"raw": "---"
		},
		{
			"type": "space",
			"raw": "\n\n"
		},
		{
			"type": "heading",
			"raw": "## Related Documentation\n\n",
			"depth": 2,
			"text": "Related Documentation",
			"tokens": [
				{
					"type": "text",
					"raw": "Related Documentation",
					"text": "Related Documentation",
					"escaped": false
				}
			]
		},
		{
			"type": "list",
			"raw": "- [Content Aggregation Architecture](content-aggregation-architecture.md) - Feature-specific architectural enhancements\n- [Workspace PRD](../../../../../design-docs/features/20250928-cc-workflows-workspace-scaffolding/cc-workflows-workspace-prd.md) - Parent workspace requirements\n- [Workspace Architecture](../../../../../design-docs/features/20250928-cc-workflows-workspace-scaffolding/cc-workflows-workspace-architecture.md) - Workspace architectural context\n",
			"ordered": false,
			"start": "",
			"loose": false,
			"items": [
				{
					"type": "list_item",
					"raw": "- [Content Aggregation Architecture](content-aggregation-architecture.md) - Feature-specific architectural enhancements\n",
					"task": false,
					"loose": false,
					"text": "[Content Aggregation Architecture](content-aggregation-architecture.md) - Feature-specific architectural enhancements",
					"tokens": [
						{
							"type": "text",
							"raw": "[Content Aggregation Architecture](content-aggregation-architecture.md) - Feature-specific architectural enhancements",
							"text": "[Content Aggregation Architecture](content-aggregation-architecture.md) - Feature-specific architectural enhancements",
							"tokens": [
								{
									"type": "link",
									"raw": "[Content Aggregation Architecture](content-aggregation-architecture.md)",
									"href": "content-aggregation-architecture.md",
									"title": null,
									"text": "Content Aggregation Architecture",
									"tokens": [
										{
											"type": "text",
											"raw": "Content Aggregation Architecture",
											"text": "Content Aggregation Architecture",
											"escaped": false
										}
									]
								},
								{
									"type": "text",
									"raw": " - Feature-specific architectural enhancements",
									"text": " - Feature-specific architectural enhancements",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "- [Workspace PRD](../../../../../design-docs/features/20250928-cc-workflows-workspace-scaffolding/cc-workflows-workspace-prd.md) - Parent workspace requirements\n",
					"task": false,
					"loose": false,
					"text": "[Workspace PRD](../../../../../design-docs/features/20250928-cc-workflows-workspace-scaffolding/cc-workflows-workspace-prd.md) - Parent workspace requirements",
					"tokens": [
						{
							"type": "text",
							"raw": "[Workspace PRD](../../../../../design-docs/features/20250928-cc-workflows-workspace-scaffolding/cc-workflows-workspace-prd.md) - Parent workspace requirements",
							"text": "[Workspace PRD](../../../../../design-docs/features/20250928-cc-workflows-workspace-scaffolding/cc-workflows-workspace-prd.md) - Parent workspace requirements",
							"tokens": [
								{
									"type": "link",
									"raw": "[Workspace PRD](../../../../../design-docs/features/20250928-cc-workflows-workspace-scaffolding/cc-workflows-workspace-prd.md)",
									"href": "../../../../../design-docs/features/20250928-cc-workflows-workspace-scaffolding/cc-workflows-workspace-prd.md",
									"title": null,
									"text": "Workspace PRD",
									"tokens": [
										{
											"type": "text",
											"raw": "Workspace PRD",
											"text": "Workspace PRD",
											"escaped": false
										}
									]
								},
								{
									"type": "text",
									"raw": " - Parent workspace requirements",
									"text": " - Parent workspace requirements",
									"escaped": false
								}
							]
						}
					]
				},
				{
					"type": "list_item",
					"raw": "- [Workspace Architecture](../../../../../design-docs/features/20250928-cc-workflows-workspace-scaffolding/cc-workflows-workspace-architecture.md) - Workspace architectural context",
					"task": false,
					"loose": false,
					"text": "[Workspace Architecture](../../../../../design-docs/features/20250928-cc-workflows-workspace-scaffolding/cc-workflows-workspace-architecture.md) - Workspace architectural context",
					"tokens": [
						{
							"type": "text",
							"raw": "[Workspace Architecture](../../../../../design-docs/features/20250928-cc-workflows-workspace-scaffolding/cc-workflows-workspace-architecture.md) - Workspace architectural context",
							"text": "[Workspace Architecture](../../../../../design-docs/features/20250928-cc-workflows-workspace-scaffolding/cc-workflows-workspace-architecture.md) - Workspace architectural context",
							"tokens": [
								{
									"type": "link",
									"raw": "[Workspace Architecture](../../../../../design-docs/features/20250928-cc-workflows-workspace-scaffolding/cc-workflows-workspace-architecture.md)",
									"href": "../../../../../design-docs/features/20250928-cc-workflows-workspace-scaffolding/cc-workflows-workspace-architecture.md",
									"title": null,
									"text": "Workspace Architecture",
									"tokens": [
										{
											"type": "text",
											"raw": "Workspace Architecture",
											"text": "Workspace Architecture",
											"escaped": false
										}
									]
								},
								{
									"type": "text",
									"raw": " - Workspace architectural context",
									"text": " - Workspace architectural context",
									"escaped": false
								}
							]
						}
					]
				}
			]
		}
	],
	"links": [
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "blocks"
			},
			"text": null,
			"fullMatch": "^blocks",
			"line": 14,
			"column": 84
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "FR2"
			},
			"text": null,
			"fullMatch": "^FR2",
			"line": 64,
			"column": 103
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "FR4"
			},
			"text": null,
			"fullMatch": "^FR4",
			"line": 65,
			"column": 233
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "FR5"
			},
			"text": null,
			"fullMatch": "^FR5",
			"line": 66,
			"column": 316
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "FR6"
			},
			"text": null,
			"fullMatch": "^FR6",
			"line": 67,
			"column": 268
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "FR7"
			},
			"text": null,
			"fullMatch": "^FR7",
			"line": 68,
			"column": 168
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "FR8"
			},
			"text": null,
			"fullMatch": "^FR8",
			"line": 69,
			"column": 128
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "FR9"
			},
			"text": null,
			"fullMatch": "^FR9",
			"line": 70,
			"column": 123
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "NFR3"
			},
			"text": null,
			"fullMatch": "^NFR3",
			"line": 73,
			"column": 133
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "NFR4"
			},
			"text": null,
			"fullMatch": "^NFR4",
			"line": 74,
			"column": 121
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "NFR5"
			},
			"text": null,
			"fullMatch": "^NFR5",
			"line": 75,
			"column": 147
		},
		{
			"linkType": "markdown",
			"scope": "cross-document",
			"anchorType": "header",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": "user-stories/us1.5-implement-cache-for-parsed-files/us1.5-implement-cache-for-parsed-files.md",
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/user-stories/us1.5-implement-cache-for-parsed-files/us1.5-implement-cache-for-parsed-files.md",
					"relative": "user-stories/us1.5-implement-cache-for-parsed-files/us1.5-implement-cache-for-parsed-files.md"
				},
				"anchor": "Phase%201%20Parser%20Output%20Contract%20Validation%20&%20Documentation"
			},
			"text": "US1.5 Phase 1",
			"fullMatch": "[US1.5 Phase 1](user-stories/us1.5-implement-cache-for-parsed-files/us1.5-implement-cache-for-parsed-files.md#Phase%201%20Parser%20Output%20Contract%20Validation%20&%20Documentation)",
			"line": 80,
			"column": 75
		},
		{
			"linkType": "markdown",
			"scope": "cross-document",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": "../../../../../design-docs/Architecture%20Principles.md",
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/design-docs/Architecture%20Principles.md",
					"relative": "../../../../../design-docs/Architecture%20Principles.md"
				},
				"anchor": "^black-box-interfaces"
			},
			"text": "black-box-interfaces",
			"fullMatch": "[black-box-interfaces](../../../../../design-docs/Architecture%20Principles.md#^black-box-interfaces)",
			"line": 87,
			"column": 38
		},
		{
			"linkType": "markdown",
			"scope": "cross-document",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": "../../../../../design-docs/Architecture%20Principles.md",
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/design-docs/Architecture%20Principles.md",
					"relative": "../../../../../design-docs/Architecture%20Principles.md"
				},
				"anchor": "^data-model-first"
			},
			"text": "data-model-first",
			"fullMatch": "[data-model-first](../../../../../design-docs/Architecture%20Principles.md#^data-model-first)",
			"line": 87,
			"column": 141
		},
		{
			"linkType": "markdown",
			"scope": "cross-document",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": "../../../../../design-docs/Architecture%20Principles.md",
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/design-docs/Architecture%20Principles.md",
					"relative": "../../../../../design-docs/Architecture%20Principles.md"
				},
				"anchor": "^single-responsibility"
			},
			"text": "single-responsibility",
			"fullMatch": "[single-responsibility](../../../../../design-docs/Architecture%20Principles.md#^single-responsibility)",
			"line": 87,
			"column": 236
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "black-box-interfaces"
			},
			"text": null,
			"fullMatch": "^black-box-interfaces",
			"line": 87,
			"column": 117
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "data-model-first"
			},
			"text": null,
			"fullMatch": "^data-model-first",
			"line": 87,
			"column": 216
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "single-responsibility"
			},
			"text": null,
			"fullMatch": "^single-responsibility",
			"line": 87,
			"column": 316
		},
		{
			"linkType": "markdown",
			"scope": "cross-document",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": "../../../../../design-docs/Architecture%20Principles.md",
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/design-docs/Architecture%20Principles.md",
					"relative": "../../../../../design-docs/Architecture%20Principles.md"
				},
				"anchor": "^simplicity-first"
			},
			"text": "simplicity-first",
			"fullMatch": "[simplicity-first](../../../../../design-docs/Architecture%20Principles.md#^simplicity-first)",
			"line": 92,
			"column": 38
		},
		{
			"linkType": "markdown",
			"scope": "cross-document",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": "../../../../../design-docs/Architecture%20Principles.md",
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/design-docs/Architecture%20Principles.md",
					"relative": "../../../../../design-docs/Architecture%20Principles.md"
				},
				"anchor": "^follow-conventions"
			},
			"text": "follow-conventions",
			"fullMatch": "[follow-conventions](../../../../../design-docs/Architecture%20Principles.md#^follow-conventions)",
			"line": 92,
			"column": 133
		},
		{
			"linkType": "markdown",
			"scope": "cross-document",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": "../../../../../design-docs/Architecture%20Principles.md",
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/design-docs/Architecture%20Principles.md",
					"relative": "../../../../../design-docs/Architecture%20Principles.md"
				},
				"anchor": "^immediate-understanding"
			},
			"text": "immediate-understanding",
			"fullMatch": "[immediate-understanding](../../../../../design-docs/Architecture%20Principles.md#^immediate-understanding)",
			"line": 92,
			"column": 232
		},
		{
			"linkType": "markdown",
			"scope": "cross-document",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": "../../../../../design-docs/Architecture%20Principles.md",
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/design-docs/Architecture%20Principles.md",
					"relative": "../../../../../design-docs/Architecture%20Principles.md"
				},
				"anchor": "^extension-over-modification"
			},
			"text": "extension-over-modification",
			"fullMatch": "[extension-over-modification](../../../../../design-docs/Architecture%20Principles.md#^extension-over-modification)",
			"line": 92,
			"column": 341
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "simplicity-first"
			},
			"text": null,
			"fullMatch": "^simplicity-first",
			"line": 92,
			"column": 113
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "follow-conventions"
			},
			"text": null,
			"fullMatch": "^follow-conventions",
			"line": 92,
			"column": 210
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "immediate-understanding"
			},
			"text": null,
			"fullMatch": "^immediate-understanding",
			"line": 92,
			"column": 314
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "extension-over-modification"
			},
			"text": null,
			"fullMatch": "^extension-over-modification",
			"line": 92,
			"column": 427
		},
		{
			"linkType": "markdown",
			"scope": "cross-document",
			"anchorType": "header",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": "content-aggregation-architecture.md",
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-architecture.md",
					"relative": "content-aggregation-architecture.md"
				},
				"anchor": "ADR-001%20Phased%20Test%20Migration%20Strategy"
			},
			"text": "ADR-001: Phased Test Migration Strategy",
			"fullMatch": "[ADR-001: Phased Test Migration Strategy](content-aggregation-architecture.md#ADR-001%20Phased%20Test%20Migration%20Strategy)",
			"line": 117,
			"column": 6
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "US1-4aAC1"
			},
			"text": null,
			"fullMatch": "^US1-4aAC1",
			"line": 129,
			"column": 157
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "US1-4aAC2"
			},
			"text": null,
			"fullMatch": "^US1-4aAC2",
			"line": 130,
			"column": 155
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "US1-4aAC3"
			},
			"text": null,
			"fullMatch": "^US1-4aAC3",
			"line": 131,
			"column": 153
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "US1-4aAC4"
			},
			"text": null,
			"fullMatch": "^US1-4aAC4",
			"line": 132,
			"column": 152
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "US1-4aAC5"
			},
			"text": null,
			"fullMatch": "^US1-4aAC5",
			"line": 133,
			"column": 152
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "US1-4aAC6"
			},
			"text": null,
			"fullMatch": "^US1-4aAC6",
			"line": 134,
			"column": 165
		},
		{
			"linkType": "markdown",
			"scope": "cross-document",
			"anchorType": "header",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": "content-aggregation-architecture.md",
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-architecture.md",
					"relative": "content-aggregation-architecture.md"
				},
				"anchor": "ADR-001%20Phased%20Test%20Migration%20Strategy"
			},
			"text": "ADR-001: Phased Test Migration Strategy",
			"fullMatch": "[ADR-001: Phased Test Migration Strategy](content-aggregation-architecture.md#ADR-001%20Phased%20Test%20Migration%20Strategy)",
			"line": 136,
			"column": 250
		},
		{
			"linkType": "markdown",
			"scope": "cross-document",
			"anchorType": null,
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": "../../../../../design-docs/features/20250928-cc-workflows-workspace-scaffolding/user-stories/us1.3-make-migrated-citation-manager-executable/us1.3-make-migrated-citation-manager-executable.md",
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/design-docs/features/20250928-cc-workflows-workspace-scaffolding/user-stories/us1.3-make-migrated-citation-manager-executable/us1.3-make-migrated-citation-manager-executable.md",
					"relative": "../../../../../design-docs/features/20250928-cc-workflows-workspace-scaffolding/user-stories/us1.3-make-migrated-citation-manager-executable/us1.3-make-migrated-citation-manager-executable.md"
				},
				"anchor": null
			},
			"text": "US1.3: Make Migrated citation-manager Executable",
			"fullMatch": "[US1.3: Make Migrated citation-manager Executable](../../../../../design-docs/features/20250928-cc-workflows-workspace-scaffolding/user-stories/us1.3-make-migrated-citation-manager-executable/us1.3-make-migrated-citation-manager-executable.md)",
			"line": 138,
			"column": 14
		},
		{
			"linkType": "wiki",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "^FR2"
			},
			"text": "FR2",
			"fullMatch": "[[#^FR2|FR2]]",
			"line": 139,
			"column": 27
		},
		{
			"linkType": "wiki",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "^FR9"
			},
			"text": "FR9",
			"fullMatch": "[[#^FR9|FR9]]",
			"line": 139,
			"column": 42
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "FR2"
			},
			"text": null,
			"fullMatch": "^FR2",
			"line": 139,
			"column": 30
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "FR9"
			},
			"text": null,
			"fullMatch": "^FR9",
			"line": 139,
			"column": 45
		},
		{
			"linkType": "markdown",
			"scope": "cross-document",
			"anchorType": null,
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": "user-stories/us1.4a-migrate-test-suite-to-vitest/us1.4a-migrate-test-suite-to-vitest.md",
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/user-stories/us1.4a-migrate-test-suite-to-vitest/us1.4a-migrate-test-suite-to-vitest.md",
					"relative": "user-stories/us1.4a-migrate-test-suite-to-vitest/us1.4a-migrate-test-suite-to-vitest.md"
				},
				"anchor": null
			},
			"text": "us1.4a-migrate-test-suite-to-vitest",
			"fullMatch": "[us1.4a-migrate-test-suite-to-vitest](user-stories/us1.4a-migrate-test-suite-to-vitest/us1.4a-migrate-test-suite-to-vitest.md)",
			"line": 140,
			"column": 19
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "US1-4bAC1"
			},
			"text": null,
			"fullMatch": "^US1-4bAC1",
			"line": 152,
			"column": 162
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "US1-4bAC2"
			},
			"text": null,
			"fullMatch": "^US1-4bAC2",
			"line": 153,
			"column": 162
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "US1-4bAC3"
			},
			"text": null,
			"fullMatch": "^US1-4bAC3",
			"line": 154,
			"column": 127
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "US1-4bAC4"
			},
			"text": null,
			"fullMatch": "^US1-4bAC4",
			"line": 155,
			"column": 194
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "US1-4bAC5"
			},
			"text": null,
			"fullMatch": "^US1-4bAC5",
			"line": 156,
			"column": 234
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "US1-4bAC6"
			},
			"text": null,
			"fullMatch": "^US1-4bAC6",
			"line": 157,
			"column": 187
		},
		{
			"linkType": "markdown",
			"scope": "cross-document",
			"anchorType": "header",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": "content-aggregation-architecture.md",
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-architecture.md",
					"relative": "content-aggregation-architecture.md"
				},
				"anchor": "Lack%20of%20Dependency%20Injection"
			},
			"text": "Lack of Dependency Injection",
			"fullMatch": "[Lack of Dependency Injection](content-aggregation-architecture.md#Lack%20of%20Dependency%20Injection)",
			"line": 161,
			"column": 25
		},
		{
			"linkType": "wiki",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "^FR2"
			},
			"text": "FR2",
			"fullMatch": "[[#^FR2|FR2]]",
			"line": 162,
			"column": 27
		},
		{
			"linkType": "wiki",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "^FR8"
			},
			"text": "FR8",
			"fullMatch": "[[#^FR8|FR8]]",
			"line": 162,
			"column": 42
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "FR2"
			},
			"text": null,
			"fullMatch": "^FR2",
			"line": 162,
			"column": 30
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "FR8"
			},
			"text": null,
			"fullMatch": "^FR8",
			"line": 162,
			"column": 45
		},
		{
			"linkType": "markdown",
			"scope": "cross-document",
			"anchorType": null,
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": "user-stories/us1.4b-refactor-components-for-di/us1.4b-refactor-components-for-di.md",
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/user-stories/us1.4b-refactor-components-for-di/us1.4b-refactor-components-for-di.md",
					"relative": "user-stories/us1.4b-refactor-components-for-di/us1.4b-refactor-components-for-di.md"
				},
				"anchor": null
			},
			"text": "us1.4b-refactor-components-for-di",
			"fullMatch": "[us1.4b-refactor-components-for-di](user-stories/us1.4b-refactor-components-for-di/us1.4b-refactor-components-for-di.md)",
			"line": 163,
			"column": 19
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "US1-5AC1"
			},
			"text": null,
			"fullMatch": "^US1-5AC1",
			"line": 174,
			"column": 257
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "US1-5AC2"
			},
			"text": null,
			"fullMatch": "^US1-5AC2",
			"line": 175,
			"column": 219
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "US1-5AC3"
			},
			"text": null,
			"fullMatch": "^US1-5AC3",
			"line": 176,
			"column": 116
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "US1-5AC4"
			},
			"text": null,
			"fullMatch": "^US1-5AC4",
			"line": 177,
			"column": 173
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "US1-5AC5"
			},
			"text": null,
			"fullMatch": "^US1-5AC5",
			"line": 178,
			"column": 161
		},
		{
			"linkType": "markdown",
			"scope": "cross-document",
			"anchorType": "header",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": "content-aggregation-architecture.md",
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-architecture.md",
					"relative": "content-aggregation-architecture.md"
				},
				"anchor": "Redundant%20File%20Parsing%20During%20Validation"
			},
			"text": "Redundant File Parsing During Validation",
			"fullMatch": "[Redundant File Parsing During Validation](content-aggregation-architecture.md#Redundant%20File%20Parsing%20During%20Validation)",
			"line": 182,
			"column": 25
		},
		{
			"linkType": "wiki",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "^FR8"
			},
			"text": "FR8",
			"fullMatch": "[[#^FR8|FR8]]",
			"line": 183,
			"column": 27
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "FR8"
			},
			"text": null,
			"fullMatch": "^FR8",
			"line": 183,
			"column": 30
		},
		{
			"linkType": "wiki",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "^NFR5"
			},
			"text": "NFR5",
			"fullMatch": "[[#^NFR5|NFR5]]",
			"line": 184,
			"column": 31
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "NFR5"
			},
			"text": null,
			"fullMatch": "^NFR5",
			"line": 184,
			"column": 34
		},
		{
			"linkType": "markdown",
			"scope": "cross-document",
			"anchorType": null,
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": "user-stories/us1.5-implement-cache-for-parsed-files/us1.5-implement-cache-for-parsed-files.md",
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/user-stories/us1.5-implement-cache-for-parsed-files/us1.5-implement-cache-for-parsed-files.md",
					"relative": "user-stories/us1.5-implement-cache-for-parsed-files/us1.5-implement-cache-for-parsed-files.md"
				},
				"anchor": null
			},
			"text": "us1.5-implement-cache-for-parsed-files",
			"fullMatch": "[us1.5-implement-cache-for-parsed-files](user-stories/us1.5-implement-cache-for-parsed-files/us1.5-implement-cache-for-parsed-files.md)",
			"line": 185,
			"column": 19
		},
		{
			"linkType": "markdown",
			"scope": "cross-document",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": "../../../../../design-docs/Architecture%20Principles.md",
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/design-docs/Architecture%20Principles.md",
					"relative": "../../../../../design-docs/Architecture%20Principles.md"
				},
				"anchor": "^dependency-abstraction"
			},
			"text": "Dependency Abstraction",
			"fullMatch": "[Dependency Abstraction](../../../../../design-docs/Architecture%20Principles.md#^dependency-abstraction)",
			"line": 197,
			"column": 4
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "dependency-abstraction"
			},
			"text": null,
			"fullMatch": "^dependency-abstraction",
			"line": 197,
			"column": 85
		},
		{
			"linkType": "markdown",
			"scope": "cross-document",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": "../../../../../design-docs/Architecture%20Principles.md",
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/design-docs/Architecture%20Principles.md",
					"relative": "../../../../../design-docs/Architecture%20Principles.md"
				},
				"anchor": "^single-responsibility"
			},
			"text": "Single Responsibility",
			"fullMatch": "[Single Responsibility](../../../../../design-docs/Architecture%20Principles.md#^single-responsibility)",
			"line": 198,
			"column": 4
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "single-responsibility"
			},
			"text": null,
			"fullMatch": "^single-responsibility",
			"line": 198,
			"column": 84
		},
		{
			"linkType": "markdown",
			"scope": "cross-document",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": "../../../../../design-docs/Architecture%20Principles.md",
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/design-docs/Architecture%20Principles.md",
					"relative": "../../../../../design-docs/Architecture%20Principles.md"
				},
				"anchor": "^one-source-of-truth"
			},
			"text": "One Source of Truth",
			"fullMatch": "[One Source of Truth](../../../../../design-docs/Architecture%20Principles.md#^one-source-of-truth)",
			"line": 199,
			"column": 4
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "one-source-of-truth"
			},
			"text": null,
			"fullMatch": "^one-source-of-truth",
			"line": 199,
			"column": 82
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "US2-1AC1"
			},
			"text": null,
			"fullMatch": "^US2-1AC1",
			"line": 209,
			"column": 195
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "US2-1AC2"
			},
			"text": null,
			"fullMatch": "^US2-1AC2",
			"line": 210,
			"column": 286
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "US2-1AC3"
			},
			"text": null,
			"fullMatch": "^US2-1AC3",
			"line": 211,
			"column": 150
		},
		{
			"linkType": "markdown",
			"scope": "cross-document",
			"anchorType": "header",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": "user-stories/us1.5-implement-cache-for-parsed-files/us1.5-implement-cache-for-parsed-files.md",
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/user-stories/us1.5-implement-cache-for-parsed-files/us1.5-implement-cache-for-parsed-files.md",
					"relative": "user-stories/us1.5-implement-cache-for-parsed-files/us1.5-implement-cache-for-parsed-files.md"
				},
				"anchor": "Phase%201%20Parser%20Output%20Contract%20Validation%20&%20Documentation"
			},
			"text": "US1.5 Phase 1",
			"fullMatch": "[US1.5 Phase 1](user-stories/us1.5-implement-cache-for-parsed-files/us1.5-implement-cache-for-parsed-files.md#Phase%201%20Parser%20Output%20Contract%20Validation%20&%20Documentation)",
			"line": 214,
			"column": 60
		},
		{
			"linkType": "markdown",
			"scope": "cross-document",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": "../../../../../design-docs/Architecture%20Principles.md",
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/design-docs/Architecture%20Principles.md",
					"relative": "../../../../../design-docs/Architecture%20Principles.md"
				},
				"anchor": "^data-model-first"
			},
			"text": "data-model-first",
			"fullMatch": "[data-model-first](../../../../../design-docs/Architecture%20Principles.md#^data-model-first)",
			"line": 216,
			"column": 38
		},
		{
			"linkType": "markdown",
			"scope": "cross-document",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": "../../../../../design-docs/Architecture%20Principles.md",
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/design-docs/Architecture%20Principles.md",
					"relative": "../../../../../design-docs/Architecture%20Principles.md"
				},
				"anchor": "^primitive-first-design"
			},
			"text": "primitive-first-design",
			"fullMatch": "[primitive-first-design](../../../../../design-docs/Architecture%20Principles.md#^primitive-first-design)",
			"line": 216,
			"column": 133
		},
		{
			"linkType": "markdown",
			"scope": "cross-document",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": "../../../../../design-docs/Architecture%20Principles.md",
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/design-docs/Architecture%20Principles.md",
					"relative": "../../../../../design-docs/Architecture%20Principles.md"
				},
				"anchor": "^illegal-states-unrepresentable"
			},
			"text": "illegal-states-unrepresentable",
			"fullMatch": "[illegal-states-unrepresentable](../../../../../design-docs/Architecture%20Principles.md#^illegal-states-unrepresentable)",
			"line": 216,
			"column": 240
		},
		{
			"linkType": "markdown",
			"scope": "cross-document",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": "../../../../../design-docs/Architecture%20Principles.md",
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/design-docs/Architecture%20Principles.md",
					"relative": "../../../../../design-docs/Architecture%20Principles.md"
				},
				"anchor": "^explicit-relationships"
			},
			"text": "explicit-relationships",
			"fullMatch": "[explicit-relationships](../../../../../design-docs/Architecture%20Principles.md#^explicit-relationships)",
			"line": 216,
			"column": 363
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "data-model-first"
			},
			"text": null,
			"fullMatch": "^data-model-first",
			"line": 216,
			"column": 113
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "primitive-first-design"
			},
			"text": null,
			"fullMatch": "^primitive-first-design",
			"line": 216,
			"column": 214
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "illegal-states-unrepresentable"
			},
			"text": null,
			"fullMatch": "^illegal-states-unrepresentable",
			"line": 216,
			"column": 329
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "explicit-relationships"
			},
			"text": null,
			"fullMatch": "^explicit-relationships",
			"line": 216,
			"column": 444
		},
		{
			"linkType": "wiki",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "^FR4"
			},
			"text": "FR4",
			"fullMatch": "[[#^FR4|FR4]]",
			"line": 234,
			"column": 27
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "FR4"
			},
			"text": null,
			"fullMatch": "^FR4",
			"line": 234,
			"column": 30
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "US2-2AC1"
			},
			"text": null,
			"fullMatch": "^US2-2AC1",
			"line": 243,
			"column": 175
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "US2-2AC2"
			},
			"text": null,
			"fullMatch": "^US2-2AC2",
			"line": 244,
			"column": 137
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "US2-2AC3"
			},
			"text": null,
			"fullMatch": "^US2-2AC3",
			"line": 245,
			"column": 90
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "US2-2AC4"
			},
			"text": null,
			"fullMatch": "^US2-2AC4",
			"line": 246,
			"column": 169
		},
		{
			"linkType": "markdown",
			"scope": "cross-document",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": "../../../../../design-docs/Architecture%20Principles.md",
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/design-docs/Architecture%20Principles.md",
					"relative": "../../../../../design-docs/Architecture%20Principles.md"
				},
				"anchor": "^black-box-interfaces"
			},
			"text": "black-box-interfaces",
			"fullMatch": "[black-box-interfaces](../../../../../design-docs/Architecture%20Principles.md#^black-box-interfaces)",
			"line": 250,
			"column": 38
		},
		{
			"linkType": "markdown",
			"scope": "cross-document",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": "../../../../../design-docs/Architecture%20Principles.md",
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/design-docs/Architecture%20Principles.md",
					"relative": "../../../../../design-docs/Architecture%20Principles.md"
				},
				"anchor": "^data-model-first"
			},
			"text": "data-model-first",
			"fullMatch": "[data-model-first](../../../../../design-docs/Architecture%20Principles.md#^data-model-first)",
			"line": 250,
			"column": 141
		},
		{
			"linkType": "markdown",
			"scope": "cross-document",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": "../../../../../design-docs/Architecture%20Principles.md",
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/design-docs/Architecture%20Principles.md",
					"relative": "../../../../../design-docs/Architecture%20Principles.md"
				},
				"anchor": "^single-responsibility"
			},
			"text": "single-responsibility",
			"fullMatch": "[single-responsibility](../../../../../design-docs/Architecture%20Principles.md#^single-responsibility)",
			"line": 250,
			"column": 236
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "black-box-interfaces"
			},
			"text": null,
			"fullMatch": "^black-box-interfaces",
			"line": 250,
			"column": 117
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "data-model-first"
			},
			"text": null,
			"fullMatch": "^data-model-first",
			"line": 250,
			"column": 216
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "single-responsibility"
			},
			"text": null,
			"fullMatch": "^single-responsibility",
			"line": 250,
			"column": 316
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "anchor-id"
			},
			"text": null,
			"fullMatch": "^anchor-id",
			"line": 279,
			"column": 70
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "anchor-id"
			},
			"text": null,
			"fullMatch": "^anchor-id",
			"line": 282,
			"column": 94
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "anchor-id"
			},
			"text": null,
			"fullMatch": "^anchor-id",
			"line": 287,
			"column": 46
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "anchor-id"
			},
			"text": null,
			"fullMatch": "^anchor-id",
			"line": 288,
			"column": 20
		},
		{
			"linkType": "wiki",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "^FR5"
			},
			"text": "FR5",
			"fullMatch": "[[#^FR5|FR5]]",
			"line": 297,
			"column": 27
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "FR5"
			},
			"text": null,
			"fullMatch": "^FR5",
			"line": 297,
			"column": 30
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "US2-3AC1"
			},
			"text": null,
			"fullMatch": "^US2-3AC1",
			"line": 306,
			"column": 219
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "US2-3AC2"
			},
			"text": null,
			"fullMatch": "^US2-3AC2",
			"line": 307,
			"column": 184
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "US2-3AC3"
			},
			"text": null,
			"fullMatch": "^US2-3AC3",
			"line": 308,
			"column": 180
		},
		{
			"linkType": "markdown",
			"scope": "cross-document",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": "../../../../../design-docs/Architecture%20Principles.md",
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/design-docs/Architecture%20Principles.md",
					"relative": "../../../../../design-docs/Architecture%20Principles.md"
				},
				"anchor": "^simplicity-first"
			},
			"text": "simplicity-first",
			"fullMatch": "[simplicity-first](../../../../../design-docs/Architecture%20Principles.md#^simplicity-first)",
			"line": 312,
			"column": 38
		},
		{
			"linkType": "markdown",
			"scope": "cross-document",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": "../../../../../design-docs/Architecture%20Principles.md",
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/design-docs/Architecture%20Principles.md",
					"relative": "../../../../../design-docs/Architecture%20Principles.md"
				},
				"anchor": "^follow-conventions"
			},
			"text": "follow-conventions",
			"fullMatch": "[follow-conventions](../../../../../design-docs/Architecture%20Principles.md#^follow-conventions)",
			"line": 312,
			"column": 133
		},
		{
			"linkType": "markdown",
			"scope": "cross-document",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": "../../../../../design-docs/Architecture%20Principles.md",
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/design-docs/Architecture%20Principles.md",
					"relative": "../../../../../design-docs/Architecture%20Principles.md"
				},
				"anchor": "^immediate-understanding"
			},
			"text": "immediate-understanding",
			"fullMatch": "[immediate-understanding](../../../../../design-docs/Architecture%20Principles.md#^immediate-understanding)",
			"line": 312,
			"column": 232
		},
		{
			"linkType": "markdown",
			"scope": "cross-document",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": "../../../../../design-docs/Architecture%20Principles.md",
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/design-docs/Architecture%20Principles.md",
					"relative": "../../../../../design-docs/Architecture%20Principles.md"
				},
				"anchor": "^extension-over-modification"
			},
			"text": "extension-over-modification",
			"fullMatch": "[extension-over-modification](../../../../../design-docs/Architecture%20Principles.md#^extension-over-modification)",
			"line": 312,
			"column": 341
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "simplicity-first"
			},
			"text": null,
			"fullMatch": "^simplicity-first",
			"line": 312,
			"column": 113
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "follow-conventions"
			},
			"text": null,
			"fullMatch": "^follow-conventions",
			"line": 312,
			"column": 210
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "immediate-understanding"
			},
			"text": null,
			"fullMatch": "^immediate-understanding",
			"line": 312,
			"column": 314
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "extension-over-modification"
			},
			"text": null,
			"fullMatch": "^extension-over-modification",
			"line": 312,
			"column": 427
		},
		{
			"linkType": "wiki",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "^FR6"
			},
			"text": "FR6",
			"fullMatch": "[[#^FR6|FR6]]",
			"line": 315,
			"column": 27
		},
		{
			"linkType": "wiki",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "^FR7"
			},
			"text": "FR7",
			"fullMatch": "[[#^FR7|FR7]]",
			"line": 315,
			"column": 42
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "FR6"
			},
			"text": null,
			"fullMatch": "^FR6",
			"line": 315,
			"column": 30
		},
		{
			"linkType": "markdown",
			"scope": "internal",
			"anchorType": "block",
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": null,
					"absolute": null,
					"relative": null
				},
				"anchor": "FR7"
			},
			"text": null,
			"fullMatch": "^FR7",
			"line": 315,
			"column": 45
		},
		{
			"linkType": "markdown",
			"scope": "cross-document",
			"anchorType": null,
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": "content-aggregation-architecture.md",
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-architecture.md",
					"relative": "content-aggregation-architecture.md"
				},
				"anchor": null
			},
			"text": "Content Aggregation Architecture",
			"fullMatch": "[Content Aggregation Architecture](content-aggregation-architecture.md)",
			"line": 331,
			"column": 2
		},
		{
			"linkType": "markdown",
			"scope": "cross-document",
			"anchorType": null,
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": "../../../../../design-docs/features/20250928-cc-workflows-workspace-scaffolding/cc-workflows-workspace-prd.md",
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/design-docs/features/20250928-cc-workflows-workspace-scaffolding/cc-workflows-workspace-prd.md",
					"relative": "../../../../../design-docs/features/20250928-cc-workflows-workspace-scaffolding/cc-workflows-workspace-prd.md"
				},
				"anchor": null
			},
			"text": "Workspace PRD",
			"fullMatch": "[Workspace PRD](../../../../../design-docs/features/20250928-cc-workflows-workspace-scaffolding/cc-workflows-workspace-prd.md)",
			"line": 332,
			"column": 2
		},
		{
			"linkType": "markdown",
			"scope": "cross-document",
			"anchorType": null,
			"source": {
				"path": {
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/tools/citation-manager/design-docs/features/20251003-content-aggregation/content-aggregation-prd.md"
				}
			},
			"target": {
				"path": {
					"raw": "../../../../../design-docs/features/20250928-cc-workflows-workspace-scaffolding/cc-workflows-workspace-architecture.md",
					"absolute": "/Users/wesleyfrederick/Documents/ObsidianVault/0_SoftwareDevelopment/cc-workflows/design-docs/features/20250928-cc-workflows-workspace-scaffolding/cc-workflows-workspace-architecture.md",
					"relative": "../../../../../design-docs/features/20250928-cc-workflows-workspace-scaffolding/cc-workflows-workspace-architecture.md"
				},
				"anchor": null
			},
			"text": "Workspace Architecture",
			"fullMatch": "[Workspace Architecture](../../../../../design-docs/features/20250928-cc-workflows-workspace-scaffolding/cc-workflows-workspace-architecture.md)",
			"line": 333,
			"column": 2
		}
	],
	"headings": [
		{
			"level": 1,
			"text": "Citation Manager - Content Aggregation Feature PRD",
			"raw": "# Citation Manager - Content Aggregation Feature PRD\n\n"
		},
		{
			"level": 2,
			"text": "Overview (tl;dr)",
			"raw": "## Overview (tl;dr)\n\n"
		},
		{
			"level": 2,
			"text": "Goals",
			"raw": "## Goals\n\n"
		},
		{
			"level": 2,
			"text": "Background Context",
			"raw": "## Background Context\n\n"
		},
		{
			"level": 2,
			"text": "Alignment with Product Vision",
			"raw": "## Alignment with Product Vision\n\n"
		},
		{
			"level": 2,
			"text": "Changelog",
			"raw": "## Changelog\n\n"
		},
		{
			"level": 2,
			"text": "Requirements",
			"raw": "## Requirements\n\n"
		},
		{
			"level": 3,
			"text": "Functional Requirements",
			"raw": "### Functional Requirements\n"
		},
		{
			"level": 3,
			"text": "Non-Functional Requirements",
			"raw": "### Non-Functional Requirements\n"
		},
		{
			"level": 2,
			"text": "Technical Considerations",
			"raw": "## Technical Considerations\n\n"
		},
		{
			"level": 2,
			"text": "Feature Epics",
			"raw": "## Feature Epics\n\n"
		},
		{
			"level": 3,
			"text": "Epic: Citation Manager Test Migration & Content Aggregation",
			"raw": "### Epic: Citation Manager Test Migration & Content Aggregation\n\n"
		},
		{
			"level": 3,
			"text": "Story 1.4: Migrate and Validate `citation-manager` Test Suite [SUPERSEDED]",
			"raw": "### Story 1.4: Migrate and Validate `citation-manager` Test Suite [SUPERSEDED]\n\n"
		},
		{
			"level": 3,
			"text": "Story 1.4a: Migrate citation-manager Test Suite to Vitest",
			"raw": "### Story 1.4a: Migrate citation-manager Test Suite to Vitest\n\n"
		},
		{
			"level": 4,
			"text": "Story 1.4a Acceptance Criteria",
			"raw": "#### Story 1.4a Acceptance Criteria\n\n"
		},
		{
			"level": 3,
			"text": "Story 1.4b: Refactor citation-manager Components for Dependency Injection",
			"raw": "### Story 1.4b: Refactor citation-manager Components for Dependency Injection\n\n"
		},
		{
			"level": 4,
			"text": "Story 1.4b Acceptance Criteria",
			"raw": "#### Story 1.4b Acceptance Criteria\n\n"
		},
		{
			"level": 3,
			"text": "Story 1.5: Implement a Cache for Parsed File Objects",
			"raw": "### Story 1.5: Implement a Cache for Parsed File Objects\n\n"
		},
		{
			"level": 4,
			"text": "Story 1.5 Acceptance Criteria",
			"raw": "#### Story 1.5 Acceptance Criteria\n\n"
		},
		{
			"level": 3,
			"text": "Story 2.1: Enhance Parser to Handle Full-File and Section Links",
			"raw": "### Story 2.1: Enhance Parser to Handle Full-File and Section Links\n\n"
		},
		{
			"level": 4,
			"text": "Story 2.1 Acceptance Criteria",
			"raw": "#### Story 2.1 Acceptance Criteria\n"
		},
		{
			"level": 3,
			"text": "Story 2.2: Implement Unified Content Extractor with Metadata",
			"raw": "### Story 2.2: Implement Unified Content Extractor with Metadata\n\n"
		},
		{
			"level": 4,
			"text": "Story 2.2 Acceptance Criteria",
			"raw": "#### Story 2.2 Acceptance Criteria\n"
		},
		{
			"level": 3,
			"text": "Story 2.3: Add `--extract-context` Flag to `validate` Command",
			"raw": "### Story 2.3: Add `--extract-context` Flag to `validate` Command\n\n"
		},
		{
			"level": 4,
			"text": "Story 2.3 Acceptance Criteria",
			"raw": "#### Story 2.3 Acceptance Criteria\n"
		},
		{
			"level": 2,
			"text": "Feature Validation Approach",
			"raw": "## Feature Validation Approach\n\n"
		},
		{
			"level": 2,
			"text": "Related Documentation",
			"raw": "## Related Documentation\n\n"
		}
	],
	"anchors": [
		{
			"anchorType": "header",
			"id": "Citation Manager - Content Aggregation Feature PRD",
			"rawText": "Citation Manager - Content Aggregation Feature PRD",
			"fullMatch": "# Citation Manager - Content Aggregation Feature PRD",
			"line": 1,
			"column": 0
		},
		{
			"anchorType": "header",
			"id": "Citation%20Manager%20-%20Content%20Aggregation%20Feature%20PRD",
			"rawText": "Citation Manager - Content Aggregation Feature PRD",
			"fullMatch": "# Citation Manager - Content Aggregation Feature PRD",
			"line": 1,
			"column": 0
		},
		{
			"anchorType": "header",
			"id": "Overview (tl;dr)",
			"rawText": "Overview (tl;dr)",
			"fullMatch": "## Overview (tl;dr)",
			"line": 6,
			"column": 0
		},
		{
			"anchorType": "header",
			"id": "Overview%20(tl;dr)",
			"rawText": "Overview (tl;dr)",
			"fullMatch": "## Overview (tl;dr)",
			"line": 6,
			"column": 0
		},
		{
			"anchorType": "block",
			"id": "blocks",
			"rawText": null,
			"fullMatch": "^blocks",
			"line": 14,
			"column": 84
		},
		{
			"anchorType": "header",
			"id": "Goals",
			"rawText": "Goals",
			"fullMatch": "## Goals",
			"line": 23,
			"column": 0
		},
		{
			"anchorType": "header",
			"id": "Background Context",
			"rawText": "Background Context",
			"fullMatch": "## Background Context",
			"line": 32,
			"column": 0
		},
		{
			"anchorType": "header",
			"id": "Background%20Context",
			"rawText": "Background Context",
			"fullMatch": "## Background Context",
			"line": 32,
			"column": 0
		},
		{
			"anchorType": "header",
			"id": "Alignment with Product Vision",
			"rawText": "Alignment with Product Vision",
			"fullMatch": "## Alignment with Product Vision",
			"line": 40,
			"column": 0
		},
		{
			"anchorType": "header",
			"id": "Alignment%20with%20Product%20Vision",
			"rawText": "Alignment with Product Vision",
			"fullMatch": "## Alignment with Product Vision",
			"line": 40,
			"column": 0
		},
		{
			"anchorType": "header",
			"id": "Changelog",
			"rawText": "Changelog",
			"fullMatch": "## Changelog",
			"line": 51,
			"column": 0
		},
		{
			"anchorType": "header",
			"id": "Requirements",
			"rawText": "Requirements",
			"fullMatch": "## Requirements",
			"line": 61,
			"column": 0
		},
		{
			"anchorType": "header",
			"id": "Functional Requirements",
			"rawText": "Functional Requirements",
			"fullMatch": "### Functional Requirements",
			"line": 63,
			"column": 0
		},
		{
			"anchorType": "header",
			"id": "Functional%20Requirements",
			"rawText": "Functional Requirements",
			"fullMatch": "### Functional Requirements",
			"line": 63,
			"column": 0
		},
		{
			"anchorType": "block",
			"id": "FR2",
			"rawText": null,
			"fullMatch": "^FR2",
			"line": 64,
			"column": 103
		},
		{
			"anchorType": "block",
			"id": "FR4",
			"rawText": null,
			"fullMatch": "^FR4",
			"line": 65,
			"column": 233
		},
		{
			"anchorType": "block",
			"id": "FR5",
			"rawText": null,
			"fullMatch": "^FR5",
			"line": 66,
			"column": 316
		},
		{
			"anchorType": "block",
			"id": "FR6",
			"rawText": null,
			"fullMatch": "^FR6",
			"line": 67,
			"column": 268
		},
		{
			"anchorType": "block",
			"id": "FR7",
			"rawText": null,
			"fullMatch": "^FR7",
			"line": 68,
			"column": 168
		},
		{
			"anchorType": "block",
			"id": "FR8",
			"rawText": null,
			"fullMatch": "^FR8",
			"line": 69,
			"column": 128
		},
		{
			"anchorType": "block",
			"id": "FR9",
			"rawText": null,
			"fullMatch": "^FR9",
			"line": 70,
			"column": 123
		},
		{
			"anchorType": "header",
			"id": "Non-Functional Requirements",
			"rawText": "Non-Functional Requirements",
			"fullMatch": "### Non-Functional Requirements",
			"line": 72,
			"column": 0
		},
		{
			"anchorType": "header",
			"id": "Non-Functional%20Requirements",
			"rawText": "Non-Functional Requirements",
			"fullMatch": "### Non-Functional Requirements",
			"line": 72,
			"column": 0
		},
		{
			"anchorType": "block",
			"id": "NFR3",
			"rawText": null,
			"fullMatch": "^NFR3",
			"line": 73,
			"column": 133
		},
		{
			"anchorType": "block",
			"id": "NFR4",
			"rawText": null,
			"fullMatch": "^NFR4",
			"line": 74,
			"column": 121
		},
		{
			"anchorType": "block",
			"id": "NFR5",
			"rawText": null,
			"fullMatch": "^NFR5",
			"line": 75,
			"column": 147
		},
		{
			"anchorType": "header",
			"id": "Technical Considerations",
			"rawText": "Technical Considerations",
			"fullMatch": "## Technical Considerations",
			"line": 77,
			"column": 0
		},
		{
			"anchorType": "header",
			"id": "Technical%20Considerations",
			"rawText": "Technical Considerations",
			"fullMatch": "## Technical Considerations",
			"line": 77,
			"column": 0
		},
		{
			"anchorType": "block",
			"id": "black-box-interfaces",
			"rawText": null,
			"fullMatch": "^black-box-interfaces",
			"line": 87,
			"column": 117
		},
		{
			"anchorType": "block",
			"id": "data-model-first",
			"rawText": null,
			"fullMatch": "^data-model-first",
			"line": 87,
			"column": 216
		},
		{
			"anchorType": "block",
			"id": "single-responsibility",
			"rawText": null,
			"fullMatch": "^single-responsibility",
			"line": 87,
			"column": 316
		},
		{
			"anchorType": "block",
			"id": "simplicity-first",
			"rawText": null,
			"fullMatch": "^simplicity-first",
			"line": 92,
			"column": 113
		},
		{
			"anchorType": "block",
			"id": "follow-conventions",
			"rawText": null,
			"fullMatch": "^follow-conventions",
			"line": 92,
			"column": 210
		},
		{
			"anchorType": "block",
			"id": "immediate-understanding",
			"rawText": null,
			"fullMatch": "^immediate-understanding",
			"line": 92,
			"column": 314
		},
		{
			"anchorType": "block",
			"id": "extension-over-modification",
			"rawText": null,
			"fullMatch": "^extension-over-modification",
			"line": 92,
			"column": 427
		},
		{
			"anchorType": "header",
			"id": "Feature Epics",
			"rawText": "Feature Epics",
			"fullMatch": "## Feature Epics",
			"line": 96,
			"column": 0
		},
		{
			"anchorType": "header",
			"id": "Feature%20Epics",
			"rawText": "Feature Epics",
			"fullMatch": "## Feature Epics",
			"line": 96,
			"column": 0
		},
		{
			"anchorType": "header",
			"id": "Epic: Citation Manager Test Migration & Content Aggregation",
			"rawText": "Epic: Citation Manager Test Migration & Content Aggregation",
			"fullMatch": "### Epic: Citation Manager Test Migration & Content Aggregation",
			"line": 98,
			"column": 0
		},
		{
			"anchorType": "header",
			"id": "Epic%20Citation%20Manager%20Test%20Migration%20&%20Content%20Aggregation",
			"rawText": "Epic: Citation Manager Test Migration & Content Aggregation",
			"fullMatch": "### Epic: Citation Manager Test Migration & Content Aggregation",
			"line": 98,
			"column": 0
		},
		{
			"anchorType": "header",
			"id": "Story 1.4: Migrate and Validate `citation-manager` Test Suite [SUPERSEDED]",
			"rawText": "Story 1.4: Migrate and Validate `citation-manager` Test Suite [SUPERSEDED]",
			"fullMatch": "### Story 1.4: Migrate and Validate `citation-manager` Test Suite [SUPERSEDED]",
			"line": 106,
			"column": 0
		},
		{
			"anchorType": "header",
			"id": "Story%201.4%20Migrate%20and%20Validate%20`citation-manager`%20Test%20Suite%20[SUPERSEDED]",
			"rawText": "Story 1.4: Migrate and Validate `citation-manager` Test Suite [SUPERSEDED]",
			"fullMatch": "### Story 1.4: Migrate and Validate `citation-manager` Test Suite [SUPERSEDED]",
			"line": 106,
			"column": 0
		},
		{
			"anchorType": "header",
			"id": "Story 1.4a: Migrate citation-manager Test Suite to Vitest",
			"rawText": "Story 1.4a: Migrate citation-manager Test Suite to Vitest",
			"fullMatch": "### Story 1.4a: Migrate citation-manager Test Suite to Vitest",
			"line": 121,
			"column": 0
		},
		{
			"anchorType": "header",
			"id": "Story%201.4a%20Migrate%20citation-manager%20Test%20Suite%20to%20Vitest",
			"rawText": "Story 1.4a: Migrate citation-manager Test Suite to Vitest",
			"fullMatch": "### Story 1.4a: Migrate citation-manager Test Suite to Vitest",
			"line": 121,
			"column": 0
		},
		{
			"anchorType": "header",
			"id": "Story 1.4a Acceptance Criteria",
			"rawText": "Story 1.4a Acceptance Criteria",
			"fullMatch": "#### Story 1.4a Acceptance Criteria",
			"line": 127,
			"column": 0
		},
		{
			"anchorType": "header",
			"id": "Story%201.4a%20Acceptance%20Criteria",
			"rawText": "Story 1.4a Acceptance Criteria",
			"fullMatch": "#### Story 1.4a Acceptance Criteria",
			"line": 127,
			"column": 0
		},
		{
			"anchorType": "block",
			"id": "US1-4aAC1",
			"rawText": null,
			"fullMatch": "^US1-4aAC1",
			"line": 129,
			"column": 157
		},
		{
			"anchorType": "block",
			"id": "US1-4aAC2",
			"rawText": null,
			"fullMatch": "^US1-4aAC2",
			"line": 130,
			"column": 155
		},
		{
			"anchorType": "block",
			"id": "US1-4aAC3",
			"rawText": null,
			"fullMatch": "^US1-4aAC3",
			"line": 131,
			"column": 153
		},
		{
			"anchorType": "block",
			"id": "US1-4aAC4",
			"rawText": null,
			"fullMatch": "^US1-4aAC4",
			"line": 132,
			"column": 152
		},
		{
			"anchorType": "block",
			"id": "US1-4aAC5",
			"rawText": null,
			"fullMatch": "^US1-4aAC5",
			"line": 133,
			"column": 152
		},
		{
			"anchorType": "block",
			"id": "US1-4aAC6",
			"rawText": null,
			"fullMatch": "^US1-4aAC6",
			"line": 134,
			"column": 165
		},
		{
			"anchorType": "block",
			"id": "FR2",
			"rawText": null,
			"fullMatch": "^FR2",
			"line": 139,
			"column": 30
		},
		{
			"anchorType": "block",
			"id": "FR9",
			"rawText": null,
			"fullMatch": "^FR9",
			"line": 139,
			"column": 45
		},
		{
			"anchorType": "header",
			"id": "Story 1.4b: Refactor citation-manager Components for Dependency Injection",
			"rawText": "Story 1.4b: Refactor citation-manager Components for Dependency Injection",
			"fullMatch": "### Story 1.4b: Refactor citation-manager Components for Dependency Injection",
			"line": 144,
			"column": 0
		},
		{
			"anchorType": "header",
			"id": "Story%201.4b%20Refactor%20citation-manager%20Components%20for%20Dependency%20Injection",
			"rawText": "Story 1.4b: Refactor citation-manager Components for Dependency Injection",
			"fullMatch": "### Story 1.4b: Refactor citation-manager Components for Dependency Injection",
			"line": 144,
			"column": 0
		},
		{
			"anchorType": "header",
			"id": "Story 1.4b Acceptance Criteria",
			"rawText": "Story 1.4b Acceptance Criteria",
			"fullMatch": "#### Story 1.4b Acceptance Criteria",
			"line": 150,
			"column": 0
		},
		{
			"anchorType": "header",
			"id": "Story%201.4b%20Acceptance%20Criteria",
			"rawText": "Story 1.4b Acceptance Criteria",
			"fullMatch": "#### Story 1.4b Acceptance Criteria",
			"line": 150,
			"column": 0
		},
		{
			"anchorType": "block",
			"id": "US1-4bAC1",
			"rawText": null,
			"fullMatch": "^US1-4bAC1",
			"line": 152,
			"column": 162
		},
		{
			"anchorType": "block",
			"id": "US1-4bAC2",
			"rawText": null,
			"fullMatch": "^US1-4bAC2",
			"line": 153,
			"column": 162
		},
		{
			"anchorType": "block",
			"id": "US1-4bAC3",
			"rawText": null,
			"fullMatch": "^US1-4bAC3",
			"line": 154,
			"column": 127
		},
		{
			"anchorType": "block",
			"id": "US1-4bAC4",
			"rawText": null,
			"fullMatch": "^US1-4bAC4",
			"line": 155,
			"column": 194
		},
		{
			"anchorType": "block",
			"id": "US1-4bAC5",
			"rawText": null,
			"fullMatch": "^US1-4bAC5",
			"line": 156,
			"column": 234
		},
		{
			"anchorType": "block",
			"id": "US1-4bAC6",
			"rawText": null,
			"fullMatch": "^US1-4bAC6",
			"line": 157,
			"column": 187
		},
		{
			"anchorType": "block",
			"id": "FR2",
			"rawText": null,
			"fullMatch": "^FR2",
			"line": 162,
			"column": 30
		},
		{
			"anchorType": "block",
			"id": "FR8",
			"rawText": null,
			"fullMatch": "^FR8",
			"line": 162,
			"column": 45
		},
		{
			"anchorType": "header",
			"id": "Story 1.5: Implement a Cache for Parsed File Objects",
			"rawText": "Story 1.5: Implement a Cache for Parsed File Objects",
			"fullMatch": "### Story 1.5: Implement a Cache for Parsed File Objects",
			"line": 166,
			"column": 0
		},
		{
			"anchorType": "header",
			"id": "Story%201.5%20Implement%20a%20Cache%20for%20Parsed%20File%20Objects",
			"rawText": "Story 1.5: Implement a Cache for Parsed File Objects",
			"fullMatch": "### Story 1.5: Implement a Cache for Parsed File Objects",
			"line": 166,
			"column": 0
		},
		{
			"anchorType": "header",
			"id": "Story 1.5 Acceptance Criteria",
			"rawText": "Story 1.5 Acceptance Criteria",
			"fullMatch": "#### Story 1.5 Acceptance Criteria",
			"line": 172,
			"column": 0
		},
		{
			"anchorType": "header",
			"id": "Story%201.5%20Acceptance%20Criteria",
			"rawText": "Story 1.5 Acceptance Criteria",
			"fullMatch": "#### Story 1.5 Acceptance Criteria",
			"line": 172,
			"column": 0
		},
		{
			"anchorType": "block",
			"id": "US1-5AC1",
			"rawText": null,
			"fullMatch": "^US1-5AC1",
			"line": 174,
			"column": 257
		},
		{
			"anchorType": "block",
			"id": "US1-5AC2",
			"rawText": null,
			"fullMatch": "^US1-5AC2",
			"line": 175,
			"column": 219
		},
		{
			"anchorType": "block",
			"id": "US1-5AC3",
			"rawText": null,
			"fullMatch": "^US1-5AC3",
			"line": 176,
			"column": 116
		},
		{
			"anchorType": "block",
			"id": "US1-5AC4",
			"rawText": null,
			"fullMatch": "^US1-5AC4",
			"line": 177,
			"column": 173
		},
		{
			"anchorType": "block",
			"id": "US1-5AC5",
			"rawText": null,
			"fullMatch": "^US1-5AC5",
			"line": 178,
			"column": 161
		},
		{
			"anchorType": "block",
			"id": "FR8",
			"rawText": null,
			"fullMatch": "^FR8",
			"line": 183,
			"column": 30
		},
		{
			"anchorType": "block",
			"id": "NFR5",
			"rawText": null,
			"fullMatch": "^NFR5",
			"line": 184,
			"column": 34
		},
		{
			"anchorType": "block",
			"id": "dependency-abstraction",
			"rawText": null,
			"fullMatch": "^dependency-abstraction",
			"line": 197,
			"column": 85
		},
		{
			"anchorType": "block",
			"id": "single-responsibility",
			"rawText": null,
			"fullMatch": "^single-responsibility",
			"line": 198,
			"column": 84
		},
		{
			"anchorType": "block",
			"id": "one-source-of-truth",
			"rawText": null,
			"fullMatch": "^one-source-of-truth",
			"line": 199,
			"column": 82
		},
		{
			"anchorType": "header",
			"id": "Story 2.1: Enhance Parser to Handle Full-File and Section Links",
			"rawText": "Story 2.1: Enhance Parser to Handle Full-File and Section Links",
			"fullMatch": "### Story 2.1: Enhance Parser to Handle Full-File and Section Links",
			"line": 202,
			"column": 0
		},
		{
			"anchorType": "header",
			"id": "Story%202.1%20Enhance%20Parser%20to%20Handle%20Full-File%20and%20Section%20Links",
			"rawText": "Story 2.1: Enhance Parser to Handle Full-File and Section Links",
			"fullMatch": "### Story 2.1: Enhance Parser to Handle Full-File and Section Links",
			"line": 202,
			"column": 0
		},
		{
			"anchorType": "header",
			"id": "Story 2.1 Acceptance Criteria",
			"rawText": "Story 2.1 Acceptance Criteria",
			"fullMatch": "#### Story 2.1 Acceptance Criteria",
			"line": 208,
			"column": 0
		},
		{
			"anchorType": "header",
			"id": "Story%202.1%20Acceptance%20Criteria",
			"rawText": "Story 2.1 Acceptance Criteria",
			"fullMatch": "#### Story 2.1 Acceptance Criteria",
			"line": 208,
			"column": 0
		},
		{
			"anchorType": "block",
			"id": "US2-1AC1",
			"rawText": null,
			"fullMatch": "^US2-1AC1",
			"line": 209,
			"column": 195
		},
		{
			"anchorType": "block",
			"id": "US2-1AC2",
			"rawText": null,
			"fullMatch": "^US2-1AC2",
			"line": 210,
			"column": 286
		},
		{
			"anchorType": "block",
			"id": "US2-1AC3",
			"rawText": null,
			"fullMatch": "^US2-1AC3",
			"line": 211,
			"column": 150
		},
		{
			"anchorType": "block",
			"id": "data-model-first",
			"rawText": null,
			"fullMatch": "^data-model-first",
			"line": 216,
			"column": 113
		},
		{
			"anchorType": "block",
			"id": "primitive-first-design",
			"rawText": null,
			"fullMatch": "^primitive-first-design",
			"line": 216,
			"column": 214
		},
		{
			"anchorType": "block",
			"id": "illegal-states-unrepresentable",
			"rawText": null,
			"fullMatch": "^illegal-states-unrepresentable",
			"line": 216,
			"column": 329
		},
		{
			"anchorType": "block",
			"id": "explicit-relationships",
			"rawText": null,
			"fullMatch": "^explicit-relationships",
			"line": 216,
			"column": 444
		},
		{
			"anchorType": "block",
			"id": "FR4",
			"rawText": null,
			"fullMatch": "^FR4",
			"line": 234,
			"column": 30
		},
		{
			"anchorType": "header",
			"id": "Story 2.2: Implement Unified Content Extractor with Metadata",
			"rawText": "Story 2.2: Implement Unified Content Extractor with Metadata",
			"fullMatch": "### Story 2.2: Implement Unified Content Extractor with Metadata",
			"line": 236,
			"column": 0
		},
		{
			"anchorType": "header",
			"id": "Story%202.2%20Implement%20Unified%20Content%20Extractor%20with%20Metadata",
			"rawText": "Story 2.2: Implement Unified Content Extractor with Metadata",
			"fullMatch": "### Story 2.2: Implement Unified Content Extractor with Metadata",
			"line": 236,
			"column": 0
		},
		{
			"anchorType": "header",
			"id": "Story 2.2 Acceptance Criteria",
			"rawText": "Story 2.2 Acceptance Criteria",
			"fullMatch": "#### Story 2.2 Acceptance Criteria",
			"line": 242,
			"column": 0
		},
		{
			"anchorType": "header",
			"id": "Story%202.2%20Acceptance%20Criteria",
			"rawText": "Story 2.2 Acceptance Criteria",
			"fullMatch": "#### Story 2.2 Acceptance Criteria",
			"line": 242,
			"column": 0
		},
		{
			"anchorType": "block",
			"id": "US2-2AC1",
			"rawText": null,
			"fullMatch": "^US2-2AC1",
			"line": 243,
			"column": 175
		},
		{
			"anchorType": "block",
			"id": "US2-2AC2",
			"rawText": null,
			"fullMatch": "^US2-2AC2",
			"line": 244,
			"column": 137
		},
		{
			"anchorType": "block",
			"id": "US2-2AC3",
			"rawText": null,
			"fullMatch": "^US2-2AC3",
			"line": 245,
			"column": 90
		},
		{
			"anchorType": "block",
			"id": "US2-2AC4",
			"rawText": null,
			"fullMatch": "^US2-2AC4",
			"line": 246,
			"column": 169
		},
		{
			"anchorType": "block",
			"id": "black-box-interfaces",
			"rawText": null,
			"fullMatch": "^black-box-interfaces",
			"line": 250,
			"column": 117
		},
		{
			"anchorType": "block",
			"id": "data-model-first",
			"rawText": null,
			"fullMatch": "^data-model-first",
			"line": 250,
			"column": 216
		},
		{
			"anchorType": "block",
			"id": "single-responsibility",
			"rawText": null,
			"fullMatch": "^single-responsibility",
			"line": 250,
			"column": 316
		},
		{
			"anchorType": "block",
			"id": "anchor-id",
			"rawText": null,
			"fullMatch": "^anchor-id",
			"line": 279,
			"column": 70
		},
		{
			"anchorType": "block",
			"id": "anchor-id",
			"rawText": null,
			"fullMatch": "^anchor-id",
			"line": 282,
			"column": 94
		},
		{
			"anchorType": "block",
			"id": "anchor-id",
			"rawText": null,
			"fullMatch": "^anchor-id",
			"line": 287,
			"column": 46
		},
		{
			"anchorType": "block",
			"id": "anchor-id",
			"rawText": null,
			"fullMatch": "^anchor-id",
			"line": 288,
			"column": 20
		},
		{
			"anchorType": "block",
			"id": "==**text**==",
			"rawText": "text",
			"fullMatch": "==**text**==",
			"line": 289,
			"column": 23
		},
		{
			"anchorType": "block",
			"id": "FR5",
			"rawText": null,
			"fullMatch": "^FR5",
			"line": 297,
			"column": 30
		},
		{
			"anchorType": "header",
			"id": "Story 2.3: Add `--extract-context` Flag to `validate` Command",
			"rawText": "Story 2.3: Add `--extract-context` Flag to `validate` Command",
			"fullMatch": "### Story 2.3: Add `--extract-context` Flag to `validate` Command",
			"line": 299,
			"column": 0
		},
		{
			"anchorType": "header",
			"id": "Story%202.3%20Add%20`--extract-context`%20Flag%20to%20`validate`%20Command",
			"rawText": "Story 2.3: Add `--extract-context` Flag to `validate` Command",
			"fullMatch": "### Story 2.3: Add `--extract-context` Flag to `validate` Command",
			"line": 299,
			"column": 0
		},
		{
			"anchorType": "header",
			"id": "Story 2.3 Acceptance Criteria",
			"rawText": "Story 2.3 Acceptance Criteria",
			"fullMatch": "#### Story 2.3 Acceptance Criteria",
			"line": 305,
			"column": 0
		},
		{
			"anchorType": "header",
			"id": "Story%202.3%20Acceptance%20Criteria",
			"rawText": "Story 2.3 Acceptance Criteria",
			"fullMatch": "#### Story 2.3 Acceptance Criteria",
			"line": 305,
			"column": 0
		},
		{
			"anchorType": "block",
			"id": "US2-3AC1",
			"rawText": null,
			"fullMatch": "^US2-3AC1",
			"line": 306,
			"column": 219
		},
		{
			"anchorType": "block",
			"id": "US2-3AC2",
			"rawText": null,
			"fullMatch": "^US2-3AC2",
			"line": 307,
			"column": 184
		},
		{
			"anchorType": "block",
			"id": "US2-3AC3",
			"rawText": null,
			"fullMatch": "^US2-3AC3",
			"line": 308,
			"column": 180
		},
		{
			"anchorType": "block",
			"id": "simplicity-first",
			"rawText": null,
			"fullMatch": "^simplicity-first",
			"line": 312,
			"column": 113
		},
		{
			"anchorType": "block",
			"id": "follow-conventions",
			"rawText": null,
			"fullMatch": "^follow-conventions",
			"line": 312,
			"column": 210
		},
		{
			"anchorType": "block",
			"id": "immediate-understanding",
			"rawText": null,
			"fullMatch": "^immediate-understanding",
			"line": 312,
			"column": 314
		},
		{
			"anchorType": "block",
			"id": "extension-over-modification",
			"rawText": null,
			"fullMatch": "^extension-over-modification",
			"line": 312,
			"column": 427
		},
		{
			"anchorType": "block",
			"id": "FR6",
			"rawText": null,
			"fullMatch": "^FR6",
			"line": 315,
			"column": 30
		},
		{
			"anchorType": "block",
			"id": "FR7",
			"rawText": null,
			"fullMatch": "^FR7",
			"line": 315,
			"column": 45
		},
		{
			"anchorType": "header",
			"id": "Feature Validation Approach",
			"rawText": "Feature Validation Approach",
			"fullMatch": "## Feature Validation Approach",
			"line": 319,
			"column": 0
		},
		{
			"anchorType": "header",
			"id": "Feature%20Validation%20Approach",
			"rawText": "Feature Validation Approach",
			"fullMatch": "## Feature Validation Approach",
			"line": 319,
			"column": 0
		},
		{
			"anchorType": "header",
			"id": "Related Documentation",
			"rawText": "Related Documentation",
			"fullMatch": "## Related Documentation",
			"line": 329,
			"column": 0
		},
		{
			"anchorType": "header",
			"id": "Related%20Documentation",
			"rawText": "Related Documentation",
			"fullMatch": "## Related Documentation",
			"line": 329,
			"column": 0
		}
	]
}
